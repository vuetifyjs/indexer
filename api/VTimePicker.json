{
  "displayName": "VTimePicker",
  "fileName": "VTimePicker",
  "pathName": "v-time-picker",
  "props": {
    "readonly": {
      "text": "boolean | undefined",
      "source": "VTimePicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Puts picker in readonly state."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "border": {
      "text": "string | number | boolean | undefined",
      "source": "border",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Applies utility border classes to the component. To use it, you need to omit the `border-` prefix, (for example use `border-sm` as `border=\"sm\"`).  Find a list of the built-in border classes on the [borders page](/styles/borders)."
      },
      "descriptionSource": {
        "en": "border"
      }
    },
    "height": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "maxHeight": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the maximum height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "maxWidth": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the maximum width for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "minHeight": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the minimum height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "minWidth": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the minimum width for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "width": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Width of the picker."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "elevation": {
      "text": "string | number | undefined",
      "source": "elevation",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
      },
      "descriptionSource": {
        "en": "elevation"
      }
    },
    "disabled": {
      "text": "boolean | undefined",
      "source": "VTimePicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Removes the ability to click or target the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "location": {
      "text": "Anchor | null | undefined",
      "source": "location",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "null",
          "type": "UNSUPPORTED",
          "formatted": "null"
        },
        {
          "text": "Anchor",
          "source": "vuetify/src/util/anchor.ts#L8-L14",
          "type": "ref",
          "ref": "Anchor",
          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
        }
      ],
      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n",
      "optional": false,
      "description": {
        "en": "Specifies the component's location. Can combine by using a space separated string."
      },
      "descriptionSource": {
        "en": "location"
      }
    },
    "position": {
      "text": "\"fixed\" | \"static\" | \"relative\" | \"absolute\" | \"sticky\" | undefined",
      "source": "position",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "\"fixed\"",
          "type": "string",
          "literal": "\"fixed\"",
          "formatted": "\"fixed\""
        },
        {
          "text": "\"static\"",
          "type": "string",
          "literal": "\"static\"",
          "formatted": "\"static\""
        },
        {
          "text": "\"relative\"",
          "type": "string",
          "literal": "\"relative\"",
          "formatted": "\"relative\""
        },
        {
          "text": "\"absolute\"",
          "type": "string",
          "literal": "\"absolute\"",
          "formatted": "\"absolute\""
        },
        {
          "text": "\"sticky\"",
          "type": "string",
          "literal": "\"sticky\"",
          "formatted": "\"sticky\""
        }
      ],
      "formatted": "'fixed' | 'static' | 'relative' | 'absolute' | 'sticky'\n",
      "optional": false,
      "description": {
        "en": "Sets the position for the component."
      },
      "descriptionSource": {
        "en": "position"
      }
    },
    "rounded": {
      "text": "string | number | boolean | undefined",
      "source": "rounded",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "description": {
        "en": "Designates the **border-radius** applied to the component. This can be **0**, **xs**, **sm**, true, **lg**, **xl**, **pill**, **circle**, and **shaped**. Find more information on available border radius classes on the [Border Radius page](/styles/border-radius)."
      },
      "descriptionSource": {
        "en": "rounded"
      }
    },
    "tile": {
      "text": "boolean | undefined",
      "source": "rounded",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Removes any applied **border-radius** from the component."
      },
      "descriptionSource": {
        "en": "rounded"
      }
    },
    "tag": {
      "text": "string | JSXComponent | undefined",
      "source": "tag",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "JSXComponent",
          "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
          "type": "anyOf",
          "items": [
            {
              "text": "new () => any",
              "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
              "type": "constructor",
              "formatted": "new () => any"
            },
            {
              "text": "FunctionalComponent<any, {}, any, {}>",
              "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
              "type": "ref",
              "ref": "FunctionalComponent",
              "formatted": "FunctionalComponent"
            }
          ],
          "formatted": "(new () => any) | FunctionalComponent"
        }
      ],
      "formatted": "string | (new () => any) | FunctionalComponent\n",
      "optional": false,
      "default": "'div'",
      "description": {
        "en": "Specify a custom tag used on the root element."
      },
      "descriptionSource": {
        "en": "tag"
      }
    },
    "theme": {
      "text": "string | undefined",
      "source": "theme",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Specify a theme for this component and all of its children."
      },
      "descriptionSource": {
        "en": "theme"
      }
    },
    "color": {
      "text": "string | undefined",
      "source": "VSheet",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "max": {
      "text": "string | undefined",
      "source": "VTimePicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Maximum allowed time."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "min": {
      "text": "string | undefined",
      "source": "VTimePicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Minimum allowed time."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "title": {
      "text": "string | undefined",
      "source": "VPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "default": "'$vuetify.timePicker.title'",
      "description": {
        "en": "Specify a title text for the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "bgColor": {
      "text": "string | undefined",
      "source": "VPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "divided": {
      "text": "boolean | undefined",
      "source": "VPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Adds a divider between the header and controls."
      },
      "descriptionSource": {
        "en": "VPicker"
      }
    },
    "hideHeader": {
      "text": "boolean | undefined",
      "source": "VPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Hide the picker header."
      },
      "descriptionSource": {
        "en": "VPicker"
      }
    },
    "modelValue": {
      "text": "any",
      "source": "VTimePicker",
      "type": "any",
      "formatted": "any\n",
      "optional": false,
      "description": {
        "en": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "viewMode": {
      "text": "VTimePickerViewMode | undefined",
      "source": "VTimePicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "VTimePickerViewMode",
          "source": "vuetify/src/labs/VTimePicker/shared.ts#L1-L1",
          "type": "anyOf",
          "items": [
            {
              "text": "\"hour\"",
              "type": "string",
              "literal": "\"hour\"",
              "formatted": "\"hour\""
            },
            {
              "text": "\"minute\"",
              "type": "string",
              "literal": "\"minute\"",
              "formatted": "\"minute\""
            },
            {
              "text": "\"second\"",
              "type": "string",
              "literal": "\"second\"",
              "formatted": "\"second\""
            }
          ],
          "formatted": "\"hour\" | \"minute\" | \"second\""
        }
      ],
      "formatted": "'hour' | 'minute' | 'second'\n",
      "optional": false,
      "default": "'hour'",
      "description": {
        "en": "The current view mode of the picker.`"
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "ampmInTitle": {
      "text": "boolean | undefined",
      "source": "VTimePicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Place AM/PM switch in title, not near the clock."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "format": {
      "text": "\"ampm\" | \"24hr\" | undefined",
      "source": "VTimePicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "\"ampm\"",
          "type": "string",
          "literal": "\"ampm\"",
          "formatted": "\"ampm\""
        },
        {
          "text": "\"24hr\"",
          "type": "string",
          "literal": "\"24hr\"",
          "formatted": "\"24hr\""
        }
      ],
      "formatted": "'ampm' | '24hr'\n",
      "optional": false,
      "default": "'ampm'",
      "description": {
        "en": "Defines the format of a time displayed in picker. Available options are `ampm` and `24hr`."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "scrollable": {
      "text": "boolean | undefined",
      "source": "VTimePicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Allows changing hour/minute with mouse scroll."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "useSeconds": {
      "text": "boolean | undefined",
      "source": "VTimePicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Toggles the use of seconds in picker."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "allowedHours": {
      "text": "number[] | AllowFunction | undefined",
      "source": "VTimePicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "number[]",
          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
          "type": "array",
          "items": [
            {
              "text": "number",
              "type": "number",
              "formatted": "number"
            }
          ],
          "formatted": "number[]"
        },
        {
          "text": "AllowFunction",
          "source": "vuetify/src/labs/VTimePicker/VTimePicker.tsx#L24-L24",
          "type": "function",
          "parameters": [
            {
              "name": "val",
              "optional": false,
              "text": "number",
              "type": "number",
              "formatted": "number"
            }
          ],
          "returnType": {
            "text": "boolean",
            "type": "boolean",
            "formatted": "boolean"
          },
          "formatted": "(val: number) => boolean"
        }
      ],
      "formatted": "number[] | ((val: number) => boolean)\n",
      "optional": false,
      "description": {
        "en": "Restricts which hours can be selected."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "allowedMinutes": {
      "text": "number[] | AllowFunction | undefined",
      "source": "VTimePicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "number[]",
          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
          "type": "array",
          "items": [
            {
              "text": "number",
              "type": "number",
              "formatted": "number"
            }
          ],
          "formatted": "number[]"
        },
        {
          "text": "AllowFunction",
          "source": "vuetify/src/labs/VTimePicker/VTimePicker.tsx#L24-L24",
          "type": "function",
          "parameters": [
            {
              "name": "val",
              "optional": false,
              "text": "number",
              "type": "number",
              "formatted": "number"
            }
          ],
          "returnType": {
            "text": "boolean",
            "type": "boolean",
            "formatted": "boolean"
          },
          "formatted": "(val: number) => boolean"
        }
      ],
      "formatted": "number[] | ((val: number) => boolean)\n",
      "optional": false,
      "description": {
        "en": "Restricts which minutes can be selected."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "allowedSeconds": {
      "text": "number[] | AllowFunction | undefined",
      "source": "VTimePicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "number[]",
          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
          "type": "array",
          "items": [
            {
              "text": "number",
              "type": "number",
              "formatted": "number"
            }
          ],
          "formatted": "number[]"
        },
        {
          "text": "AllowFunction",
          "source": "vuetify/src/labs/VTimePicker/VTimePicker.tsx#L24-L24",
          "type": "function",
          "parameters": [
            {
              "name": "val",
              "optional": false,
              "text": "number",
              "type": "number",
              "formatted": "number"
            }
          ],
          "returnType": {
            "text": "boolean",
            "type": "boolean",
            "formatted": "boolean"
          },
          "formatted": "(val: number) => boolean"
        }
      ],
      "formatted": "number[] | ((val: number) => boolean)\n",
      "optional": false,
      "description": {
        "en": "Restricts which seconds can be selected."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    }
  },
  "events": {
    "update:modelValue": {
      "text": "[val: string]",
      "type": "array",
      "items": [
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "length": 1,
      "formatted": "[string]\n",
      "optional": false,
      "description": {
        "en": "Event that is emitted when the component's model changes."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "update:viewMode": {
      "text": "[val: VTimePickerViewMode]",
      "type": "array",
      "items": [
        {
          "text": "VTimePickerViewMode",
          "source": "vuetify/src/labs/VTimePicker/shared.ts#L1-L1",
          "type": "anyOf",
          "items": [
            {
              "text": "\"hour\"",
              "type": "string",
              "literal": "\"hour\"",
              "formatted": "\"hour\""
            },
            {
              "text": "\"minute\"",
              "type": "string",
              "literal": "\"minute\"",
              "formatted": "\"minute\""
            },
            {
              "text": "\"second\"",
              "type": "string",
              "literal": "\"second\"",
              "formatted": "\"second\""
            }
          ],
          "formatted": "\"hour\" | \"minute\" | \"second\""
        }
      ],
      "length": 1,
      "formatted": "['hour' | 'minute' | 'second']\n",
      "optional": false,
      "description": {
        "en": "Emitted when the view mode changes."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "update:hour": {
      "text": "[val: number]",
      "type": "array",
      "items": [
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "length": 1,
      "formatted": "[number]\n",
      "optional": false,
      "description": {
        "en": "Emitted when user selects the hour."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "update:minute": {
      "text": "[val: number]",
      "type": "array",
      "items": [
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "length": 1,
      "formatted": "[number]\n",
      "optional": false,
      "description": {
        "en": "Emitted when user selects the minute."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "update:period": {
      "text": "[val: Period]",
      "type": "array",
      "items": [
        {
          "text": "Period",
          "source": "vuetify/src/labs/VTimePicker/VTimePicker.tsx#L23-L23",
          "type": "anyOf",
          "items": [
            {
              "text": "\"am\"",
              "type": "string",
              "literal": "\"am\"",
              "formatted": "\"am\""
            },
            {
              "text": "\"pm\"",
              "type": "string",
              "literal": "\"pm\"",
              "formatted": "\"pm\""
            }
          ],
          "formatted": "\"am\" | \"pm\""
        }
      ],
      "length": 1,
      "formatted": "['am' | 'pm']\n",
      "optional": false,
      "description": {
        "en": "Emitted when user clicks the AM/PM button."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "update:second": {
      "text": "[val: number]",
      "type": "array",
      "items": [
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "length": 1,
      "formatted": "[number]\n",
      "optional": false,
      "description": {
        "en": "Emitted when user selects the second."
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    }
  },
  "slots": {
    "default": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "Displayed below the clock, can be used for example for adding action button (`OK` and `Cancel`)"
      },
      "descriptionSource": {
        "en": "VTimePicker"
      }
    },
    "title": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "Slot for the component's title content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "actions": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "Slot for customizing the content in the actions area"
      },
      "descriptionSource": {
        "en": "VPicker"
      }
    }
  },
  "exposed": {},
  "sass": {}
}