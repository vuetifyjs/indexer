{
  "displayName": "VListItem",
  "fileName": "VListItem",
  "pathName": "v-list-item",
  "props": {
    "replace": {
      "text": "boolean | undefined",
      "source": "router",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [replace](https://router.vuejs.org/api/#replace) prop on the vue-router documentation."
      },
      "descriptionSource": {
        "en": "router"
      }
    },
    "link": {
      "text": "boolean | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "description": {
        "en": "Designates that the component is a link. This is automatic when using the href or to prop."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "active": {
      "text": "boolean | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "description": {
        "en": "Controls the **active** state of the item. This is typically used to highlight the component."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "activeColor": {
      "text": "string | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "The applied color when the component is in an active state."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "baseColor": {
      "text": "string | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Sets the color of component when not focused."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "prependIcon": {
      "text": "IconValue | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "IconValue",
          "source": "vuetify/src/composables/icons.tsx#L12-L15",
          "type": "anyOf",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "(string | [path: string, opacity: number])[]",
              "source": "typescript/lib/lib.es5.d.ts#L4-L4",
              "type": "array",
              "items": [
                {
                  "text": "string",
                  "type": "string",
                  "formatted": "string"
                },
                {
                  "text": "[path: string, opacity: number]",
                  "type": "array",
                  "items": [
                    {
                      "text": "string",
                      "type": "string",
                      "formatted": "string"
                    },
                    {
                      "text": "number",
                      "type": "number",
                      "formatted": "number"
                    }
                  ],
                  "length": 2,
                  "formatted": "[string, number]"
                }
              ],
              "formatted": "(string | [string, number])[]"
            },
            {
              "text": "JSXComponent",
              "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
              "type": "anyOf",
              "items": [
                {
                  "text": "new () => any",
                  "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
                  "type": "constructor",
                  "formatted": "new () => any"
                },
                {
                  "text": "FunctionalComponent<any, {}, any, {}>",
                  "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
                  "type": "ref",
                  "ref": "FunctionalComponent",
                  "formatted": "FunctionalComponent"
                }
              ],
              "formatted": "(new () => any) | FunctionalComponent"
            }
          ],
          "formatted": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
        }
      ],
      "formatted": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n",
      "optional": false,
      "description": {
        "en": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "appendIcon": {
      "text": "IconValue | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "IconValue",
          "source": "vuetify/src/composables/icons.tsx#L12-L15",
          "type": "anyOf",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "(string | [path: string, opacity: number])[]",
              "source": "typescript/lib/lib.es5.d.ts#L4-L4",
              "type": "array",
              "items": [
                {
                  "text": "string",
                  "type": "string",
                  "formatted": "string"
                },
                {
                  "text": "[path: string, opacity: number]",
                  "type": "array",
                  "items": [
                    {
                      "text": "string",
                      "type": "string",
                      "formatted": "string"
                    },
                    {
                      "text": "number",
                      "type": "number",
                      "formatted": "number"
                    }
                  ],
                  "length": 2,
                  "formatted": "[string, number]"
                }
              ],
              "formatted": "(string | [string, number])[]"
            },
            {
              "text": "JSXComponent",
              "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
              "type": "anyOf",
              "items": [
                {
                  "text": "new () => any",
                  "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
                  "type": "constructor",
                  "formatted": "new () => any"
                },
                {
                  "text": "FunctionalComponent<any, {}, any, {}>",
                  "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
                  "type": "ref",
                  "ref": "FunctionalComponent",
                  "formatted": "FunctionalComponent"
                }
              ],
              "formatted": "(new () => any) | FunctionalComponent"
            }
          ],
          "formatted": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
        }
      ],
      "formatted": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n",
      "optional": false,
      "description": {
        "en": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "slim": {
      "text": "boolean | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Reduces horizontal spacing for badges, icons, tooltips, and avatars to create a more compact visual representation."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "ripple": {
      "text": "boolean | { class: string; } | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        },
        {
          "text": "{ class: string; }",
          "source": "vuetify/src/directives/ripple/index.ts#L28-L28",
          "type": "object",
          "properties": {
            "class": {
              "text": "string",
              "type": "string",
              "formatted": "string",
              "optional": false
            }
          },
          "formatted": "{ class: string }"
        }
      ],
      "formatted": "boolean | { class: string }\n",
      "optional": false,
      "default": true,
      "description": {
        "en": "Applies the [v-ripple](/directives/ripple) directive."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "value": {
      "text": "any",
      "source": "VListItem",
      "type": "any",
      "formatted": "any\n",
      "optional": false,
      "description": {
        "en": "The value used for selection. Obtained from [`v-list`](/api/v-list)'s `v-model:selected` when the item is selected."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "border": {
      "text": "string | number | boolean | undefined",
      "source": "border",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Applies utility border classes to the component. To use it, you need to omit the `border-` prefix, (for example use `border-sm` as `border=\"sm\"`).  Find a list of the built-in border classes on the [borders page](/styles/borders)."
      },
      "descriptionSource": {
        "en": "border"
      }
    },
    "density": {
      "text": "Density | undefined",
      "source": "density",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "Density",
          "source": "vuetify/src/composables/density.ts#L12-L12",
          "type": "anyOf",
          "items": [
            {
              "text": "null",
              "type": "UNSUPPORTED",
              "formatted": "null"
            },
            {
              "text": "\"default\"",
              "type": "string",
              "literal": "\"default\"",
              "formatted": "\"default\""
            },
            {
              "text": "\"comfortable\"",
              "type": "string",
              "literal": "\"comfortable\"",
              "formatted": "\"comfortable\""
            },
            {
              "text": "\"compact\"",
              "type": "string",
              "literal": "\"compact\"",
              "formatted": "\"compact\""
            }
          ],
          "formatted": "\"default\" | \"comfortable\" | \"compact\""
        }
      ],
      "formatted": "'default' | 'comfortable' | 'compact'\n",
      "optional": false,
      "default": "'default'",
      "description": {
        "en": "Adjusts the vertical height used by the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "height": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "maxHeight": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the maximum height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "maxWidth": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the maximum width for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "minHeight": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the minimum height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "minWidth": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the minimum width for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "width": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the width for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "elevation": {
      "text": "string | number | undefined",
      "source": "elevation",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
      },
      "descriptionSource": {
        "en": "elevation"
      }
    },
    "disabled": {
      "text": "boolean | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Removes the ability to click or target the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "rounded": {
      "text": "string | number | boolean | undefined",
      "source": "rounded",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "description": {
        "en": "Designates the **border-radius** applied to the component. This can be **0**, **xs**, **sm**, true, **lg**, **xl**, **pill**, **circle**, and **shaped**. Find more information on available border radius classes on the [Border Radius page](/styles/border-radius)."
      },
      "descriptionSource": {
        "en": "rounded"
      }
    },
    "tile": {
      "text": "boolean | undefined",
      "source": "rounded",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Removes any applied **border-radius** from the component."
      },
      "descriptionSource": {
        "en": "rounded"
      }
    },
    "href": {
      "text": "string | undefined",
      "source": "router",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Designates the component as anchor and applies the **href** attribute."
      },
      "descriptionSource": {
        "en": "router"
      }
    },
    "exact": {
      "text": "boolean | undefined",
      "source": "router",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation."
      },
      "descriptionSource": {
        "en": "router"
      }
    },
    "to": {
      "text": "string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined",
      "source": "router",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "RouteLocationAsRelativeGeneric",
          "source": "vue-router/dist/vue-router.d.ts#L606-L613",
          "type": "ref",
          "ref": "RouteLocationAsRelativeGeneric",
          "formatted": "RouteLocationAsRelativeGeneric"
        },
        {
          "text": "RouteLocationAsPathGeneric",
          "source": "vue-router/dist/vue-router.d.ts#L575-L580",
          "type": "ref",
          "ref": "RouteLocationAsPathGeneric",
          "formatted": "RouteLocationAsPathGeneric"
        }
      ],
      "formatted": "string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric\n",
      "optional": false,
      "description": {
        "en": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation."
      },
      "descriptionSource": {
        "en": "router"
      }
    },
    "tag": {
      "text": "string | JSXComponent | undefined",
      "source": "tag",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "JSXComponent",
          "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
          "type": "anyOf",
          "items": [
            {
              "text": "new () => any",
              "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
              "type": "constructor",
              "formatted": "new () => any"
            },
            {
              "text": "FunctionalComponent<any, {}, any, {}>",
              "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
              "type": "ref",
              "ref": "FunctionalComponent",
              "formatted": "FunctionalComponent"
            }
          ],
          "formatted": "(new () => any) | FunctionalComponent"
        }
      ],
      "formatted": "string | (new () => any) | FunctionalComponent\n",
      "optional": false,
      "default": "'div'",
      "description": {
        "en": "Specify a custom tag used on the root element."
      },
      "descriptionSource": {
        "en": "tag"
      }
    },
    "theme": {
      "text": "string | undefined",
      "source": "theme",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Specify a theme for this component and all of its children."
      },
      "descriptionSource": {
        "en": "theme"
      }
    },
    "color": {
      "text": "string | undefined",
      "source": "variant",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Applies specified color to the control when in an **active** state or **input-value** is **true** - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors),"
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "variant": {
      "text": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\" | undefined",
      "source": "variant",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "\"flat\"",
          "type": "string",
          "literal": "\"flat\"",
          "formatted": "\"flat\""
        },
        {
          "text": "\"text\"",
          "type": "string",
          "literal": "\"text\"",
          "formatted": "\"text\""
        },
        {
          "text": "\"elevated\"",
          "type": "string",
          "literal": "\"elevated\"",
          "formatted": "\"elevated\""
        },
        {
          "text": "\"tonal\"",
          "type": "string",
          "literal": "\"tonal\"",
          "formatted": "\"tonal\""
        },
        {
          "text": "\"outlined\"",
          "type": "string",
          "literal": "\"outlined\"",
          "formatted": "\"outlined\""
        },
        {
          "text": "\"plain\"",
          "type": "string",
          "literal": "\"plain\"",
          "formatted": "\"plain\""
        }
      ],
      "formatted": "'flat' | 'text' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n",
      "optional": false,
      "default": "'text'",
      "description": {
        "en": "Applies a distinct style to the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "title": {
      "text": "string | number | boolean | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "description": {
        "en": "Generates a `v-list-item-title` component with the supplied value. Note that this overrides the native [`title`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title) attribute, that must be set with `v-bind:title.attr` instead."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "activeClass": {
      "text": "string | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "The class applied to the component when it matches the current route. Find more information about the [active-class prop](https://router.vuejs.org/api/#active-class) on the [vue-router](https://router.vuejs.org/) documentation."
      },
      "descriptionSource": {
        "en": "router"
      }
    },
    "subtitle": {
      "text": "string | number | boolean | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "description": {
        "en": "Specify a subtitle text for the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "appendAvatar": {
      "text": "string | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "prependAvatar": {
      "text": "string | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "nav": {
      "text": "boolean | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Reduces the width v-list-item takes up as well as adding a border radius."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "lines": {
      "text": "false | \"one\" | \"two\" | \"three\" | undefined",
      "source": "VListItem",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "false",
          "type": "boolean",
          "literal": "false",
          "formatted": "false"
        },
        {
          "text": "\"one\"",
          "type": "string",
          "literal": "\"one\"",
          "formatted": "\"one\""
        },
        {
          "text": "\"two\"",
          "type": "string",
          "literal": "\"two\"",
          "formatted": "\"two\""
        },
        {
          "text": "\"three\"",
          "type": "string",
          "literal": "\"three\"",
          "formatted": "\"three\""
        }
      ],
      "formatted": "false | 'one' | 'two' | 'three'\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "The line declaration specifies the minimum height of the item and can also be controlled from v-list with the same prop."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    }
  },
  "events": {
    "click": {
      "text": "[e: MouseEvent | KeyboardEvent]",
      "type": "array",
      "items": [
        {
          "text": "MouseEvent | KeyboardEvent",
          "type": "anyOf",
          "items": [
            {
              "text": "MouseEvent",
              "source": "typescript/lib/lib.dom.d.ts#L9825-L9876",
              "type": "ref",
              "ref": "MouseEvent",
              "formatted": "MouseEvent"
            },
            {
              "text": "KeyboardEvent",
              "source": "typescript/lib/lib.dom.d.ts#L8605-L8648",
              "type": "ref",
              "ref": "KeyboardEvent",
              "formatted": "KeyboardEvent"
            }
          ],
          "formatted": "MouseEvent | KeyboardEvent"
        }
      ],
      "length": 1,
      "formatted": "[MouseEvent | KeyboardEvent]\n",
      "optional": false,
      "description": {
        "en": "Event that is emitted when the component is clicked."
      },
      "descriptionSource": {
        "en": "generic"
      }
    }
  },
  "slots": {
    "prepend": {
      "text": "ListItemSlot",
      "source": "vuetify/src/components/VList/VListItem.tsx#L37-L43",
      "type": "object",
      "properties": {
        "isActive": {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean",
          "optional": false
        },
        "isOpen": {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean",
          "optional": false
        },
        "isSelected": {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean",
          "optional": false
        },
        "isIndeterminate": {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean",
          "optional": false
        },
        "select": {
          "text": "(value: boolean) => void",
          "source": "vuetify/src/components/VList/VListItem.tsx#L42-L42",
          "type": "function",
          "parameters": [
            {
              "name": "value",
              "optional": false,
              "text": "boolean",
              "type": "boolean",
              "formatted": "boolean"
            }
          ],
          "returnType": {
            "text": "void",
            "type": "void",
            "formatted": "void"
          },
          "formatted": "(value: boolean) => void",
          "optional": false
        }
      },
      "formatted": "{\n  isActive: boolean\n  isOpen: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  select: (value: boolean) => void\n}\n",
      "optional": false,
      "description": {
        "en": "Adds an item outside the input and before input content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "append": {
      "text": "ListItemSlot",
      "source": "vuetify/src/components/VList/VListItem.tsx#L37-L43",
      "type": "object",
      "properties": {
        "isActive": {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean",
          "optional": false
        },
        "isOpen": {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean",
          "optional": false
        },
        "isSelected": {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean",
          "optional": false
        },
        "isIndeterminate": {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean",
          "optional": false
        },
        "select": {
          "text": "(value: boolean) => void",
          "source": "vuetify/src/components/VList/VListItem.tsx#L42-L42",
          "type": "function",
          "parameters": [
            {
              "name": "value",
              "optional": false,
              "text": "boolean",
              "type": "boolean",
              "formatted": "boolean"
            }
          ],
          "returnType": {
            "text": "void",
            "type": "void",
            "formatted": "void"
          },
          "formatted": "(value: boolean) => void",
          "optional": false
        }
      },
      "formatted": "{\n  isActive: boolean\n  isOpen: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  select: (value: boolean) => void\n}\n",
      "optional": false,
      "description": {
        "en": "Adds an item inside the input and after input content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "default": {
      "text": "ListItemSlot",
      "source": "vuetify/src/components/VList/VListItem.tsx#L37-L43",
      "type": "object",
      "properties": {
        "isActive": {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean",
          "optional": false
        },
        "isOpen": {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean",
          "optional": false
        },
        "isSelected": {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean",
          "optional": false
        },
        "isIndeterminate": {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean",
          "optional": false
        },
        "select": {
          "text": "(value: boolean) => void",
          "source": "vuetify/src/components/VList/VListItem.tsx#L42-L42",
          "type": "function",
          "parameters": [
            {
              "name": "value",
              "optional": false,
              "text": "boolean",
              "type": "boolean",
              "formatted": "boolean"
            }
          ],
          "returnType": {
            "text": "void",
            "type": "void",
            "formatted": "void"
          },
          "formatted": "(value: boolean) => void",
          "optional": false
        }
      },
      "formatted": "{\n  isActive: boolean\n  isOpen: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  select: (value: boolean) => void\n}\n",
      "optional": false,
      "description": {
        "en": "The default Vue slot."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "title": {
      "text": "ListItemTitleSlot",
      "source": "vuetify/src/components/VList/VListItem.tsx#L45-L47",
      "type": "object",
      "properties": {
        "title": {
          "text": "string | number | boolean | undefined",
          "type": "anyOf",
          "items": [
            {
              "text": "undefined",
              "type": "UNSUPPORTED",
              "formatted": "undefined"
            },
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "number",
              "type": "number",
              "formatted": "number"
            },
            {
              "text": "boolean",
              "type": "boolean",
              "formatted": "boolean"
            }
          ],
          "formatted": "string | number | boolean",
          "optional": true
        }
      },
      "formatted": "{ title: string | number | boolean }\n",
      "optional": false,
      "description": {
        "en": "Slot for the component's title content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "subtitle": {
      "text": "ListItemSubtitleSlot",
      "source": "vuetify/src/components/VList/VListItem.tsx#L49-L51",
      "type": "object",
      "properties": {
        "subtitle": {
          "text": "string | number | boolean | undefined",
          "type": "anyOf",
          "items": [
            {
              "text": "undefined",
              "type": "UNSUPPORTED",
              "formatted": "undefined"
            },
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "number",
              "type": "number",
              "formatted": "number"
            },
            {
              "text": "boolean",
              "type": "boolean",
              "formatted": "boolean"
            }
          ],
          "formatted": "string | number | boolean",
          "optional": true
        }
      },
      "formatted": "{ subtitle: string | number | boolean }\n",
      "optional": false,
      "description": {
        "en": "Slot for the component's subtitle content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    }
  },
  "exposed": {
    "activate": {
      "text": "(activated: boolean, e?: Event | undefined) => void",
      "source": "vuetify/src/composables/nested/nested.ts#L356-L356",
      "type": "function",
      "parameters": [
        {
          "name": "activated",
          "optional": false,
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        },
        {
          "name": "e",
          "optional": false,
          "text": "Event | undefined",
          "type": "anyOf",
          "items": [
            {
              "text": "undefined",
              "type": "UNSUPPORTED",
              "formatted": "undefined"
            },
            {
              "text": "Event",
              "source": "typescript/lib/lib.dom.d.ts#L2163-L2276",
              "type": "ref",
              "ref": "Event",
              "formatted": "Event"
            }
          ],
          "formatted": "Event"
        }
      ],
      "returnType": {
        "text": "void",
        "type": "void",
        "formatted": "void"
      },
      "formatted": "(activated: boolean, e: Event) => void\n",
      "optional": false,
      "description": {
        "en": "Activate the list item."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "isActivated": {
      "text": "boolean",
      "type": "boolean",
      "formatted": "boolean\n",
      "optional": false,
      "description": {
        "en": "Check if the list item is activated."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "isGroupActivator": {
      "text": "boolean | undefined",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "description": {
        "en": "Check if the list item activates a group."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "isSelected": {
      "text": "boolean",
      "type": "boolean",
      "formatted": "boolean\n",
      "optional": false,
      "description": {
        "en": "Check if the list item is selected."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "list": {
      "text": "{ hasPrepend: boolean; updateHasPrepend: (value: boolean) => void; } | null",
      "type": "anyOf",
      "items": [
        {
          "text": "null",
          "type": "UNSUPPORTED",
          "formatted": "null"
        },
        {
          "text": "{ hasPrepend: boolean; updateHasPrepend: (value: boolean) => void; }",
          "source": "@vue/reactivity/dist/reactivity.d.ts#L636-L638",
          "type": "ref",
          "ref": "__type",
          "formatted": "{ hasPrepend: boolean; updateHasPrepend: (value: boolean) => void; }"
        }
      ],
      "formatted": "{ hasPrepend: boolean; updateHasPrepend: (value: boolean) => void }\n",
      "optional": false,
      "description": {
        "en": "The reference to the parent list component."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "select": {
      "text": "(selected: boolean, e?: Event | undefined) => void",
      "source": "vuetify/src/composables/nested/nested.ts#L358-L358",
      "type": "function",
      "parameters": [
        {
          "name": "selected",
          "optional": false,
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        },
        {
          "name": "e",
          "optional": false,
          "text": "Event | undefined",
          "type": "anyOf",
          "items": [
            {
              "text": "undefined",
              "type": "UNSUPPORTED",
              "formatted": "undefined"
            },
            {
              "text": "Event",
              "source": "typescript/lib/lib.dom.d.ts#L2163-L2276",
              "type": "ref",
              "ref": "Event",
              "formatted": "Event"
            }
          ],
          "formatted": "Event"
        }
      ],
      "returnType": {
        "text": "void",
        "type": "void",
        "formatted": "void"
      },
      "formatted": "(selected: boolean, e: Event) => void\n",
      "optional": false,
      "description": {
        "en": "Select this list item."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "root": {
      "text": "{ children: Map<unknown, unknown[]>; parents: Map<unknown, unknown>; activatable: boolean; selectable: boolean; opened: Set<unknown>; activated: Set<unknown>; selected: Map<unknown, \"indeterminate\" | \"on\" | \"off\">; selectedValues: unknown[]; register: (id: unknown, parentId: unknown, isGroup?: boolean | undefined) => void; unregister: (id: unknown) => void; open: (id: unknown, value: boolean, event?: Event | undefined) => void; activate: (id: unknown, value: boolean, event?: Event | undefined) => void; select: (id: unknown, value: boolean, event?: Event | undefined) => void; openOnSelect: (id: unknown, value: boolean, event?: Event | undefined) => void; getPath: (id: unknown) => unknown[]; }",
      "source": "@vue/reactivity/dist/reactivity.d.ts#L636-L638",
      "type": "ref",
      "ref": "__type",
      "formatted": "{\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  activatable: boolean\n  selectable: boolean\n  opened: Set<unknown>\n  activated: Set<unknown>\n  selected: Map<unknown, 'indeterminate' | 'on' | 'off'>\n  selectedValues: unknown[]\n  register: (\n    id: unknown,\n    parentId: unknown,\n    isGroup?: boolean | undefined,\n  ) => void\n  unregister: (id: unknown) => void\n  open: (id: unknown, value: boolean, event?: Event | undefined) => void\n  activate: (id: unknown, value: boolean, event?: Event | undefined) => void\n  select: (id: unknown, value: boolean, event?: Event | undefined) => void\n  openOnSelect: (id: unknown, value: boolean, event?: Event | undefined) => void\n  getPath: (id: unknown) => unknown[]\n}\n",
      "optional": false,
      "description": {
        "en": "The root nested list component"
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "id": {
      "text": "{}",
      "type": "object",
      "properties": {},
      "formatted": "{}\n",
      "optional": false,
      "description": {
        "en": "The unique identifier of the list item."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    },
    "link": {
      "text": "{ isLink: boolean; isClickable: boolean; href: string | undefined; linkProps: Record<string, string | undefined>; route?: RouteLocationResolvedGeneric | undefined; isActive?: boolean | undefined; isExactActive?: boolean | undefined; navigate?: ((e?: MouseEvent | undefined) => Promise<void | NavigationFailure>) | undefined; }",
      "source": "@vue/reactivity/dist/reactivity.d.ts#L636-L638",
      "type": "ref",
      "ref": "__type",
      "formatted": "{\n  isLink: boolean\n  isClickable: boolean\n  href: string | undefined\n  linkProps: Record<string, string | undefined>\n  route?: RouteLocationResolvedGeneric | undefined\n  isActive?: boolean | undefined\n  isExactActive?: boolean | undefined\n  navigate?:\n    | ((e?: MouseEvent | undefined) => Promise<void | NavigationFailure>)\n    | undefined\n}\n",
      "optional": false,
      "description": {
        "en": "Navigation information if list item functions as a link."
      },
      "descriptionSource": {
        "en": "VListItem"
      }
    }
  },
  "sass": {}
}