{
  "displayName": "VSnackbarQueue",
  "fileName": "VSnackbarQueue",
  "pathName": "v-snackbar-queue",
  "props": {
    "theme": {
      "text": "string | undefined",
      "source": "theme",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Specify a theme for this component and all of its children."
      },
      "descriptionSource": {
        "en": "theme"
      }
    },
    "disabled": {
      "text": "boolean | undefined",
      "source": "VOverlay",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Removes the ability to click or target the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "height": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "width": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the width for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "closeText": {
      "text": "string | undefined",
      "source": "VSnackbarQueue",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "default": "'$vuetify.dismiss'",
      "description": {
        "en": "The text used in the close button when using the **closable** prop."
      },
      "descriptionSource": {
        "en": "VSnackbarQueue"
      }
    },
    "eager": {
      "text": "boolean | undefined",
      "source": "lazy",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "maxHeight": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the maximum height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "maxWidth": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the maximum width for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "minHeight": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the minimum height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "minWidth": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the minimum width for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "rounded": {
      "text": "string | number | boolean | undefined",
      "source": "rounded",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "description": {
        "en": "Designates the **border-radius** applied to the component. This can be **0**, **xs**, **sm**, true, **lg**, **xl**, **pill**, **circle**, and **shaped**. Find more information on available border radius classes on the [Border Radius page](/styles/border-radius)."
      },
      "descriptionSource": {
        "en": "rounded"
      }
    },
    "tile": {
      "text": "boolean | undefined",
      "source": "rounded",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Removes any applied **border-radius** from the component."
      },
      "descriptionSource": {
        "en": "rounded"
      }
    },
    "color": {
      "text": "string | undefined",
      "source": "variant",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "variant": {
      "text": "\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\" | undefined",
      "source": "variant",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "\"flat\"",
          "type": "string",
          "literal": "\"flat\"",
          "formatted": "\"flat\""
        },
        {
          "text": "\"elevated\"",
          "type": "string",
          "literal": "\"elevated\"",
          "formatted": "\"elevated\""
        },
        {
          "text": "\"tonal\"",
          "type": "string",
          "literal": "\"tonal\"",
          "formatted": "\"tonal\""
        },
        {
          "text": "\"outlined\"",
          "type": "string",
          "literal": "\"outlined\"",
          "formatted": "\"outlined\""
        },
        {
          "text": "\"text\"",
          "type": "string",
          "literal": "\"text\"",
          "formatted": "\"text\""
        },
        {
          "text": "\"plain\"",
          "type": "string",
          "literal": "\"plain\"",
          "formatted": "\"plain\""
        }
      ],
      "formatted": "'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'\n",
      "optional": false,
      "default": "'elevated'",
      "description": {
        "en": "Applies a distinct style to the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "text": {
      "text": "string | undefined",
      "source": "VSnackbar",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Specify content text for the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "activator": {
      "text": "Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined",
      "source": "VOverlay-activator",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "Element",
          "source": "typescript/lib/lib.dom.d.ts#L1746-L2004",
          "type": "ref",
          "ref": "Element",
          "formatted": "Element"
        },
        {
          "text": "string & {}",
          "type": "allOf",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "{}",
              "type": "object",
              "properties": {},
              "formatted": "{  }"
            }
          ],
          "formatted": "string & {  }"
        },
        {
          "text": "\"parent\"",
          "type": "string",
          "literal": "\"parent\"",
          "formatted": "\"parent\""
        },
        {
          "text": "ComponentPublicInstance",
          "source": "@vue/runtime-core/dist/runtime-core.d.ts#L482-L501",
          "type": "ref",
          "ref": "ComponentPublicInstance",
          "formatted": "ComponentPublicInstance"
        }
      ],
      "formatted": "Element | (string & {}) | 'parent' | ComponentPublicInstance\n",
      "optional": false,
      "description": {
        "en": "Explicitly sets the overlay's activator."
      },
      "descriptionSource": {
        "en": "VOverlay-activator"
      }
    },
    "absolute": {
      "text": "boolean | undefined",
      "source": "VOverlay",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Applies **position: absolute** to the content element."
      },
      "descriptionSource": {
        "en": "VOverlay"
      }
    },
    "closeOnBack": {
      "text": "boolean | undefined",
      "source": "VOverlay",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": true,
      "description": {
        "en": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing."
      },
      "descriptionSource": {
        "en": "VOverlay"
      }
    },
    "contained": {
      "text": "boolean | undefined",
      "source": "VOverlay",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`. (Note: The parent element must have position: relative.)."
      },
      "descriptionSource": {
        "en": "VOverlay"
      }
    },
    "contentClass": {
      "text": "any",
      "source": "VOverlay",
      "type": "any",
      "formatted": "any\n",
      "optional": false,
      "description": {
        "en": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "contentProps": {
      "text": "any",
      "source": "VOverlay",
      "type": "any",
      "formatted": "any\n",
      "optional": false,
      "description": {
        "en": "Apply custom properties to the content."
      },
      "descriptionSource": {
        "en": "VOverlay-activator"
      }
    },
    "opacity": {
      "text": "string | number | undefined",
      "source": "VOverlay",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the opacity of the scrim element. Only applies if `scrim` is enabled."
      },
      "descriptionSource": {
        "en": "VOverlay"
      }
    },
    "modelValue": {
      "text": "readonly SnackbarMessage[] | undefined",
      "source": "VSnackbarQueue",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "readonly SnackbarMessage[]",
          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
          "type": "array",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "Omit<Partial<{ style: StyleValue; disabled: boolean; eager: boolean; rounded: string | number | boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnClick: boolean; openOnHover: boolean; openOnFocus: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; }> & Omit<{ style: StyleValue; disabled: boolean; eager: boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnHover: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; class?: any; theme?: string | undefined; height?: string | number | undefined; width?: string | number | undefined; maxHeight?: string | number | undefined; maxWidth?: string | number | undefined; minHeight?: string | number | undefined; minWidth?: string | number | undefined; rounded?: string | number | boolean | undefined; color?: string | undefined; text?: string | undefined; activator?: Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined; contentClass?: any; contentProps?: any; opacity?: string | number | undefined; target?: Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined; openOnClick?: boolean | undefined; openOnFocus?: boolean | undefined; closeDelay?: string | number | undefined; openDelay?: string | number | undefined; offset?: string | number | number[] | undefined; attach?: string | boolean | Element | undefined; position?: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined; timer?: string | boolean | undefined; $children?: VNodeChild | (() => VNodeChild) | { activator?: ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: (() => VNodeChild) | undefined; actions?: ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: (() => VNodeChild) | undefined; }; 'v-slots'?: { activator?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: false | (() => VNodeChild) | undefined; actions?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: false | (() => VNodeChild) | undefined; } | undefined; \"v-slot:activator\"?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; \"v-slot:default\"?: false | (() => VNodeChild) | undefined; \"v-slot:actions\"?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; \"v-slot:text\"?: false | (() => VNodeChild) | undefined; \"onUpdate:modelValue\"?: ((v: boolean) => any) | undefined; } & VNodeProps & AllowedComponentProps & ComponentCustomProps, DefaultKeys<AppendDefault<{ style: { type: PropType<StyleValue>; default: null; }; class: PropType<any>; theme: StringConstructor; disabled: BooleanConstructor; height: (StringConstructor | NumberConstructor)[]; width: (StringConstructor | NumberConstructor)[]; eager: BooleanConstructor; maxHeight: (StringConstructor | NumberConstructor)[]; maxWidth: (StringConstructor | NumberConstructor)[]; minHeight: (StringConstructor | NumberConstructor)[]; minWidth: (StringConstructor | NumberConstructor)[]; activator: PropType<Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined>; absolute: BooleanConstructor; closeOnBack: { type: BooleanConstructor; default: boolean; }; contained: BooleanConstructor; contentClass: null; contentProps: null; opacity: (StringConstructor | NumberConstructor)[]; modelValue: BooleanConstructor; zIndex: { type: (StringConstructor | NumberConstructor)[]; default: number; }; target: PropType<Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined>; activatorProps: { type: PropType<Record<string, any>>; default: () => {}; }; openOnClick: { type: BooleanConstructor; default: undefined; }; openOnHover: BooleanConstructor; openOnFocus: { type: BooleanConstructor; default: undefined; }; closeOnContentClick: BooleanConstructor; closeDelay: (StringConstructor | NumberConstructor)[]; openDelay: (StringConstructor | NumberConstructor)[]; locationStrategy: { type: PropType<\"static\" | \"connected\" | LocationStrategyFunction>; default: string; validator: (val: any) => boolean; }; location: { type: PropType<Anchor>; default: string; }; origin: { type: PropType<Anchor | \"auto\" | \"overlap\">; default: string; }; offset: PropType<string | number | number[] | undefined>; transition: { type: PropType<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; default: NonNullable<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; }; attach: PropType<string | boolean | Element>; color: StringConstructor; variant: { type: PropType<\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\">; default: string; validator: (v: any) => boolean; }; rounded: { type: (BooleanConstructor | StringConstructor | NumberConstructor)[]; default: undefined; }; tile: BooleanConstructor; position: { type: PropType<\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\">; validator: (v: any) => boolean; }; multiLine: BooleanConstructor; text: StringConstructor; timer: (BooleanConstructor | StringConstructor)[]; timeout: { type: (StringConstructor | NumberConstructor)[]; default: number; }; vertical: BooleanConstructor; }, {}>>>, \"style\" | `v-slot:${string}` | \"$children\" | \"v-slots\" | keyof VNodeProps | \"activator\" | \"modelValue\" | \"activatorProps\" | \"openOnClick\" | \"openOnHover\" | \"openOnFocus\" | \"closeDelay\" | \"openDelay\" | \"onUpdate:modelValue\"> & { style?: any; }",
              "type": "allOf",
              "items": [
                {
                  "text": "Omit<Partial<{ style: StyleValue; disabled: boolean; eager: boolean; rounded: string | number | boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnClick: boolean; openOnHover: boolean; openOnFocus: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; }> & Omit<{ style: StyleValue; disabled: boolean; eager: boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnHover: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; class?: any; theme?: string | undefined; height?: string | number | undefined; width?: string | number | undefined; maxHeight?: string | number | undefined; maxWidth?: string | number | undefined; minHeight?: string | number | undefined; minWidth?: string | number | undefined; rounded?: string | number | boolean | undefined; color?: string | undefined; text?: string | undefined; activator?: Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined; contentClass?: any; contentProps?: any; opacity?: string | number | undefined; target?: Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined; openOnClick?: boolean | undefined; openOnFocus?: boolean | undefined; closeDelay?: string | number | undefined; openDelay?: string | number | undefined; offset?: string | number | number[] | undefined; attach?: string | boolean | Element | undefined; position?: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined; timer?: string | boolean | undefined; $children?: VNodeChild | (() => VNodeChild) | { activator?: ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: (() => VNodeChild) | undefined; actions?: ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: (() => VNodeChild) | undefined; }; 'v-slots'?: { activator?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: false | (() => VNodeChild) | undefined; actions?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: false | (() => VNodeChild) | undefined; } | undefined; \"v-slot:activator\"?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; \"v-slot:default\"?: false | (() => VNodeChild) | undefined; \"v-slot:actions\"?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; \"v-slot:text\"?: false | (() => VNodeChild) | undefined; \"onUpdate:modelValue\"?: ((v: boolean) => any) | undefined; } & VNodeProps & AllowedComponentProps & ComponentCustomProps, DefaultKeys<AppendDefault<{ style: { type: PropType<StyleValue>; default: null; }; class: PropType<any>; theme: StringConstructor; disabled: BooleanConstructor; height: (StringConstructor | NumberConstructor)[]; width: (StringConstructor | NumberConstructor)[]; eager: BooleanConstructor; maxHeight: (StringConstructor | NumberConstructor)[]; maxWidth: (StringConstructor | NumberConstructor)[]; minHeight: (StringConstructor | NumberConstructor)[]; minWidth: (StringConstructor | NumberConstructor)[]; activator: PropType<Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined>; absolute: BooleanConstructor; closeOnBack: { type: BooleanConstructor; default: boolean; }; contained: BooleanConstructor; contentClass: null; contentProps: null; opacity: (StringConstructor | NumberConstructor)[]; modelValue: BooleanConstructor; zIndex: { type: (StringConstructor | NumberConstructor)[]; default: number; }; target: PropType<Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined>; activatorProps: { type: PropType<Record<string, any>>; default: () => {}; }; openOnClick: { type: BooleanConstructor; default: undefined; }; openOnHover: BooleanConstructor; openOnFocus: { type: BooleanConstructor; default: undefined; }; closeOnContentClick: BooleanConstructor; closeDelay: (StringConstructor | NumberConstructor)[]; openDelay: (StringConstructor | NumberConstructor)[]; locationStrategy: { type: PropType<\"static\" | \"connected\" | LocationStrategyFunction>; default: string; validator: (val: any) => boolean; }; location: { type: PropType<Anchor>; default: string; }; origin: { type: PropType<Anchor | \"auto\" | \"overlap\">; default: string; }; offset: PropType<string | number | number[] | undefined>; transition: { type: PropType<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; default: NonNullable<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; }; attach: PropType<string | boolean | Element>; color: StringConstructor; variant: { type: PropType<\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\">; default: string; validator: (v: any) => boolean; }; rounded: { type: (BooleanConstructor | StringConstructor | NumberConstructor)[]; default: undefined; }; tile: BooleanConstructor; position: { type: PropType<\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\">; validator: (v: any) => boolean; }; multiLine: BooleanConstructor; text: StringConstructor; timer: (BooleanConstructor | StringConstructor)[]; timeout: { type: (StringConstructor | NumberConstructor)[]; default: number; }; vertical: BooleanConstructor; }, {}>>>, \"style\" | `v-slot:${string}` | \"$children\" | \"v-slots\" | keyof VNodeProps | \"activator\" | \"modelValue\" | \"activatorProps\" | \"openOnClick\" | \"openOnHover\" | \"openOnFocus\" | \"closeDelay\" | \"openDelay\" | \"onUpdate:modelValue\">",
                  "source": "typescript/lib/lib.es5.d.ts#L6-L6",
                  "type": "object",
                  "properties": {
                    "class": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "theme": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "disabled": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "height": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "width": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "eager": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "maxHeight": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "maxWidth": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "minHeight": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "minWidth": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "rounded": {
                      "text": "string | number | boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "string | number | boolean",
                      "optional": true
                    },
                    "tile": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "color": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "variant": {
                      "text": "\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"flat\"",
                          "type": "string",
                          "literal": "\"flat\"",
                          "formatted": "\"flat\""
                        },
                        {
                          "text": "\"elevated\"",
                          "type": "string",
                          "literal": "\"elevated\"",
                          "formatted": "\"elevated\""
                        },
                        {
                          "text": "\"tonal\"",
                          "type": "string",
                          "literal": "\"tonal\"",
                          "formatted": "\"tonal\""
                        },
                        {
                          "text": "\"outlined\"",
                          "type": "string",
                          "literal": "\"outlined\"",
                          "formatted": "\"outlined\""
                        },
                        {
                          "text": "\"text\"",
                          "type": "string",
                          "literal": "\"text\"",
                          "formatted": "\"text\""
                        },
                        {
                          "text": "\"plain\"",
                          "type": "string",
                          "literal": "\"plain\"",
                          "formatted": "\"plain\""
                        }
                      ],
                      "formatted": "\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"",
                      "optional": true
                    },
                    "text": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "absolute": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "closeOnBack": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "contained": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "contentClass": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "contentProps": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "opacity": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "zIndex": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "target": {
                      "text": "Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Element",
                          "source": "typescript/lib/lib.dom.d.ts#L1746-L2004",
                          "type": "ref",
                          "ref": "Element",
                          "formatted": "Element"
                        },
                        {
                          "text": "string & {}",
                          "type": "allOf",
                          "items": [
                            {
                              "text": "string",
                              "type": "string",
                              "formatted": "string"
                            },
                            {
                              "text": "{}",
                              "type": "object",
                              "properties": {},
                              "formatted": "{  }"
                            }
                          ],
                          "formatted": "string & {  }"
                        },
                        {
                          "text": "\"parent\"",
                          "type": "string",
                          "literal": "\"parent\"",
                          "formatted": "\"parent\""
                        },
                        {
                          "text": "\"cursor\"",
                          "type": "string",
                          "literal": "\"cursor\"",
                          "formatted": "\"cursor\""
                        },
                        {
                          "text": "ComponentPublicInstance",
                          "source": "@vue/runtime-core/dist/runtime-core.d.ts#L482-L501",
                          "type": "ref",
                          "ref": "ComponentPublicInstance",
                          "formatted": "ComponentPublicInstance"
                        },
                        {
                          "text": "[x: number, y: number]",
                          "type": "array",
                          "items": [
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            },
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            }
                          ],
                          "length": 2,
                          "formatted": "[number, number]"
                        }
                      ],
                      "formatted": "Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]",
                      "optional": true
                    },
                    "closeOnContentClick": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "locationStrategy": {
                      "text": "\"static\" | \"connected\" | LocationStrategyFunction | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"static\"",
                          "type": "string",
                          "literal": "\"static\"",
                          "formatted": "\"static\""
                        },
                        {
                          "text": "\"connected\"",
                          "type": "string",
                          "literal": "\"connected\"",
                          "formatted": "\"connected\""
                        },
                        {
                          "text": "LocationStrategyFunction",
                          "source": "vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42",
                          "type": "ref",
                          "ref": "LocationStrategyFunction",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>"
                        }
                      ],
                      "formatted": "\"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>",
                      "optional": true
                    },
                    "location": {
                      "text": "Anchor | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Anchor",
                          "source": "vuetify/src/util/anchor.ts#L8-L14",
                          "type": "ref",
                          "ref": "Anchor",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
                        }
                      ],
                      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>",
                      "optional": true
                    },
                    "origin": {
                      "text": "Anchor | \"auto\" | \"overlap\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Anchor",
                          "source": "vuetify/src/util/anchor.ts#L8-L14",
                          "type": "ref",
                          "ref": "Anchor",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
                        },
                        {
                          "text": "\"auto\"",
                          "type": "string",
                          "literal": "\"auto\"",
                          "formatted": "\"auto\""
                        },
                        {
                          "text": "\"overlap\"",
                          "type": "string",
                          "literal": "\"overlap\"",
                          "formatted": "\"overlap\""
                        }
                      ],
                      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"",
                      "optional": true
                    },
                    "offset": {
                      "text": "string | number | number[] | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        },
                        {
                          "text": "number[]",
                          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
                          "type": "array",
                          "items": [
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            }
                          ],
                          "formatted": "number[]"
                        }
                      ],
                      "formatted": "string | number | number[]",
                      "optional": true
                    },
                    "transition": {
                      "text": "string | boolean | (TransitionProps & { component?: Component | undefined; }) | null | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "null",
                          "type": "UNSUPPORTED",
                          "formatted": "null"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        },
                        {
                          "text": "TransitionProps & { component?: Component | undefined; }",
                          "type": "allOf",
                          "items": [
                            {
                              "text": "TransitionProps",
                              "source": "@vue/runtime-dom/dist/runtime-dom.d.ts#L8-L25",
                              "type": "ref",
                              "ref": "TransitionProps",
                              "formatted": "TransitionProps"
                            },
                            {
                              "text": "{ component?: Component | undefined; }",
                              "source": "vuetify/src/composables/transition.ts#L13-L13",
                              "type": "object",
                              "properties": {
                                "component": {
                                  "text": "Component | undefined",
                                  "type": "anyOf",
                                  "items": [
                                    {
                                      "text": "undefined",
                                      "type": "ref",
                                      "ref": "",
                                      "formatted": "undefined"
                                    },
                                    {
                                      "text": "Component",
                                      "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1409-L1409",
                                      "type": "ref",
                                      "ref": "Component",
                                      "formatted": "Component"
                                    }
                                  ],
                                  "formatted": "Component",
                                  "optional": true
                                }
                              },
                              "formatted": "{ component: Component }"
                            }
                          ],
                          "formatted": "TransitionProps & { component: Component }"
                        }
                      ],
                      "formatted": "string | boolean | TransitionProps & { component: Component }",
                      "optional": true
                    },
                    "attach": {
                      "text": "string | boolean | Element | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        },
                        {
                          "text": "Element",
                          "source": "typescript/lib/lib.dom.d.ts#L1746-L2004",
                          "type": "ref",
                          "ref": "Element",
                          "formatted": "Element"
                        }
                      ],
                      "formatted": "string | boolean | Element",
                      "optional": true
                    },
                    "vertical": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "position": {
                      "text": "\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"fixed\"",
                          "type": "string",
                          "literal": "\"fixed\"",
                          "formatted": "\"fixed\""
                        },
                        {
                          "text": "\"relative\"",
                          "type": "string",
                          "literal": "\"relative\"",
                          "formatted": "\"relative\""
                        },
                        {
                          "text": "\"absolute\"",
                          "type": "string",
                          "literal": "\"absolute\"",
                          "formatted": "\"absolute\""
                        },
                        {
                          "text": "\"static\"",
                          "type": "string",
                          "literal": "\"static\"",
                          "formatted": "\"static\""
                        },
                        {
                          "text": "\"sticky\"",
                          "type": "string",
                          "literal": "\"sticky\"",
                          "formatted": "\"sticky\""
                        }
                      ],
                      "formatted": "\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"",
                      "optional": true
                    },
                    "multiLine": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "timer": {
                      "text": "string | boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "string | boolean",
                      "optional": true
                    },
                    "timeout": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "ref",
                          "ref": "",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    }
                  },
                  "formatted": "{ class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number }"
                },
                {
                  "text": "{ style?: any; }",
                  "source": "vuetify/src/components/VSnackbarQueue/VSnackbarQueue.tsx#L46-L46",
                  "type": "object",
                  "properties": {
                    "style": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    }
                  },
                  "formatted": "{ style: any }"
                }
              ],
              "formatted": "{ class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number } & { style: any }"
            }
          ],
          "formatted": "(string | ({ class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number } & { style: any }))[]"
        }
      ],
      "formatted": "(\n  | string\n  | ({\n      class: any\n      theme: string\n      disabled: boolean\n      height: string | number\n      width: string | number\n      eager: boolean\n      maxHeight: string | number\n      maxWidth: string | number\n      minHeight: string | number\n      minWidth: string | number\n      rounded: string | number | boolean\n      tile: boolean\n      color: string\n      variant: 'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'\n      text: string\n      absolute: boolean\n      closeOnBack: boolean\n      contained: boolean\n      contentClass: any\n      contentProps: any\n      opacity: string | number\n      zIndex: string | number\n      target:\n        | Element\n        | (string & {})\n        | 'parent'\n        | 'cursor'\n        | ComponentPublicInstance\n        | [number, number]\n      closeOnContentClick: boolean\n      locationStrategy: 'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>\n      location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n      origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'\n      offset: string | number | number[]\n      transition:\n        | string\n        | boolean\n        | (TransitionProps & { component: Component })\n      attach: string | boolean | Element\n      vertical: boolean\n      position: 'fixed' | 'relative' | 'absolute' | 'static' | 'sticky'\n      multiLine: boolean\n      timer: string | boolean\n      timeout: string | number\n    } & { style: any })\n)[]\n",
      "optional": false,
      "default": "[]",
      "description": {
        "en": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "zIndex": {
      "text": "string | number | undefined",
      "source": "VOverlay",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "default": 2000,
      "description": {
        "en": "The z-index used for the component."
      },
      "descriptionSource": {
        "en": "VOverlay"
      }
    },
    "target": {
      "text": "Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined",
      "source": "VOverlay-activator",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "Element",
          "source": "typescript/lib/lib.dom.d.ts#L1746-L2004",
          "type": "ref",
          "ref": "Element",
          "formatted": "Element"
        },
        {
          "text": "string & {}",
          "type": "allOf",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "{}",
              "type": "object",
              "properties": {},
              "formatted": "{  }"
            }
          ],
          "formatted": "string & {  }"
        },
        {
          "text": "\"parent\"",
          "type": "string",
          "literal": "\"parent\"",
          "formatted": "\"parent\""
        },
        {
          "text": "\"cursor\"",
          "type": "string",
          "literal": "\"cursor\"",
          "formatted": "\"cursor\""
        },
        {
          "text": "ComponentPublicInstance",
          "source": "@vue/runtime-core/dist/runtime-core.d.ts#L482-L501",
          "type": "ref",
          "ref": "ComponentPublicInstance",
          "formatted": "ComponentPublicInstance"
        },
        {
          "text": "[x: number, y: number]",
          "type": "array",
          "items": [
            {
              "text": "number",
              "type": "number",
              "formatted": "number"
            },
            {
              "text": "number",
              "type": "number",
              "formatted": "number"
            }
          ],
          "length": 2,
          "formatted": "[number, number]"
        }
      ],
      "formatted": "  | Element\n  | (string & {})\n  | 'parent'\n  | 'cursor'\n  | ComponentPublicInstance\n  | [number, number]\n",
      "optional": false,
      "description": {
        "en": "For locationStrategy=\"connected\", specify an element or array of x,y coordinates that the overlay should position itself relative to. This will be the activator element by default."
      },
      "descriptionSource": {
        "en": "VOverlay-activator"
      }
    },
    "activatorProps": {
      "text": "unknown",
      "source": "VOverlay-activator",
      "type": "unknown",
      "formatted": "unknown\n",
      "optional": false,
      "default": "{}",
      "description": {
        "en": "Apply custom properties to the activator."
      },
      "descriptionSource": {
        "en": "VOverlay-activator"
      }
    },
    "openOnClick": {
      "text": "boolean | undefined",
      "source": "VOverlay-activator",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "description": {
        "en": "Activate the component when the activator is clicked."
      },
      "descriptionSource": {
        "en": "VOverlay-activator"
      }
    },
    "openOnHover": {
      "text": "boolean | undefined",
      "source": "VOverlay-activator",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Activate the component when the activator is hovered."
      },
      "descriptionSource": {
        "en": "VOverlay-activator"
      }
    },
    "openOnFocus": {
      "text": "boolean | undefined",
      "source": "VOverlay-activator",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "description": {
        "en": "Activate the component when the activator is focused."
      },
      "descriptionSource": {
        "en": "VOverlay-activator"
      }
    },
    "closeOnContentClick": {
      "text": "boolean | undefined",
      "source": "VOverlay-activator",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Closes component when you click on its content."
      },
      "descriptionSource": {
        "en": "VOverlay-activator"
      }
    },
    "closeDelay": {
      "text": "string | number | undefined",
      "source": "delay",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Milliseconds to wait before closing component. Only applies to hover and focus events."
      },
      "descriptionSource": {
        "en": "delay"
      }
    },
    "openDelay": {
      "text": "string | number | undefined",
      "source": "delay",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Milliseconds to wait before opening component. Only applies to hover and focus events."
      },
      "descriptionSource": {
        "en": "delay"
      }
    },
    "locationStrategy": {
      "text": "\"static\" | \"connected\" | LocationStrategyFunction | undefined",
      "source": "VOverlay-location-strategies",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "\"static\"",
          "type": "string",
          "literal": "\"static\"",
          "formatted": "\"static\""
        },
        {
          "text": "\"connected\"",
          "type": "string",
          "literal": "\"connected\"",
          "formatted": "\"connected\""
        },
        {
          "text": "LocationStrategyFunction",
          "source": "vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42",
          "type": "ref",
          "ref": "LocationStrategyFunction",
          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>"
        }
      ],
      "formatted": "'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>\n",
      "optional": false,
      "default": "'static'",
      "description": {
        "en": "A function used to specifies how the component should position relative to its activator."
      },
      "descriptionSource": {
        "en": "VOverlay-location-strategies"
      }
    },
    "location": {
      "text": "Anchor | undefined",
      "source": "VOverlay-location-strategies",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "Anchor",
          "source": "vuetify/src/util/anchor.ts#L8-L14",
          "type": "ref",
          "ref": "Anchor",
          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
        }
      ],
      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n",
      "optional": false,
      "default": "'bottom'",
      "description": {
        "en": "Specifies the anchor point for positioning the component, using directional cues to align it either horizontally, vertically, or both.."
      },
      "descriptionSource": {
        "en": "VOverlay-activator"
      }
    },
    "origin": {
      "text": "Anchor | \"auto\" | \"overlap\" | undefined",
      "source": "VOverlay-location-strategies",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "Anchor",
          "source": "vuetify/src/util/anchor.ts#L8-L14",
          "type": "ref",
          "ref": "Anchor",
          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
        },
        {
          "text": "\"auto\"",
          "type": "string",
          "literal": "\"auto\"",
          "formatted": "\"auto\""
        },
        {
          "text": "\"overlap\"",
          "type": "string",
          "literal": "\"overlap\"",
          "formatted": "\"overlap\""
        }
      ],
      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'\n",
      "optional": false,
      "default": "'auto'",
      "description": {
        "en": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin)."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "offset": {
      "text": "string | number | number[] | undefined",
      "source": "VOverlay-location-strategies",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "number[]",
          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
          "type": "array",
          "items": [
            {
              "text": "number",
              "type": "number",
              "formatted": "number"
            }
          ],
          "formatted": "number[]"
        }
      ],
      "formatted": "string | number | number[]\n",
      "optional": false,
      "description": {
        "en": "Increases distance from the target. When passed as a pair of numbers, the second value shifts anchor along the side and away from the target."
      },
      "descriptionSource": {
        "en": "VOverlay-location-strategies"
      }
    },
    "transition": {
      "text": "string | boolean | (TransitionProps & { component?: Component | undefined; }) | null | undefined",
      "source": "transition",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "null",
          "type": "UNSUPPORTED",
          "formatted": "null"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        },
        {
          "text": "TransitionProps & { component?: Component | undefined; }",
          "type": "allOf",
          "items": [
            {
              "text": "TransitionProps",
              "source": "@vue/runtime-dom/dist/runtime-dom.d.ts#L8-L25",
              "type": "ref",
              "ref": "TransitionProps",
              "formatted": "TransitionProps"
            },
            {
              "text": "{ component?: Component | undefined; }",
              "source": "vuetify/src/composables/transition.ts#L13-L13",
              "type": "object",
              "properties": {
                "component": {
                  "text": "Component | undefined",
                  "type": "anyOf",
                  "items": [
                    {
                      "text": "undefined",
                      "type": "ref",
                      "ref": "",
                      "formatted": "undefined"
                    },
                    {
                      "text": "Component",
                      "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1409-L1409",
                      "type": "ref",
                      "ref": "Component",
                      "formatted": "Component"
                    }
                  ],
                  "formatted": "Component",
                  "optional": true
                }
              },
              "formatted": "{ component: Component }"
            }
          ],
          "formatted": "TransitionProps & { component: Component }"
        }
      ],
      "formatted": "string | boolean | (TransitionProps & { component: Component })\n",
      "optional": false,
      "default": "'v-snackbar-transition'",
      "description": {
        "en": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition."
      },
      "descriptionSource": {
        "en": "transition"
      }
    },
    "attach": {
      "text": "string | boolean | Element | undefined",
      "source": "VOverlay",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        },
        {
          "text": "Element",
          "source": "typescript/lib/lib.dom.d.ts#L1746-L2004",
          "type": "ref",
          "ref": "Element",
          "formatted": "Element"
        }
      ],
      "formatted": "string | boolean | Element\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or `true` to disable teleporting. Uses `body` by default."
      },
      "descriptionSource": {
        "en": "VOverlay"
      }
    },
    "vertical": {
      "text": "boolean | undefined",
      "source": "VSnackbar",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Stacks snackbar content on top of the actions (button)."
      },
      "descriptionSource": {
        "en": "VSnackbar"
      }
    },
    "position": {
      "text": "\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined",
      "source": "position",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "\"fixed\"",
          "type": "string",
          "literal": "\"fixed\"",
          "formatted": "\"fixed\""
        },
        {
          "text": "\"relative\"",
          "type": "string",
          "literal": "\"relative\"",
          "formatted": "\"relative\""
        },
        {
          "text": "\"absolute\"",
          "type": "string",
          "literal": "\"absolute\"",
          "formatted": "\"absolute\""
        },
        {
          "text": "\"static\"",
          "type": "string",
          "literal": "\"static\"",
          "formatted": "\"static\""
        },
        {
          "text": "\"sticky\"",
          "type": "string",
          "literal": "\"sticky\"",
          "formatted": "\"sticky\""
        }
      ],
      "formatted": "'fixed' | 'relative' | 'absolute' | 'static' | 'sticky'\n",
      "optional": false,
      "description": {
        "en": "Sets the position for the component."
      },
      "descriptionSource": {
        "en": "position"
      }
    },
    "multiLine": {
      "text": "boolean | undefined",
      "source": "VSnackbar",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Gives the snackbar a larger minimum height."
      },
      "descriptionSource": {
        "en": "VSnackbar"
      }
    },
    "timer": {
      "text": "string | boolean | undefined",
      "source": "VSnackbar",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Display a progress bar that counts down until the snackbar closes. Pass a string to set a custom color, otherwise uses `info`."
      },
      "descriptionSource": {
        "en": "VSnackbar"
      }
    },
    "timeout": {
      "text": "string | number | undefined",
      "source": "VSnackbar",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "default": 5000,
      "description": {
        "en": "Time (in milliseconds) to wait until snackbar is automatically hidden.  Use `-1` to keep open indefinitely (`0` in version < 2.3 ). It is recommended for this number to be between `4000` and `10000`. Changes to this property will reset the timeout."
      },
      "descriptionSource": {
        "en": "VSnackbar"
      }
    },
    "closable": {
      "text": "string | boolean | undefined",
      "source": "VSnackbarQueue",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Adds a dismiss button that closes the active snackbar."
      },
      "descriptionSource": {
        "en": "VSnackbarQueue"
      }
    }
  },
  "events": {
    "update:modelValue": {
      "text": "[val: readonly SnackbarMessage[]]",
      "type": "array",
      "items": [
        {
          "text": "readonly SnackbarMessage[]",
          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
          "type": "array",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "Omit<Partial<{ style: StyleValue; disabled: boolean; eager: boolean; rounded: string | number | boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnClick: boolean; openOnHover: boolean; openOnFocus: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; }> & Omit<{ style: StyleValue; disabled: boolean; eager: boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnHover: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; class?: any; theme?: string | undefined; height?: string | number | undefined; width?: string | number | undefined; maxHeight?: string | number | undefined; maxWidth?: string | number | undefined; minHeight?: string | number | undefined; minWidth?: string | number | undefined; rounded?: string | number | boolean | undefined; color?: string | undefined; text?: string | undefined; activator?: Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined; contentClass?: any; contentProps?: any; opacity?: string | number | undefined; target?: Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined; openOnClick?: boolean | undefined; openOnFocus?: boolean | undefined; closeDelay?: string | number | undefined; openDelay?: string | number | undefined; offset?: string | number | number[] | undefined; attach?: string | boolean | Element | undefined; position?: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined; timer?: string | boolean | undefined; $children?: VNodeChild | (() => VNodeChild) | { activator?: ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: (() => VNodeChild) | undefined; actions?: ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: (() => VNodeChild) | undefined; }; 'v-slots'?: { activator?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: false | (() => VNodeChild) | undefined; actions?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: false | (() => VNodeChild) | undefined; } | undefined; \"v-slot:activator\"?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; \"v-slot:default\"?: false | (() => VNodeChild) | undefined; \"v-slot:actions\"?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; \"v-slot:text\"?: false | (() => VNodeChild) | undefined; \"onUpdate:modelValue\"?: ((v: boolean) => any) | undefined; } & VNodeProps & AllowedComponentProps & ComponentCustomProps, DefaultKeys<AppendDefault<{ style: { type: PropType<StyleValue>; default: null; }; class: PropType<any>; theme: StringConstructor; disabled: BooleanConstructor; height: (StringConstructor | NumberConstructor)[]; width: (StringConstructor | NumberConstructor)[]; eager: BooleanConstructor; maxHeight: (StringConstructor | NumberConstructor)[]; maxWidth: (StringConstructor | NumberConstructor)[]; minHeight: (StringConstructor | NumberConstructor)[]; minWidth: (StringConstructor | NumberConstructor)[]; activator: PropType<Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined>; absolute: BooleanConstructor; closeOnBack: { type: BooleanConstructor; default: boolean; }; contained: BooleanConstructor; contentClass: null; contentProps: null; opacity: (StringConstructor | NumberConstructor)[]; modelValue: BooleanConstructor; zIndex: { type: (StringConstructor | NumberConstructor)[]; default: number; }; target: PropType<Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined>; activatorProps: { type: PropType<Record<string, any>>; default: () => {}; }; openOnClick: { type: BooleanConstructor; default: undefined; }; openOnHover: BooleanConstructor; openOnFocus: { type: BooleanConstructor; default: undefined; }; closeOnContentClick: BooleanConstructor; closeDelay: (StringConstructor | NumberConstructor)[]; openDelay: (StringConstructor | NumberConstructor)[]; locationStrategy: { type: PropType<\"static\" | \"connected\" | LocationStrategyFunction>; default: string; validator: (val: any) => boolean; }; location: { type: PropType<Anchor>; default: string; }; origin: { type: PropType<Anchor | \"auto\" | \"overlap\">; default: string; }; offset: PropType<string | number | number[] | undefined>; transition: { type: PropType<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; default: NonNullable<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; }; attach: PropType<string | boolean | Element>; color: StringConstructor; variant: { type: PropType<\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\">; default: string; validator: (v: any) => boolean; }; rounded: { type: (BooleanConstructor | StringConstructor | NumberConstructor)[]; default: undefined; }; tile: BooleanConstructor; position: { type: PropType<\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\">; validator: (v: any) => boolean; }; multiLine: BooleanConstructor; text: StringConstructor; timer: (BooleanConstructor | StringConstructor)[]; timeout: { type: (StringConstructor | NumberConstructor)[]; default: number; }; vertical: BooleanConstructor; }, {}>>>, \"style\" | `v-slot:${string}` | \"$children\" | \"v-slots\" | keyof VNodeProps | \"activator\" | \"modelValue\" | \"activatorProps\" | \"openOnClick\" | \"openOnHover\" | \"openOnFocus\" | \"closeDelay\" | \"openDelay\" | \"onUpdate:modelValue\"> & { style?: any; }",
              "type": "allOf",
              "items": [
                {
                  "text": "Omit<Partial<{ style: StyleValue; disabled: boolean; eager: boolean; rounded: string | number | boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnClick: boolean; openOnHover: boolean; openOnFocus: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; }> & Omit<{ style: StyleValue; disabled: boolean; eager: boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnHover: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; class?: any; theme?: string | undefined; height?: string | number | undefined; width?: string | number | undefined; maxHeight?: string | number | undefined; maxWidth?: string | number | undefined; minHeight?: string | number | undefined; minWidth?: string | number | undefined; rounded?: string | number | boolean | undefined; color?: string | undefined; text?: string | undefined; activator?: Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined; contentClass?: any; contentProps?: any; opacity?: string | number | undefined; target?: Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined; openOnClick?: boolean | undefined; openOnFocus?: boolean | undefined; closeDelay?: string | number | undefined; openDelay?: string | number | undefined; offset?: string | number | number[] | undefined; attach?: string | boolean | Element | undefined; position?: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined; timer?: string | boolean | undefined; $children?: VNodeChild | (() => VNodeChild) | { activator?: ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: (() => VNodeChild) | undefined; actions?: ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: (() => VNodeChild) | undefined; }; 'v-slots'?: { activator?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: false | (() => VNodeChild) | undefined; actions?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: false | (() => VNodeChild) | undefined; } | undefined; \"v-slot:activator\"?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; \"v-slot:default\"?: false | (() => VNodeChild) | undefined; \"v-slot:actions\"?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; \"v-slot:text\"?: false | (() => VNodeChild) | undefined; \"onUpdate:modelValue\"?: ((v: boolean) => any) | undefined; } & VNodeProps & AllowedComponentProps & ComponentCustomProps, DefaultKeys<AppendDefault<{ style: { type: PropType<StyleValue>; default: null; }; class: PropType<any>; theme: StringConstructor; disabled: BooleanConstructor; height: (StringConstructor | NumberConstructor)[]; width: (StringConstructor | NumberConstructor)[]; eager: BooleanConstructor; maxHeight: (StringConstructor | NumberConstructor)[]; maxWidth: (StringConstructor | NumberConstructor)[]; minHeight: (StringConstructor | NumberConstructor)[]; minWidth: (StringConstructor | NumberConstructor)[]; activator: PropType<Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined>; absolute: BooleanConstructor; closeOnBack: { type: BooleanConstructor; default: boolean; }; contained: BooleanConstructor; contentClass: null; contentProps: null; opacity: (StringConstructor | NumberConstructor)[]; modelValue: BooleanConstructor; zIndex: { type: (StringConstructor | NumberConstructor)[]; default: number; }; target: PropType<Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined>; activatorProps: { type: PropType<Record<string, any>>; default: () => {}; }; openOnClick: { type: BooleanConstructor; default: undefined; }; openOnHover: BooleanConstructor; openOnFocus: { type: BooleanConstructor; default: undefined; }; closeOnContentClick: BooleanConstructor; closeDelay: (StringConstructor | NumberConstructor)[]; openDelay: (StringConstructor | NumberConstructor)[]; locationStrategy: { type: PropType<\"static\" | \"connected\" | LocationStrategyFunction>; default: string; validator: (val: any) => boolean; }; location: { type: PropType<Anchor>; default: string; }; origin: { type: PropType<Anchor | \"auto\" | \"overlap\">; default: string; }; offset: PropType<string | number | number[] | undefined>; transition: { type: PropType<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; default: NonNullable<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; }; attach: PropType<string | boolean | Element>; color: StringConstructor; variant: { type: PropType<\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\">; default: string; validator: (v: any) => boolean; }; rounded: { type: (BooleanConstructor | StringConstructor | NumberConstructor)[]; default: undefined; }; tile: BooleanConstructor; position: { type: PropType<\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\">; validator: (v: any) => boolean; }; multiLine: BooleanConstructor; text: StringConstructor; timer: (BooleanConstructor | StringConstructor)[]; timeout: { type: (StringConstructor | NumberConstructor)[]; default: number; }; vertical: BooleanConstructor; }, {}>>>, \"style\" | `v-slot:${string}` | \"$children\" | \"v-slots\" | keyof VNodeProps | \"activator\" | \"modelValue\" | \"activatorProps\" | \"openOnClick\" | \"openOnHover\" | \"openOnFocus\" | \"closeDelay\" | \"openDelay\" | \"onUpdate:modelValue\">",
                  "source": "typescript/lib/lib.es5.d.ts#L6-L6",
                  "type": "object",
                  "properties": {
                    "class": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "theme": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "disabled": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "height": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "width": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "eager": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "maxHeight": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "maxWidth": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "minHeight": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "minWidth": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "rounded": {
                      "text": "string | number | boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "string | number | boolean",
                      "optional": true
                    },
                    "tile": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "color": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "variant": {
                      "text": "\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"flat\"",
                          "type": "string",
                          "literal": "\"flat\"",
                          "formatted": "\"flat\""
                        },
                        {
                          "text": "\"elevated\"",
                          "type": "string",
                          "literal": "\"elevated\"",
                          "formatted": "\"elevated\""
                        },
                        {
                          "text": "\"tonal\"",
                          "type": "string",
                          "literal": "\"tonal\"",
                          "formatted": "\"tonal\""
                        },
                        {
                          "text": "\"outlined\"",
                          "type": "string",
                          "literal": "\"outlined\"",
                          "formatted": "\"outlined\""
                        },
                        {
                          "text": "\"text\"",
                          "type": "string",
                          "literal": "\"text\"",
                          "formatted": "\"text\""
                        },
                        {
                          "text": "\"plain\"",
                          "type": "string",
                          "literal": "\"plain\"",
                          "formatted": "\"plain\""
                        }
                      ],
                      "formatted": "\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"",
                      "optional": true
                    },
                    "text": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "absolute": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "closeOnBack": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "contained": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "contentClass": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "contentProps": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "opacity": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "zIndex": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "target": {
                      "text": "Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Element",
                          "source": "typescript/lib/lib.dom.d.ts#L1746-L2004",
                          "type": "ref",
                          "ref": "Element",
                          "formatted": "Element"
                        },
                        {
                          "text": "string & {}",
                          "type": "allOf",
                          "items": [
                            {
                              "text": "string",
                              "type": "string",
                              "formatted": "string"
                            },
                            {
                              "text": "{}",
                              "type": "object",
                              "properties": {},
                              "formatted": "{  }"
                            }
                          ],
                          "formatted": "string & {  }"
                        },
                        {
                          "text": "\"parent\"",
                          "type": "string",
                          "literal": "\"parent\"",
                          "formatted": "\"parent\""
                        },
                        {
                          "text": "\"cursor\"",
                          "type": "string",
                          "literal": "\"cursor\"",
                          "formatted": "\"cursor\""
                        },
                        {
                          "text": "ComponentPublicInstance",
                          "source": "@vue/runtime-core/dist/runtime-core.d.ts#L482-L501",
                          "type": "ref",
                          "ref": "ComponentPublicInstance",
                          "formatted": "ComponentPublicInstance"
                        },
                        {
                          "text": "[x: number, y: number]",
                          "type": "array",
                          "items": [
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            },
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            }
                          ],
                          "length": 2,
                          "formatted": "[number, number]"
                        }
                      ],
                      "formatted": "Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]",
                      "optional": true
                    },
                    "closeOnContentClick": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "locationStrategy": {
                      "text": "\"static\" | \"connected\" | LocationStrategyFunction | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"static\"",
                          "type": "string",
                          "literal": "\"static\"",
                          "formatted": "\"static\""
                        },
                        {
                          "text": "\"connected\"",
                          "type": "string",
                          "literal": "\"connected\"",
                          "formatted": "\"connected\""
                        },
                        {
                          "text": "LocationStrategyFunction",
                          "source": "vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42",
                          "type": "ref",
                          "ref": "LocationStrategyFunction",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>"
                        }
                      ],
                      "formatted": "\"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>",
                      "optional": true
                    },
                    "location": {
                      "text": "Anchor | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Anchor",
                          "source": "vuetify/src/util/anchor.ts#L8-L14",
                          "type": "ref",
                          "ref": "Anchor",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
                        }
                      ],
                      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>",
                      "optional": true
                    },
                    "origin": {
                      "text": "Anchor | \"auto\" | \"overlap\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Anchor",
                          "source": "vuetify/src/util/anchor.ts#L8-L14",
                          "type": "ref",
                          "ref": "Anchor",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
                        },
                        {
                          "text": "\"auto\"",
                          "type": "string",
                          "literal": "\"auto\"",
                          "formatted": "\"auto\""
                        },
                        {
                          "text": "\"overlap\"",
                          "type": "string",
                          "literal": "\"overlap\"",
                          "formatted": "\"overlap\""
                        }
                      ],
                      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"",
                      "optional": true
                    },
                    "offset": {
                      "text": "string | number | number[] | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        },
                        {
                          "text": "number[]",
                          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
                          "type": "array",
                          "items": [
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            }
                          ],
                          "formatted": "number[]"
                        }
                      ],
                      "formatted": "string | number | number[]",
                      "optional": true
                    },
                    "transition": {
                      "text": "string | boolean | (TransitionProps & { component?: Component | undefined; }) | null | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "null",
                          "type": "UNSUPPORTED",
                          "formatted": "null"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        },
                        {
                          "text": "TransitionProps & { component?: Component | undefined; }",
                          "type": "allOf",
                          "items": [
                            {
                              "text": "TransitionProps",
                              "source": "@vue/runtime-dom/dist/runtime-dom.d.ts#L8-L25",
                              "type": "ref",
                              "ref": "TransitionProps",
                              "formatted": "TransitionProps"
                            },
                            {
                              "text": "{ component?: Component | undefined; }",
                              "source": "vuetify/src/composables/transition.ts#L13-L13",
                              "type": "object",
                              "properties": {
                                "component": {
                                  "text": "Component | undefined",
                                  "type": "anyOf",
                                  "items": [
                                    {
                                      "text": "undefined",
                                      "type": "ref",
                                      "ref": "",
                                      "formatted": "undefined"
                                    },
                                    {
                                      "text": "Component",
                                      "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1409-L1409",
                                      "type": "ref",
                                      "ref": "Component",
                                      "formatted": "Component"
                                    }
                                  ],
                                  "formatted": "Component",
                                  "optional": true
                                }
                              },
                              "formatted": "{ component: Component }"
                            }
                          ],
                          "formatted": "TransitionProps & { component: Component }"
                        }
                      ],
                      "formatted": "string | boolean | TransitionProps & { component: Component }",
                      "optional": true
                    },
                    "attach": {
                      "text": "string | boolean | Element | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        },
                        {
                          "text": "Element",
                          "source": "typescript/lib/lib.dom.d.ts#L1746-L2004",
                          "type": "ref",
                          "ref": "Element",
                          "formatted": "Element"
                        }
                      ],
                      "formatted": "string | boolean | Element",
                      "optional": true
                    },
                    "vertical": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "position": {
                      "text": "\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"fixed\"",
                          "type": "string",
                          "literal": "\"fixed\"",
                          "formatted": "\"fixed\""
                        },
                        {
                          "text": "\"relative\"",
                          "type": "string",
                          "literal": "\"relative\"",
                          "formatted": "\"relative\""
                        },
                        {
                          "text": "\"absolute\"",
                          "type": "string",
                          "literal": "\"absolute\"",
                          "formatted": "\"absolute\""
                        },
                        {
                          "text": "\"static\"",
                          "type": "string",
                          "literal": "\"static\"",
                          "formatted": "\"static\""
                        },
                        {
                          "text": "\"sticky\"",
                          "type": "string",
                          "literal": "\"sticky\"",
                          "formatted": "\"sticky\""
                        }
                      ],
                      "formatted": "\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"",
                      "optional": true
                    },
                    "multiLine": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "timer": {
                      "text": "string | boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "string | boolean",
                      "optional": true
                    },
                    "timeout": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    }
                  },
                  "formatted": "{ class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number }"
                },
                {
                  "text": "{ style?: any; }",
                  "source": "vuetify/src/components/VSnackbarQueue/VSnackbarQueue.tsx#L46-L46",
                  "type": "object",
                  "properties": {
                    "style": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    }
                  },
                  "formatted": "{ style: any }"
                }
              ],
              "formatted": "{ class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number } & { style: any }"
            }
          ],
          "formatted": "(string | ({ class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number } & { style: any }))[]"
        }
      ],
      "length": 1,
      "formatted": "[\n  (\n    | string\n    | ({\n        class: any\n        theme: string\n        disabled: boolean\n        height: string | number\n        width: string | number\n        eager: boolean\n        maxHeight: string | number\n        maxWidth: string | number\n        minHeight: string | number\n        minWidth: string | number\n        rounded: string | number | boolean\n        tile: boolean\n        color: string\n        variant: 'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'\n        text: string\n        absolute: boolean\n        closeOnBack: boolean\n        contained: boolean\n        contentClass: any\n        contentProps: any\n        opacity: string | number\n        zIndex: string | number\n        target:\n          | Element\n          | (string & {})\n          | 'parent'\n          | 'cursor'\n          | ComponentPublicInstance\n          | [number, number]\n        closeOnContentClick: boolean\n        locationStrategy: 'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>\n        location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n        origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'\n        offset: string | number | number[]\n        transition:\n          | string\n          | boolean\n          | (TransitionProps & { component: Component })\n        attach: string | boolean | Element\n        vertical: boolean\n        position: 'fixed' | 'relative' | 'absolute' | 'static' | 'sticky'\n        multiLine: boolean\n        timer: string | boolean\n        timeout: string | number\n      } & { style: any })\n  )[],\n]\n",
      "optional": false,
      "description": {
        "en": "Event that is emitted when the component's model changes."
      },
      "descriptionSource": {
        "en": "generic"
      }
    }
  },
  "slots": {
    "default": {
      "text": "{ item: SnackbarMessage; }",
      "source": "vuetify/src/components/VSnackbarQueue/VSnackbarQueue.tsx#L18-L18",
      "type": "object",
      "properties": {
        "item": {
          "text": "SnackbarMessage",
          "source": "vuetify/src/components/VSnackbarQueue/VSnackbarQueue.tsx#L28-L46",
          "type": "anyOf",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "Omit<Partial<{ style: StyleValue; disabled: boolean; eager: boolean; rounded: string | number | boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnClick: boolean; openOnHover: boolean; openOnFocus: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; }> & Omit<{ style: StyleValue; disabled: boolean; eager: boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnHover: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; class?: any; theme?: string | undefined; height?: string | number | undefined; width?: string | number | undefined; maxHeight?: string | number | undefined; maxWidth?: string | number | undefined; minHeight?: string | number | undefined; minWidth?: string | number | undefined; rounded?: string | number | boolean | undefined; color?: string | undefined; text?: string | undefined; activator?: Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined; contentClass?: any; contentProps?: any; opacity?: string | number | undefined; target?: Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined; openOnClick?: boolean | undefined; openOnFocus?: boolean | undefined; closeDelay?: string | number | undefined; openDelay?: string | number | undefined; offset?: string | number | number[] | undefined; attach?: string | boolean | Element | undefined; position?: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined; timer?: string | boolean | undefined; $children?: VNodeChild | (() => VNodeChild) | { activator?: ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: (() => VNodeChild) | undefined; actions?: ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: (() => VNodeChild) | undefined; }; 'v-slots'?: { activator?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: false | (() => VNodeChild) | undefined; actions?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: false | (() => VNodeChild) | undefined; } | undefined; \"v-slot:activator\"?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; \"v-slot:default\"?: false | (() => VNodeChild) | undefined; \"v-slot:actions\"?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; \"v-slot:text\"?: false | (() => VNodeChild) | undefined; \"onUpdate:modelValue\"?: ((v: boolean) => any) | undefined; } & VNodeProps & AllowedComponentProps & ComponentCustomProps, DefaultKeys<AppendDefault<{ style: { type: PropType<StyleValue>; default: null; }; class: PropType<any>; theme: StringConstructor; disabled: BooleanConstructor; height: (StringConstructor | NumberConstructor)[]; width: (StringConstructor | NumberConstructor)[]; eager: BooleanConstructor; maxHeight: (StringConstructor | NumberConstructor)[]; maxWidth: (StringConstructor | NumberConstructor)[]; minHeight: (StringConstructor | NumberConstructor)[]; minWidth: (StringConstructor | NumberConstructor)[]; activator: PropType<Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined>; absolute: BooleanConstructor; closeOnBack: { type: BooleanConstructor; default: boolean; }; contained: BooleanConstructor; contentClass: null; contentProps: null; opacity: (StringConstructor | NumberConstructor)[]; modelValue: BooleanConstructor; zIndex: { type: (StringConstructor | NumberConstructor)[]; default: number; }; target: PropType<Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined>; activatorProps: { type: PropType<Record<string, any>>; default: () => {}; }; openOnClick: { type: BooleanConstructor; default: undefined; }; openOnHover: BooleanConstructor; openOnFocus: { type: BooleanConstructor; default: undefined; }; closeOnContentClick: BooleanConstructor; closeDelay: (StringConstructor | NumberConstructor)[]; openDelay: (StringConstructor | NumberConstructor)[]; locationStrategy: { type: PropType<\"static\" | \"connected\" | LocationStrategyFunction>; default: string; validator: (val: any) => boolean; }; location: { type: PropType<Anchor>; default: string; }; origin: { type: PropType<Anchor | \"auto\" | \"overlap\">; default: string; }; offset: PropType<string | number | number[] | undefined>; transition: { type: PropType<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; default: NonNullable<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; }; attach: PropType<string | boolean | Element>; color: StringConstructor; variant: { type: PropType<\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\">; default: string; validator: (v: any) => boolean; }; rounded: { type: (BooleanConstructor | StringConstructor | NumberConstructor)[]; default: undefined; }; tile: BooleanConstructor; position: { type: PropType<\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\">; validator: (v: any) => boolean; }; multiLine: BooleanConstructor; text: StringConstructor; timer: (BooleanConstructor | StringConstructor)[]; timeout: { type: (StringConstructor | NumberConstructor)[]; default: number; }; vertical: BooleanConstructor; }, {}>>>, \"style\" | `v-slot:${string}` | \"$children\" | \"v-slots\" | keyof VNodeProps | \"activator\" | \"modelValue\" | \"activatorProps\" | \"openOnClick\" | \"openOnHover\" | \"openOnFocus\" | \"closeDelay\" | \"openDelay\" | \"onUpdate:modelValue\"> & { style?: any; }",
              "type": "allOf",
              "items": [
                {
                  "text": "Omit<Partial<{ style: StyleValue; disabled: boolean; eager: boolean; rounded: string | number | boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnClick: boolean; openOnHover: boolean; openOnFocus: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; }> & Omit<{ style: StyleValue; disabled: boolean; eager: boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnHover: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; class?: any; theme?: string | undefined; height?: string | number | undefined; width?: string | number | undefined; maxHeight?: string | number | undefined; maxWidth?: string | number | undefined; minHeight?: string | number | undefined; minWidth?: string | number | undefined; rounded?: string | number | boolean | undefined; color?: string | undefined; text?: string | undefined; activator?: Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined; contentClass?: any; contentProps?: any; opacity?: string | number | undefined; target?: Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined; openOnClick?: boolean | undefined; openOnFocus?: boolean | undefined; closeDelay?: string | number | undefined; openDelay?: string | number | undefined; offset?: string | number | number[] | undefined; attach?: string | boolean | Element | undefined; position?: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined; timer?: string | boolean | undefined; $children?: VNodeChild | (() => VNodeChild) | { activator?: ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: (() => VNodeChild) | undefined; actions?: ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: (() => VNodeChild) | undefined; }; 'v-slots'?: { activator?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: false | (() => VNodeChild) | undefined; actions?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: false | (() => VNodeChild) | undefined; } | undefined; \"v-slot:activator\"?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; \"v-slot:default\"?: false | (() => VNodeChild) | undefined; \"v-slot:actions\"?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; \"v-slot:text\"?: false | (() => VNodeChild) | undefined; \"onUpdate:modelValue\"?: ((v: boolean) => any) | undefined; } & VNodeProps & AllowedComponentProps & ComponentCustomProps, DefaultKeys<AppendDefault<{ style: { type: PropType<StyleValue>; default: null; }; class: PropType<any>; theme: StringConstructor; disabled: BooleanConstructor; height: (StringConstructor | NumberConstructor)[]; width: (StringConstructor | NumberConstructor)[]; eager: BooleanConstructor; maxHeight: (StringConstructor | NumberConstructor)[]; maxWidth: (StringConstructor | NumberConstructor)[]; minHeight: (StringConstructor | NumberConstructor)[]; minWidth: (StringConstructor | NumberConstructor)[]; activator: PropType<Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined>; absolute: BooleanConstructor; closeOnBack: { type: BooleanConstructor; default: boolean; }; contained: BooleanConstructor; contentClass: null; contentProps: null; opacity: (StringConstructor | NumberConstructor)[]; modelValue: BooleanConstructor; zIndex: { type: (StringConstructor | NumberConstructor)[]; default: number; }; target: PropType<Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined>; activatorProps: { type: PropType<Record<string, any>>; default: () => {}; }; openOnClick: { type: BooleanConstructor; default: undefined; }; openOnHover: BooleanConstructor; openOnFocus: { type: BooleanConstructor; default: undefined; }; closeOnContentClick: BooleanConstructor; closeDelay: (StringConstructor | NumberConstructor)[]; openDelay: (StringConstructor | NumberConstructor)[]; locationStrategy: { type: PropType<\"static\" | \"connected\" | LocationStrategyFunction>; default: string; validator: (val: any) => boolean; }; location: { type: PropType<Anchor>; default: string; }; origin: { type: PropType<Anchor | \"auto\" | \"overlap\">; default: string; }; offset: PropType<string | number | number[] | undefined>; transition: { type: PropType<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; default: NonNullable<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; }; attach: PropType<string | boolean | Element>; color: StringConstructor; variant: { type: PropType<\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\">; default: string; validator: (v: any) => boolean; }; rounded: { type: (BooleanConstructor | StringConstructor | NumberConstructor)[]; default: undefined; }; tile: BooleanConstructor; position: { type: PropType<\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\">; validator: (v: any) => boolean; }; multiLine: BooleanConstructor; text: StringConstructor; timer: (BooleanConstructor | StringConstructor)[]; timeout: { type: (StringConstructor | NumberConstructor)[]; default: number; }; vertical: BooleanConstructor; }, {}>>>, \"style\" | `v-slot:${string}` | \"$children\" | \"v-slots\" | keyof VNodeProps | \"activator\" | \"modelValue\" | \"activatorProps\" | \"openOnClick\" | \"openOnHover\" | \"openOnFocus\" | \"closeDelay\" | \"openDelay\" | \"onUpdate:modelValue\">",
                  "source": "typescript/lib/lib.es5.d.ts#L6-L6",
                  "type": "object",
                  "properties": {
                    "class": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "theme": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "disabled": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "height": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "width": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "eager": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "maxHeight": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "maxWidth": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "minHeight": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "minWidth": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "rounded": {
                      "text": "string | number | boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "string | number | boolean",
                      "optional": true
                    },
                    "tile": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "color": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "variant": {
                      "text": "\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"flat\"",
                          "type": "string",
                          "literal": "\"flat\"",
                          "formatted": "\"flat\""
                        },
                        {
                          "text": "\"elevated\"",
                          "type": "string",
                          "literal": "\"elevated\"",
                          "formatted": "\"elevated\""
                        },
                        {
                          "text": "\"tonal\"",
                          "type": "string",
                          "literal": "\"tonal\"",
                          "formatted": "\"tonal\""
                        },
                        {
                          "text": "\"outlined\"",
                          "type": "string",
                          "literal": "\"outlined\"",
                          "formatted": "\"outlined\""
                        },
                        {
                          "text": "\"text\"",
                          "type": "string",
                          "literal": "\"text\"",
                          "formatted": "\"text\""
                        },
                        {
                          "text": "\"plain\"",
                          "type": "string",
                          "literal": "\"plain\"",
                          "formatted": "\"plain\""
                        }
                      ],
                      "formatted": "\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"",
                      "optional": true
                    },
                    "text": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "absolute": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "closeOnBack": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "contained": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "contentClass": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "contentProps": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "opacity": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "zIndex": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "target": {
                      "text": "Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Element",
                          "source": "typescript/lib/lib.dom.d.ts#L1746-L2004",
                          "type": "ref",
                          "ref": "Element",
                          "formatted": "Element"
                        },
                        {
                          "text": "string & {}",
                          "type": "allOf",
                          "items": [
                            {
                              "text": "string",
                              "type": "string",
                              "formatted": "string"
                            },
                            {
                              "text": "{}",
                              "type": "object",
                              "properties": {},
                              "formatted": "{  }"
                            }
                          ],
                          "formatted": "string & {  }"
                        },
                        {
                          "text": "\"parent\"",
                          "type": "string",
                          "literal": "\"parent\"",
                          "formatted": "\"parent\""
                        },
                        {
                          "text": "\"cursor\"",
                          "type": "string",
                          "literal": "\"cursor\"",
                          "formatted": "\"cursor\""
                        },
                        {
                          "text": "ComponentPublicInstance",
                          "source": "@vue/runtime-core/dist/runtime-core.d.ts#L482-L501",
                          "type": "ref",
                          "ref": "ComponentPublicInstance",
                          "formatted": "ComponentPublicInstance"
                        },
                        {
                          "text": "[x: number, y: number]",
                          "type": "array",
                          "items": [
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            },
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            }
                          ],
                          "length": 2,
                          "formatted": "[number, number]"
                        }
                      ],
                      "formatted": "Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]",
                      "optional": true
                    },
                    "closeOnContentClick": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "locationStrategy": {
                      "text": "\"static\" | \"connected\" | LocationStrategyFunction | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"static\"",
                          "type": "string",
                          "literal": "\"static\"",
                          "formatted": "\"static\""
                        },
                        {
                          "text": "\"connected\"",
                          "type": "string",
                          "literal": "\"connected\"",
                          "formatted": "\"connected\""
                        },
                        {
                          "text": "LocationStrategyFunction",
                          "source": "vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42",
                          "type": "ref",
                          "ref": "LocationStrategyFunction",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>"
                        }
                      ],
                      "formatted": "\"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>",
                      "optional": true
                    },
                    "location": {
                      "text": "Anchor | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Anchor",
                          "source": "vuetify/src/util/anchor.ts#L8-L14",
                          "type": "ref",
                          "ref": "Anchor",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
                        }
                      ],
                      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>",
                      "optional": true
                    },
                    "origin": {
                      "text": "Anchor | \"auto\" | \"overlap\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Anchor",
                          "source": "vuetify/src/util/anchor.ts#L8-L14",
                          "type": "ref",
                          "ref": "Anchor",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
                        },
                        {
                          "text": "\"auto\"",
                          "type": "string",
                          "literal": "\"auto\"",
                          "formatted": "\"auto\""
                        },
                        {
                          "text": "\"overlap\"",
                          "type": "string",
                          "literal": "\"overlap\"",
                          "formatted": "\"overlap\""
                        }
                      ],
                      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"",
                      "optional": true
                    },
                    "offset": {
                      "text": "string | number | number[] | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        },
                        {
                          "text": "number[]",
                          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
                          "type": "array",
                          "items": [
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            }
                          ],
                          "formatted": "number[]"
                        }
                      ],
                      "formatted": "string | number | number[]",
                      "optional": true
                    },
                    "transition": {
                      "text": "string | boolean | (TransitionProps & { component?: Component | undefined; }) | null | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "null",
                          "type": "UNSUPPORTED",
                          "formatted": "null"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        },
                        {
                          "text": "TransitionProps & { component?: Component | undefined; }",
                          "type": "allOf",
                          "items": [
                            {
                              "text": "TransitionProps",
                              "source": "@vue/runtime-dom/dist/runtime-dom.d.ts#L8-L25",
                              "type": "ref",
                              "ref": "TransitionProps",
                              "formatted": "TransitionProps"
                            },
                            {
                              "text": "{ component?: Component | undefined; }",
                              "source": "vuetify/src/composables/transition.ts#L13-L13",
                              "type": "object",
                              "properties": {
                                "component": {
                                  "text": "Component | undefined",
                                  "type": "anyOf",
                                  "items": [
                                    {
                                      "text": "undefined",
                                      "type": "ref",
                                      "ref": "",
                                      "formatted": "undefined"
                                    },
                                    {
                                      "text": "Component",
                                      "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1409-L1409",
                                      "type": "ref",
                                      "ref": "Component",
                                      "formatted": "Component"
                                    }
                                  ],
                                  "formatted": "Component",
                                  "optional": true
                                }
                              },
                              "formatted": "{ component: Component }"
                            }
                          ],
                          "formatted": "TransitionProps & { component: Component }"
                        }
                      ],
                      "formatted": "string | boolean | TransitionProps & { component: Component }",
                      "optional": true
                    },
                    "attach": {
                      "text": "string | boolean | Element | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        },
                        {
                          "text": "Element",
                          "source": "typescript/lib/lib.dom.d.ts#L1746-L2004",
                          "type": "ref",
                          "ref": "Element",
                          "formatted": "Element"
                        }
                      ],
                      "formatted": "string | boolean | Element",
                      "optional": true
                    },
                    "vertical": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "position": {
                      "text": "\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"fixed\"",
                          "type": "string",
                          "literal": "\"fixed\"",
                          "formatted": "\"fixed\""
                        },
                        {
                          "text": "\"relative\"",
                          "type": "string",
                          "literal": "\"relative\"",
                          "formatted": "\"relative\""
                        },
                        {
                          "text": "\"absolute\"",
                          "type": "string",
                          "literal": "\"absolute\"",
                          "formatted": "\"absolute\""
                        },
                        {
                          "text": "\"static\"",
                          "type": "string",
                          "literal": "\"static\"",
                          "formatted": "\"static\""
                        },
                        {
                          "text": "\"sticky\"",
                          "type": "string",
                          "literal": "\"sticky\"",
                          "formatted": "\"sticky\""
                        }
                      ],
                      "formatted": "\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"",
                      "optional": true
                    },
                    "multiLine": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "timer": {
                      "text": "string | boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "string | boolean",
                      "optional": true
                    },
                    "timeout": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    }
                  },
                  "formatted": "{ class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number }"
                },
                {
                  "text": "{ style?: any; }",
                  "source": "vuetify/src/components/VSnackbarQueue/VSnackbarQueue.tsx#L46-L46",
                  "type": "object",
                  "properties": {
                    "style": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    }
                  },
                  "formatted": "{ style: any }"
                }
              ],
              "formatted": "{ class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number } & { style: any }"
            }
          ],
          "formatted": "string | { class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number } & { style: any }",
          "optional": false
        }
      },
      "formatted": "{\n  item:\n    | string\n    | ({\n        class: any\n        theme: string\n        disabled: boolean\n        height: string | number\n        width: string | number\n        eager: boolean\n        maxHeight: string | number\n        maxWidth: string | number\n        minHeight: string | number\n        minWidth: string | number\n        rounded: string | number | boolean\n        tile: boolean\n        color: string\n        variant: 'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'\n        text: string\n        absolute: boolean\n        closeOnBack: boolean\n        contained: boolean\n        contentClass: any\n        contentProps: any\n        opacity: string | number\n        zIndex: string | number\n        target:\n          | Element\n          | (string & {})\n          | 'parent'\n          | 'cursor'\n          | ComponentPublicInstance\n          | [number, number]\n        closeOnContentClick: boolean\n        locationStrategy: 'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>\n        location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n        origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'\n        offset: string | number | number[]\n        transition:\n          | string\n          | boolean\n          | (TransitionProps & { component: Component })\n        attach: string | boolean | Element\n        vertical: boolean\n        position: 'fixed' | 'relative' | 'absolute' | 'static' | 'sticky'\n        multiLine: boolean\n        timer: string | boolean\n        timeout: string | number\n      } & { style: any })\n}\n",
      "optional": false,
      "description": {
        "en": "The default Vue slot."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "text": {
      "text": "{ item: SnackbarMessage; }",
      "source": "vuetify/src/components/VSnackbarQueue/VSnackbarQueue.tsx#L19-L19",
      "type": "object",
      "properties": {
        "item": {
          "text": "SnackbarMessage",
          "source": "vuetify/src/components/VSnackbarQueue/VSnackbarQueue.tsx#L28-L46",
          "type": "anyOf",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "Omit<Partial<{ style: StyleValue; disabled: boolean; eager: boolean; rounded: string | number | boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnClick: boolean; openOnHover: boolean; openOnFocus: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; }> & Omit<{ style: StyleValue; disabled: boolean; eager: boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnHover: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; class?: any; theme?: string | undefined; height?: string | number | undefined; width?: string | number | undefined; maxHeight?: string | number | undefined; maxWidth?: string | number | undefined; minHeight?: string | number | undefined; minWidth?: string | number | undefined; rounded?: string | number | boolean | undefined; color?: string | undefined; text?: string | undefined; activator?: Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined; contentClass?: any; contentProps?: any; opacity?: string | number | undefined; target?: Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined; openOnClick?: boolean | undefined; openOnFocus?: boolean | undefined; closeDelay?: string | number | undefined; openDelay?: string | number | undefined; offset?: string | number | number[] | undefined; attach?: string | boolean | Element | undefined; position?: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined; timer?: string | boolean | undefined; $children?: VNodeChild | (() => VNodeChild) | { activator?: ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: (() => VNodeChild) | undefined; actions?: ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: (() => VNodeChild) | undefined; }; 'v-slots'?: { activator?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: false | (() => VNodeChild) | undefined; actions?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: false | (() => VNodeChild) | undefined; } | undefined; \"v-slot:activator\"?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; \"v-slot:default\"?: false | (() => VNodeChild) | undefined; \"v-slot:actions\"?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; \"v-slot:text\"?: false | (() => VNodeChild) | undefined; \"onUpdate:modelValue\"?: ((v: boolean) => any) | undefined; } & VNodeProps & AllowedComponentProps & ComponentCustomProps, DefaultKeys<AppendDefault<{ style: { type: PropType<StyleValue>; default: null; }; class: PropType<any>; theme: StringConstructor; disabled: BooleanConstructor; height: (StringConstructor | NumberConstructor)[]; width: (StringConstructor | NumberConstructor)[]; eager: BooleanConstructor; maxHeight: (StringConstructor | NumberConstructor)[]; maxWidth: (StringConstructor | NumberConstructor)[]; minHeight: (StringConstructor | NumberConstructor)[]; minWidth: (StringConstructor | NumberConstructor)[]; activator: PropType<Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined>; absolute: BooleanConstructor; closeOnBack: { type: BooleanConstructor; default: boolean; }; contained: BooleanConstructor; contentClass: null; contentProps: null; opacity: (StringConstructor | NumberConstructor)[]; modelValue: BooleanConstructor; zIndex: { type: (StringConstructor | NumberConstructor)[]; default: number; }; target: PropType<Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined>; activatorProps: { type: PropType<Record<string, any>>; default: () => {}; }; openOnClick: { type: BooleanConstructor; default: undefined; }; openOnHover: BooleanConstructor; openOnFocus: { type: BooleanConstructor; default: undefined; }; closeOnContentClick: BooleanConstructor; closeDelay: (StringConstructor | NumberConstructor)[]; openDelay: (StringConstructor | NumberConstructor)[]; locationStrategy: { type: PropType<\"static\" | \"connected\" | LocationStrategyFunction>; default: string; validator: (val: any) => boolean; }; location: { type: PropType<Anchor>; default: string; }; origin: { type: PropType<Anchor | \"auto\" | \"overlap\">; default: string; }; offset: PropType<string | number | number[] | undefined>; transition: { type: PropType<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; default: NonNullable<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; }; attach: PropType<string | boolean | Element>; color: StringConstructor; variant: { type: PropType<\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\">; default: string; validator: (v: any) => boolean; }; rounded: { type: (BooleanConstructor | StringConstructor | NumberConstructor)[]; default: undefined; }; tile: BooleanConstructor; position: { type: PropType<\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\">; validator: (v: any) => boolean; }; multiLine: BooleanConstructor; text: StringConstructor; timer: (BooleanConstructor | StringConstructor)[]; timeout: { type: (StringConstructor | NumberConstructor)[]; default: number; }; vertical: BooleanConstructor; }, {}>>>, \"style\" | `v-slot:${string}` | \"$children\" | \"v-slots\" | keyof VNodeProps | \"activator\" | \"modelValue\" | \"activatorProps\" | \"openOnClick\" | \"openOnHover\" | \"openOnFocus\" | \"closeDelay\" | \"openDelay\" | \"onUpdate:modelValue\"> & { style?: any; }",
              "type": "allOf",
              "items": [
                {
                  "text": "Omit<Partial<{ style: StyleValue; disabled: boolean; eager: boolean; rounded: string | number | boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnClick: boolean; openOnHover: boolean; openOnFocus: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; }> & Omit<{ style: StyleValue; disabled: boolean; eager: boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnHover: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; class?: any; theme?: string | undefined; height?: string | number | undefined; width?: string | number | undefined; maxHeight?: string | number | undefined; maxWidth?: string | number | undefined; minHeight?: string | number | undefined; minWidth?: string | number | undefined; rounded?: string | number | boolean | undefined; color?: string | undefined; text?: string | undefined; activator?: Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined; contentClass?: any; contentProps?: any; opacity?: string | number | undefined; target?: Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined; openOnClick?: boolean | undefined; openOnFocus?: boolean | undefined; closeDelay?: string | number | undefined; openDelay?: string | number | undefined; offset?: string | number | number[] | undefined; attach?: string | boolean | Element | undefined; position?: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined; timer?: string | boolean | undefined; $children?: VNodeChild | (() => VNodeChild) | { activator?: ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: (() => VNodeChild) | undefined; actions?: ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: (() => VNodeChild) | undefined; }; 'v-slots'?: { activator?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: false | (() => VNodeChild) | undefined; actions?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: false | (() => VNodeChild) | undefined; } | undefined; \"v-slot:activator\"?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; \"v-slot:default\"?: false | (() => VNodeChild) | undefined; \"v-slot:actions\"?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; \"v-slot:text\"?: false | (() => VNodeChild) | undefined; \"onUpdate:modelValue\"?: ((v: boolean) => any) | undefined; } & VNodeProps & AllowedComponentProps & ComponentCustomProps, DefaultKeys<AppendDefault<{ style: { type: PropType<StyleValue>; default: null; }; class: PropType<any>; theme: StringConstructor; disabled: BooleanConstructor; height: (StringConstructor | NumberConstructor)[]; width: (StringConstructor | NumberConstructor)[]; eager: BooleanConstructor; maxHeight: (StringConstructor | NumberConstructor)[]; maxWidth: (StringConstructor | NumberConstructor)[]; minHeight: (StringConstructor | NumberConstructor)[]; minWidth: (StringConstructor | NumberConstructor)[]; activator: PropType<Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined>; absolute: BooleanConstructor; closeOnBack: { type: BooleanConstructor; default: boolean; }; contained: BooleanConstructor; contentClass: null; contentProps: null; opacity: (StringConstructor | NumberConstructor)[]; modelValue: BooleanConstructor; zIndex: { type: (StringConstructor | NumberConstructor)[]; default: number; }; target: PropType<Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined>; activatorProps: { type: PropType<Record<string, any>>; default: () => {}; }; openOnClick: { type: BooleanConstructor; default: undefined; }; openOnHover: BooleanConstructor; openOnFocus: { type: BooleanConstructor; default: undefined; }; closeOnContentClick: BooleanConstructor; closeDelay: (StringConstructor | NumberConstructor)[]; openDelay: (StringConstructor | NumberConstructor)[]; locationStrategy: { type: PropType<\"static\" | \"connected\" | LocationStrategyFunction>; default: string; validator: (val: any) => boolean; }; location: { type: PropType<Anchor>; default: string; }; origin: { type: PropType<Anchor | \"auto\" | \"overlap\">; default: string; }; offset: PropType<string | number | number[] | undefined>; transition: { type: PropType<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; default: NonNullable<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; }; attach: PropType<string | boolean | Element>; color: StringConstructor; variant: { type: PropType<\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\">; default: string; validator: (v: any) => boolean; }; rounded: { type: (BooleanConstructor | StringConstructor | NumberConstructor)[]; default: undefined; }; tile: BooleanConstructor; position: { type: PropType<\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\">; validator: (v: any) => boolean; }; multiLine: BooleanConstructor; text: StringConstructor; timer: (BooleanConstructor | StringConstructor)[]; timeout: { type: (StringConstructor | NumberConstructor)[]; default: number; }; vertical: BooleanConstructor; }, {}>>>, \"style\" | `v-slot:${string}` | \"$children\" | \"v-slots\" | keyof VNodeProps | \"activator\" | \"modelValue\" | \"activatorProps\" | \"openOnClick\" | \"openOnHover\" | \"openOnFocus\" | \"closeDelay\" | \"openDelay\" | \"onUpdate:modelValue\">",
                  "source": "typescript/lib/lib.es5.d.ts#L6-L6",
                  "type": "object",
                  "properties": {
                    "class": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "theme": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "disabled": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "height": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "width": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "eager": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "maxHeight": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "maxWidth": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "minHeight": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "minWidth": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "rounded": {
                      "text": "string | number | boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "string | number | boolean",
                      "optional": true
                    },
                    "tile": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "color": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "variant": {
                      "text": "\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"flat\"",
                          "type": "string",
                          "literal": "\"flat\"",
                          "formatted": "\"flat\""
                        },
                        {
                          "text": "\"elevated\"",
                          "type": "string",
                          "literal": "\"elevated\"",
                          "formatted": "\"elevated\""
                        },
                        {
                          "text": "\"tonal\"",
                          "type": "string",
                          "literal": "\"tonal\"",
                          "formatted": "\"tonal\""
                        },
                        {
                          "text": "\"outlined\"",
                          "type": "string",
                          "literal": "\"outlined\"",
                          "formatted": "\"outlined\""
                        },
                        {
                          "text": "\"text\"",
                          "type": "string",
                          "literal": "\"text\"",
                          "formatted": "\"text\""
                        },
                        {
                          "text": "\"plain\"",
                          "type": "string",
                          "literal": "\"plain\"",
                          "formatted": "\"plain\""
                        }
                      ],
                      "formatted": "\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"",
                      "optional": true
                    },
                    "text": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "absolute": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "closeOnBack": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "contained": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "contentClass": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "contentProps": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "opacity": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "zIndex": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "target": {
                      "text": "Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Element",
                          "source": "typescript/lib/lib.dom.d.ts#L1746-L2004",
                          "type": "ref",
                          "ref": "Element",
                          "formatted": "Element"
                        },
                        {
                          "text": "string & {}",
                          "type": "allOf",
                          "items": [
                            {
                              "text": "string",
                              "type": "string",
                              "formatted": "string"
                            },
                            {
                              "text": "{}",
                              "type": "object",
                              "properties": {},
                              "formatted": "{  }"
                            }
                          ],
                          "formatted": "string & {  }"
                        },
                        {
                          "text": "\"parent\"",
                          "type": "string",
                          "literal": "\"parent\"",
                          "formatted": "\"parent\""
                        },
                        {
                          "text": "\"cursor\"",
                          "type": "string",
                          "literal": "\"cursor\"",
                          "formatted": "\"cursor\""
                        },
                        {
                          "text": "ComponentPublicInstance",
                          "source": "@vue/runtime-core/dist/runtime-core.d.ts#L482-L501",
                          "type": "ref",
                          "ref": "ComponentPublicInstance",
                          "formatted": "ComponentPublicInstance"
                        },
                        {
                          "text": "[x: number, y: number]",
                          "type": "array",
                          "items": [
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            },
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            }
                          ],
                          "length": 2,
                          "formatted": "[number, number]"
                        }
                      ],
                      "formatted": "Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]",
                      "optional": true
                    },
                    "closeOnContentClick": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "locationStrategy": {
                      "text": "\"static\" | \"connected\" | LocationStrategyFunction | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"static\"",
                          "type": "string",
                          "literal": "\"static\"",
                          "formatted": "\"static\""
                        },
                        {
                          "text": "\"connected\"",
                          "type": "string",
                          "literal": "\"connected\"",
                          "formatted": "\"connected\""
                        },
                        {
                          "text": "LocationStrategyFunction",
                          "source": "vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42",
                          "type": "ref",
                          "ref": "LocationStrategyFunction",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>"
                        }
                      ],
                      "formatted": "\"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>",
                      "optional": true
                    },
                    "location": {
                      "text": "Anchor | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Anchor",
                          "source": "vuetify/src/util/anchor.ts#L8-L14",
                          "type": "ref",
                          "ref": "Anchor",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
                        }
                      ],
                      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>",
                      "optional": true
                    },
                    "origin": {
                      "text": "Anchor | \"auto\" | \"overlap\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Anchor",
                          "source": "vuetify/src/util/anchor.ts#L8-L14",
                          "type": "ref",
                          "ref": "Anchor",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
                        },
                        {
                          "text": "\"auto\"",
                          "type": "string",
                          "literal": "\"auto\"",
                          "formatted": "\"auto\""
                        },
                        {
                          "text": "\"overlap\"",
                          "type": "string",
                          "literal": "\"overlap\"",
                          "formatted": "\"overlap\""
                        }
                      ],
                      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"",
                      "optional": true
                    },
                    "offset": {
                      "text": "string | number | number[] | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        },
                        {
                          "text": "number[]",
                          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
                          "type": "array",
                          "items": [
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            }
                          ],
                          "formatted": "number[]"
                        }
                      ],
                      "formatted": "string | number | number[]",
                      "optional": true
                    },
                    "transition": {
                      "text": "string | boolean | (TransitionProps & { component?: Component | undefined; }) | null | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "null",
                          "type": "UNSUPPORTED",
                          "formatted": "null"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        },
                        {
                          "text": "TransitionProps & { component?: Component | undefined; }",
                          "type": "allOf",
                          "items": [
                            {
                              "text": "TransitionProps",
                              "source": "@vue/runtime-dom/dist/runtime-dom.d.ts#L8-L25",
                              "type": "ref",
                              "ref": "TransitionProps",
                              "formatted": "TransitionProps"
                            },
                            {
                              "text": "{ component?: Component | undefined; }",
                              "source": "vuetify/src/composables/transition.ts#L13-L13",
                              "type": "object",
                              "properties": {
                                "component": {
                                  "text": "Component | undefined",
                                  "type": "anyOf",
                                  "items": [
                                    {
                                      "text": "undefined",
                                      "type": "ref",
                                      "ref": "",
                                      "formatted": "undefined"
                                    },
                                    {
                                      "text": "Component",
                                      "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1409-L1409",
                                      "type": "ref",
                                      "ref": "Component",
                                      "formatted": "Component"
                                    }
                                  ],
                                  "formatted": "Component",
                                  "optional": true
                                }
                              },
                              "formatted": "{ component: Component }"
                            }
                          ],
                          "formatted": "TransitionProps & { component: Component }"
                        }
                      ],
                      "formatted": "string | boolean | TransitionProps & { component: Component }",
                      "optional": true
                    },
                    "attach": {
                      "text": "string | boolean | Element | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        },
                        {
                          "text": "Element",
                          "source": "typescript/lib/lib.dom.d.ts#L1746-L2004",
                          "type": "ref",
                          "ref": "Element",
                          "formatted": "Element"
                        }
                      ],
                      "formatted": "string | boolean | Element",
                      "optional": true
                    },
                    "vertical": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "position": {
                      "text": "\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"fixed\"",
                          "type": "string",
                          "literal": "\"fixed\"",
                          "formatted": "\"fixed\""
                        },
                        {
                          "text": "\"relative\"",
                          "type": "string",
                          "literal": "\"relative\"",
                          "formatted": "\"relative\""
                        },
                        {
                          "text": "\"absolute\"",
                          "type": "string",
                          "literal": "\"absolute\"",
                          "formatted": "\"absolute\""
                        },
                        {
                          "text": "\"static\"",
                          "type": "string",
                          "literal": "\"static\"",
                          "formatted": "\"static\""
                        },
                        {
                          "text": "\"sticky\"",
                          "type": "string",
                          "literal": "\"sticky\"",
                          "formatted": "\"sticky\""
                        }
                      ],
                      "formatted": "\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"",
                      "optional": true
                    },
                    "multiLine": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "timer": {
                      "text": "string | boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "string | boolean",
                      "optional": true
                    },
                    "timeout": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    }
                  },
                  "formatted": "{ class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number }"
                },
                {
                  "text": "{ style?: any; }",
                  "source": "vuetify/src/components/VSnackbarQueue/VSnackbarQueue.tsx#L46-L46",
                  "type": "object",
                  "properties": {
                    "style": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    }
                  },
                  "formatted": "{ style: any }"
                }
              ],
              "formatted": "{ class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number } & { style: any }"
            }
          ],
          "formatted": "string | { class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number } & { style: any }",
          "optional": false
        }
      },
      "formatted": "{\n  item:\n    | string\n    | ({\n        class: any\n        theme: string\n        disabled: boolean\n        height: string | number\n        width: string | number\n        eager: boolean\n        maxHeight: string | number\n        maxWidth: string | number\n        minHeight: string | number\n        minWidth: string | number\n        rounded: string | number | boolean\n        tile: boolean\n        color: string\n        variant: 'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'\n        text: string\n        absolute: boolean\n        closeOnBack: boolean\n        contained: boolean\n        contentClass: any\n        contentProps: any\n        opacity: string | number\n        zIndex: string | number\n        target:\n          | Element\n          | (string & {})\n          | 'parent'\n          | 'cursor'\n          | ComponentPublicInstance\n          | [number, number]\n        closeOnContentClick: boolean\n        locationStrategy: 'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>\n        location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n        origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'\n        offset: string | number | number[]\n        transition:\n          | string\n          | boolean\n          | (TransitionProps & { component: Component })\n        attach: string | boolean | Element\n        vertical: boolean\n        position: 'fixed' | 'relative' | 'absolute' | 'static' | 'sticky'\n        multiLine: boolean\n        timer: string | boolean\n        timeout: string | number\n      } & { style: any })\n}\n",
      "optional": false,
      "description": {
        "en": "Slot for the component's text content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "actions": {
      "text": "{ item: SnackbarMessage; props: { onClick: () => void; }; }",
      "source": "vuetify/src/components/VSnackbarQueue/VSnackbarQueue.tsx#L20-L25",
      "type": "object",
      "properties": {
        "item": {
          "text": "SnackbarMessage",
          "source": "vuetify/src/components/VSnackbarQueue/VSnackbarQueue.tsx#L28-L46",
          "type": "anyOf",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "Omit<Partial<{ style: StyleValue; disabled: boolean; eager: boolean; rounded: string | number | boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnClick: boolean; openOnHover: boolean; openOnFocus: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; }> & Omit<{ style: StyleValue; disabled: boolean; eager: boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnHover: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; class?: any; theme?: string | undefined; height?: string | number | undefined; width?: string | number | undefined; maxHeight?: string | number | undefined; maxWidth?: string | number | undefined; minHeight?: string | number | undefined; minWidth?: string | number | undefined; rounded?: string | number | boolean | undefined; color?: string | undefined; text?: string | undefined; activator?: Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined; contentClass?: any; contentProps?: any; opacity?: string | number | undefined; target?: Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined; openOnClick?: boolean | undefined; openOnFocus?: boolean | undefined; closeDelay?: string | number | undefined; openDelay?: string | number | undefined; offset?: string | number | number[] | undefined; attach?: string | boolean | Element | undefined; position?: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined; timer?: string | boolean | undefined; $children?: VNodeChild | (() => VNodeChild) | { activator?: ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: (() => VNodeChild) | undefined; actions?: ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: (() => VNodeChild) | undefined; }; 'v-slots'?: { activator?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: false | (() => VNodeChild) | undefined; actions?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: false | (() => VNodeChild) | undefined; } | undefined; \"v-slot:activator\"?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; \"v-slot:default\"?: false | (() => VNodeChild) | undefined; \"v-slot:actions\"?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; \"v-slot:text\"?: false | (() => VNodeChild) | undefined; \"onUpdate:modelValue\"?: ((v: boolean) => any) | undefined; } & VNodeProps & AllowedComponentProps & ComponentCustomProps, DefaultKeys<AppendDefault<{ style: { type: PropType<StyleValue>; default: null; }; class: PropType<any>; theme: StringConstructor; disabled: BooleanConstructor; height: (StringConstructor | NumberConstructor)[]; width: (StringConstructor | NumberConstructor)[]; eager: BooleanConstructor; maxHeight: (StringConstructor | NumberConstructor)[]; maxWidth: (StringConstructor | NumberConstructor)[]; minHeight: (StringConstructor | NumberConstructor)[]; minWidth: (StringConstructor | NumberConstructor)[]; activator: PropType<Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined>; absolute: BooleanConstructor; closeOnBack: { type: BooleanConstructor; default: boolean; }; contained: BooleanConstructor; contentClass: null; contentProps: null; opacity: (StringConstructor | NumberConstructor)[]; modelValue: BooleanConstructor; zIndex: { type: (StringConstructor | NumberConstructor)[]; default: number; }; target: PropType<Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined>; activatorProps: { type: PropType<Record<string, any>>; default: () => {}; }; openOnClick: { type: BooleanConstructor; default: undefined; }; openOnHover: BooleanConstructor; openOnFocus: { type: BooleanConstructor; default: undefined; }; closeOnContentClick: BooleanConstructor; closeDelay: (StringConstructor | NumberConstructor)[]; openDelay: (StringConstructor | NumberConstructor)[]; locationStrategy: { type: PropType<\"static\" | \"connected\" | LocationStrategyFunction>; default: string; validator: (val: any) => boolean; }; location: { type: PropType<Anchor>; default: string; }; origin: { type: PropType<Anchor | \"auto\" | \"overlap\">; default: string; }; offset: PropType<string | number | number[] | undefined>; transition: { type: PropType<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; default: NonNullable<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; }; attach: PropType<string | boolean | Element>; color: StringConstructor; variant: { type: PropType<\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\">; default: string; validator: (v: any) => boolean; }; rounded: { type: (BooleanConstructor | StringConstructor | NumberConstructor)[]; default: undefined; }; tile: BooleanConstructor; position: { type: PropType<\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\">; validator: (v: any) => boolean; }; multiLine: BooleanConstructor; text: StringConstructor; timer: (BooleanConstructor | StringConstructor)[]; timeout: { type: (StringConstructor | NumberConstructor)[]; default: number; }; vertical: BooleanConstructor; }, {}>>>, \"style\" | `v-slot:${string}` | \"$children\" | \"v-slots\" | keyof VNodeProps | \"activator\" | \"modelValue\" | \"activatorProps\" | \"openOnClick\" | \"openOnHover\" | \"openOnFocus\" | \"closeDelay\" | \"openDelay\" | \"onUpdate:modelValue\"> & { style?: any; }",
              "type": "allOf",
              "items": [
                {
                  "text": "Omit<Partial<{ style: StyleValue; disabled: boolean; eager: boolean; rounded: string | number | boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnClick: boolean; openOnHover: boolean; openOnFocus: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; }> & Omit<{ style: StyleValue; disabled: boolean; eager: boolean; tile: boolean; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; absolute: boolean; closeOnBack: boolean; contained: boolean; modelValue: boolean; zIndex: string | number; activatorProps: Record<string, any>; openOnHover: boolean; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | LocationStrategyFunction; location: Anchor; origin: Anchor | \"auto\" | \"overlap\"; transition: string | boolean | (TransitionProps & { component?: Component | undefined; }) | null; vertical: boolean; multiLine: boolean; timeout: string | number; class?: any; theme?: string | undefined; height?: string | number | undefined; width?: string | number | undefined; maxHeight?: string | number | undefined; maxWidth?: string | number | undefined; minHeight?: string | number | undefined; minWidth?: string | number | undefined; rounded?: string | number | boolean | undefined; color?: string | undefined; text?: string | undefined; activator?: Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined; contentClass?: any; contentProps?: any; opacity?: string | number | undefined; target?: Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined; openOnClick?: boolean | undefined; openOnFocus?: boolean | undefined; closeDelay?: string | number | undefined; openDelay?: string | number | undefined; offset?: string | number | number[] | undefined; attach?: string | boolean | Element | undefined; position?: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined; timer?: string | boolean | undefined; $children?: VNodeChild | (() => VNodeChild) | { activator?: ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: (() => VNodeChild) | undefined; actions?: ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: (() => VNodeChild) | undefined; }; 'v-slots'?: { activator?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; default?: false | (() => VNodeChild) | undefined; actions?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; text?: false | (() => VNodeChild) | undefined; } | undefined; \"v-slot:activator\"?: false | ((arg: { isActive: boolean; props: Record<string, any>; }) => VNodeChild) | undefined; \"v-slot:default\"?: false | (() => VNodeChild) | undefined; \"v-slot:actions\"?: false | ((arg: { isActive: Ref<boolean, boolean>; }) => VNodeChild) | undefined; \"v-slot:text\"?: false | (() => VNodeChild) | undefined; \"onUpdate:modelValue\"?: ((v: boolean) => any) | undefined; } & VNodeProps & AllowedComponentProps & ComponentCustomProps, DefaultKeys<AppendDefault<{ style: { type: PropType<StyleValue>; default: null; }; class: PropType<any>; theme: StringConstructor; disabled: BooleanConstructor; height: (StringConstructor | NumberConstructor)[]; width: (StringConstructor | NumberConstructor)[]; eager: BooleanConstructor; maxHeight: (StringConstructor | NumberConstructor)[]; maxWidth: (StringConstructor | NumberConstructor)[]; minHeight: (StringConstructor | NumberConstructor)[]; minWidth: (StringConstructor | NumberConstructor)[]; activator: PropType<Element | (string & {}) | \"parent\" | ComponentPublicInstance | undefined>; absolute: BooleanConstructor; closeOnBack: { type: BooleanConstructor; default: boolean; }; contained: BooleanConstructor; contentClass: null; contentProps: null; opacity: (StringConstructor | NumberConstructor)[]; modelValue: BooleanConstructor; zIndex: { type: (StringConstructor | NumberConstructor)[]; default: number; }; target: PropType<Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined>; activatorProps: { type: PropType<Record<string, any>>; default: () => {}; }; openOnClick: { type: BooleanConstructor; default: undefined; }; openOnHover: BooleanConstructor; openOnFocus: { type: BooleanConstructor; default: undefined; }; closeOnContentClick: BooleanConstructor; closeDelay: (StringConstructor | NumberConstructor)[]; openDelay: (StringConstructor | NumberConstructor)[]; locationStrategy: { type: PropType<\"static\" | \"connected\" | LocationStrategyFunction>; default: string; validator: (val: any) => boolean; }; location: { type: PropType<Anchor>; default: string; }; origin: { type: PropType<Anchor | \"auto\" | \"overlap\">; default: string; }; offset: PropType<string | number | number[] | undefined>; transition: { type: PropType<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; default: NonNullable<string | boolean | (TransitionProps & { component?: Component | undefined; }) | null>; }; attach: PropType<string | boolean | Element>; color: StringConstructor; variant: { type: PropType<\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\">; default: string; validator: (v: any) => boolean; }; rounded: { type: (BooleanConstructor | StringConstructor | NumberConstructor)[]; default: undefined; }; tile: BooleanConstructor; position: { type: PropType<\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\">; validator: (v: any) => boolean; }; multiLine: BooleanConstructor; text: StringConstructor; timer: (BooleanConstructor | StringConstructor)[]; timeout: { type: (StringConstructor | NumberConstructor)[]; default: number; }; vertical: BooleanConstructor; }, {}>>>, \"style\" | `v-slot:${string}` | \"$children\" | \"v-slots\" | keyof VNodeProps | \"activator\" | \"modelValue\" | \"activatorProps\" | \"openOnClick\" | \"openOnHover\" | \"openOnFocus\" | \"closeDelay\" | \"openDelay\" | \"onUpdate:modelValue\">",
                  "source": "typescript/lib/lib.es5.d.ts#L6-L6",
                  "type": "object",
                  "properties": {
                    "class": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "theme": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "disabled": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "height": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "width": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "eager": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "maxHeight": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "maxWidth": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "minHeight": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "minWidth": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "rounded": {
                      "text": "string | number | boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "string | number | boolean",
                      "optional": true
                    },
                    "tile": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "color": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "variant": {
                      "text": "\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"flat\"",
                          "type": "string",
                          "literal": "\"flat\"",
                          "formatted": "\"flat\""
                        },
                        {
                          "text": "\"elevated\"",
                          "type": "string",
                          "literal": "\"elevated\"",
                          "formatted": "\"elevated\""
                        },
                        {
                          "text": "\"tonal\"",
                          "type": "string",
                          "literal": "\"tonal\"",
                          "formatted": "\"tonal\""
                        },
                        {
                          "text": "\"outlined\"",
                          "type": "string",
                          "literal": "\"outlined\"",
                          "formatted": "\"outlined\""
                        },
                        {
                          "text": "\"text\"",
                          "type": "string",
                          "literal": "\"text\"",
                          "formatted": "\"text\""
                        },
                        {
                          "text": "\"plain\"",
                          "type": "string",
                          "literal": "\"plain\"",
                          "formatted": "\"plain\""
                        }
                      ],
                      "formatted": "\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"",
                      "optional": true
                    },
                    "text": {
                      "text": "string | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        }
                      ],
                      "formatted": "string",
                      "optional": true
                    },
                    "absolute": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "closeOnBack": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "contained": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "contentClass": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "contentProps": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    },
                    "opacity": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "zIndex": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    },
                    "target": {
                      "text": "Element | (string & {}) | \"parent\" | \"cursor\" | ComponentPublicInstance | [x: number, y: number] | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Element",
                          "source": "typescript/lib/lib.dom.d.ts#L1746-L2004",
                          "type": "ref",
                          "ref": "Element",
                          "formatted": "Element"
                        },
                        {
                          "text": "string & {}",
                          "type": "allOf",
                          "items": [
                            {
                              "text": "string",
                              "type": "string",
                              "formatted": "string"
                            },
                            {
                              "text": "{}",
                              "type": "object",
                              "properties": {},
                              "formatted": "{  }"
                            }
                          ],
                          "formatted": "string & {  }"
                        },
                        {
                          "text": "\"parent\"",
                          "type": "string",
                          "literal": "\"parent\"",
                          "formatted": "\"parent\""
                        },
                        {
                          "text": "\"cursor\"",
                          "type": "string",
                          "literal": "\"cursor\"",
                          "formatted": "\"cursor\""
                        },
                        {
                          "text": "ComponentPublicInstance",
                          "source": "@vue/runtime-core/dist/runtime-core.d.ts#L482-L501",
                          "type": "ref",
                          "ref": "ComponentPublicInstance",
                          "formatted": "ComponentPublicInstance"
                        },
                        {
                          "text": "[x: number, y: number]",
                          "type": "array",
                          "items": [
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            },
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            }
                          ],
                          "length": 2,
                          "formatted": "[number, number]"
                        }
                      ],
                      "formatted": "Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]",
                      "optional": true
                    },
                    "closeOnContentClick": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "locationStrategy": {
                      "text": "\"static\" | \"connected\" | LocationStrategyFunction | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"static\"",
                          "type": "string",
                          "literal": "\"static\"",
                          "formatted": "\"static\""
                        },
                        {
                          "text": "\"connected\"",
                          "type": "string",
                          "literal": "\"connected\"",
                          "formatted": "\"connected\""
                        },
                        {
                          "text": "LocationStrategyFunction",
                          "source": "vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42",
                          "type": "ref",
                          "ref": "LocationStrategyFunction",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>"
                        }
                      ],
                      "formatted": "\"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>",
                      "optional": true
                    },
                    "location": {
                      "text": "Anchor | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Anchor",
                          "source": "vuetify/src/util/anchor.ts#L8-L14",
                          "type": "ref",
                          "ref": "Anchor",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
                        }
                      ],
                      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>",
                      "optional": true
                    },
                    "origin": {
                      "text": "Anchor | \"auto\" | \"overlap\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "Anchor",
                          "source": "vuetify/src/util/anchor.ts#L8-L14",
                          "type": "ref",
                          "ref": "Anchor",
                          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
                        },
                        {
                          "text": "\"auto\"",
                          "type": "string",
                          "literal": "\"auto\"",
                          "formatted": "\"auto\""
                        },
                        {
                          "text": "\"overlap\"",
                          "type": "string",
                          "literal": "\"overlap\"",
                          "formatted": "\"overlap\""
                        }
                      ],
                      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"",
                      "optional": true
                    },
                    "offset": {
                      "text": "string | number | number[] | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        },
                        {
                          "text": "number[]",
                          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
                          "type": "array",
                          "items": [
                            {
                              "text": "number",
                              "type": "number",
                              "formatted": "number"
                            }
                          ],
                          "formatted": "number[]"
                        }
                      ],
                      "formatted": "string | number | number[]",
                      "optional": true
                    },
                    "transition": {
                      "text": "string | boolean | (TransitionProps & { component?: Component | undefined; }) | null | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "null",
                          "type": "UNSUPPORTED",
                          "formatted": "null"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        },
                        {
                          "text": "TransitionProps & { component?: Component | undefined; }",
                          "type": "allOf",
                          "items": [
                            {
                              "text": "TransitionProps",
                              "source": "@vue/runtime-dom/dist/runtime-dom.d.ts#L8-L25",
                              "type": "ref",
                              "ref": "TransitionProps",
                              "formatted": "TransitionProps"
                            },
                            {
                              "text": "{ component?: Component | undefined; }",
                              "source": "vuetify/src/composables/transition.ts#L13-L13",
                              "type": "object",
                              "properties": {
                                "component": {
                                  "text": "Component | undefined",
                                  "type": "anyOf",
                                  "items": [
                                    {
                                      "text": "undefined",
                                      "type": "ref",
                                      "ref": "",
                                      "formatted": "undefined"
                                    },
                                    {
                                      "text": "Component",
                                      "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1409-L1409",
                                      "type": "ref",
                                      "ref": "Component",
                                      "formatted": "Component"
                                    }
                                  ],
                                  "formatted": "Component",
                                  "optional": true
                                }
                              },
                              "formatted": "{ component: Component }"
                            }
                          ],
                          "formatted": "TransitionProps & { component: Component }"
                        }
                      ],
                      "formatted": "string | boolean | TransitionProps & { component: Component }",
                      "optional": true
                    },
                    "attach": {
                      "text": "string | boolean | Element | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        },
                        {
                          "text": "Element",
                          "source": "typescript/lib/lib.dom.d.ts#L1746-L2004",
                          "type": "ref",
                          "ref": "Element",
                          "formatted": "Element"
                        }
                      ],
                      "formatted": "string | boolean | Element",
                      "optional": true
                    },
                    "vertical": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "position": {
                      "text": "\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\" | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "\"fixed\"",
                          "type": "string",
                          "literal": "\"fixed\"",
                          "formatted": "\"fixed\""
                        },
                        {
                          "text": "\"relative\"",
                          "type": "string",
                          "literal": "\"relative\"",
                          "formatted": "\"relative\""
                        },
                        {
                          "text": "\"absolute\"",
                          "type": "string",
                          "literal": "\"absolute\"",
                          "formatted": "\"absolute\""
                        },
                        {
                          "text": "\"static\"",
                          "type": "string",
                          "literal": "\"static\"",
                          "formatted": "\"static\""
                        },
                        {
                          "text": "\"sticky\"",
                          "type": "string",
                          "literal": "\"sticky\"",
                          "formatted": "\"sticky\""
                        }
                      ],
                      "formatted": "\"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"",
                      "optional": true
                    },
                    "multiLine": {
                      "text": "boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "boolean",
                      "optional": true
                    },
                    "timer": {
                      "text": "string | boolean | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "boolean",
                          "type": "boolean",
                          "formatted": "boolean"
                        }
                      ],
                      "formatted": "string | boolean",
                      "optional": true
                    },
                    "timeout": {
                      "text": "string | number | undefined",
                      "type": "anyOf",
                      "items": [
                        {
                          "text": "undefined",
                          "type": "UNSUPPORTED",
                          "formatted": "undefined"
                        },
                        {
                          "text": "string",
                          "type": "ref",
                          "ref": "",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "formatted": "string | number",
                      "optional": true
                    }
                  },
                  "formatted": "{ class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number }"
                },
                {
                  "text": "{ style?: any; }",
                  "source": "vuetify/src/components/VSnackbarQueue/VSnackbarQueue.tsx#L46-L46",
                  "type": "object",
                  "properties": {
                    "style": {
                      "text": "any",
                      "type": "any",
                      "formatted": "any",
                      "optional": true
                    }
                  },
                  "formatted": "{ style: any }"
                }
              ],
              "formatted": "{ class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number } & { style: any }"
            }
          ],
          "formatted": "string | { class: any; theme: string; disabled: boolean; height: string | number; width: string | number; eager: boolean; maxHeight: string | number; maxWidth: string | number; minHeight: string | number; minWidth: string | number; rounded: string | number | boolean; tile: boolean; color: string; variant: \"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\"; text: string; absolute: boolean; closeOnBack: boolean; contained: boolean; contentClass: any; contentProps: any; opacity: string | number; zIndex: string | number; target: Element | string & {  } | \"parent\" | \"cursor\" | ComponentPublicInstance | [number, number]; closeOnContentClick: boolean; locationStrategy: \"static\" | \"connected\" | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>; location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>; origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | \"auto\" | \"overlap\"; offset: string | number | number[]; transition: string | boolean | TransitionProps & { component: Component }; attach: string | boolean | Element; vertical: boolean; position: \"fixed\" | \"relative\" | \"absolute\" | \"static\" | \"sticky\"; multiLine: boolean; timer: string | boolean; timeout: string | number } & { style: any }",
          "optional": false
        },
        "props": {
          "text": "{ onClick: () => void; }",
          "source": "vuetify/src/components/VSnackbarQueue/VSnackbarQueue.tsx#L22-L24",
          "type": "object",
          "properties": {
            "onClick": {
              "text": "() => void",
              "source": "vuetify/src/components/VSnackbarQueue/VSnackbarQueue.tsx#L23-L23",
              "type": "function",
              "parameters": [],
              "returnType": {
                "text": "void",
                "type": "void",
                "formatted": "void"
              },
              "formatted": "() => void",
              "optional": false
            }
          },
          "formatted": "{ onClick: () => void }",
          "optional": false
        }
      },
      "formatted": "{\n  item:\n    | string\n    | ({\n        class: any\n        theme: string\n        disabled: boolean\n        height: string | number\n        width: string | number\n        eager: boolean\n        maxHeight: string | number\n        maxWidth: string | number\n        minHeight: string | number\n        minWidth: string | number\n        rounded: string | number | boolean\n        tile: boolean\n        color: string\n        variant: 'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'\n        text: string\n        absolute: boolean\n        closeOnBack: boolean\n        contained: boolean\n        contentClass: any\n        contentProps: any\n        opacity: string | number\n        zIndex: string | number\n        target:\n          | Element\n          | (string & {})\n          | 'parent'\n          | 'cursor'\n          | ComponentPublicInstance\n          | [number, number]\n        closeOnContentClick: boolean\n        locationStrategy: 'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L38-L42\" target=\"_blank\">LocationStrategyFunction</a>\n        location: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n        origin: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'\n        offset: string | number | number[]\n        transition:\n          | string\n          | boolean\n          | (TransitionProps & { component: Component })\n        attach: string | boolean | Element\n        vertical: boolean\n        position: 'fixed' | 'relative' | 'absolute' | 'static' | 'sticky'\n        multiLine: boolean\n        timer: string | boolean\n        timeout: string | number\n      } & { style: any })\n  props: { onClick: () => void }\n}\n",
      "optional": false,
      "description": {
        "en": "Used to bind styles to [v-btn](/components/buttons) to match MD2 specification."
      },
      "descriptionSource": {
        "en": "VSnackbar"
      }
    }
  },
  "exposed": {},
  "sass": {}
}