{
  "displayName": "VRadio",
  "fileName": "VRadio",
  "pathName": "v-radio",
  "props": {
    "modelValue": {
      "text": "any",
      "source": "SelectionControlGroup",
      "type": "any",
      "formatted": "any\n",
      "optional": false,
      "description": {
        "en": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "type": {
      "text": "string | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Provides the default type for children selection controls."
      },
      "descriptionSource": {
        "en": "SelectionControlGroup"
      }
    },
    "color": {
      "text": "string | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "density": {
      "text": "Density | undefined",
      "source": "density",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "Density",
          "source": "vuetify/src/composables/density.ts#L12-L12",
          "type": "anyOf",
          "items": [
            {
              "text": "null",
              "type": "UNSUPPORTED",
              "formatted": "null"
            },
            {
              "text": "\"default\"",
              "type": "string",
              "literal": "\"default\"",
              "formatted": "\"default\""
            },
            {
              "text": "\"comfortable\"",
              "type": "string",
              "literal": "\"comfortable\"",
              "formatted": "\"comfortable\""
            },
            {
              "text": "\"compact\"",
              "type": "string",
              "literal": "\"compact\"",
              "formatted": "\"compact\""
            }
          ],
          "formatted": "\"default\" | \"comfortable\" | \"compact\""
        }
      ],
      "formatted": "'default' | 'comfortable' | 'compact'\n",
      "optional": false,
      "default": "'default'",
      "description": {
        "en": "Adjusts the vertical height used by the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "theme": {
      "text": "string | undefined",
      "source": "theme",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Specify a theme for this component and all of its children."
      },
      "descriptionSource": {
        "en": "theme"
      }
    },
    "name": {
      "text": "string | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Sets the component's name attribute."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "label": {
      "text": "string | undefined",
      "source": "VSelectionControl",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "baseColor": {
      "text": "string | undefined",
      "source": "VSelectionControl",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Sets the color of the input when it is not focused."
      },
      "descriptionSource": {
        "en": "VSelectionControl"
      }
    },
    "disabled": {
      "text": "boolean | null | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "null",
          "type": "UNSUPPORTED",
          "formatted": "null"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": "null",
      "description": {
        "en": "Removes the ability to click or target the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "multiple": {
      "text": "boolean | null | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "null",
          "type": "UNSUPPORTED",
          "formatted": "null"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": "null",
      "description": {
        "en": "Changes select to multiple. Accepts array for value."
      },
      "descriptionSource": {
        "en": "SelectionControlGroup"
      }
    },
    "value": {
      "text": "any",
      "source": "VSelectionControl",
      "type": "any",
      "formatted": "any\n",
      "optional": false,
      "description": {
        "en": "The value used when the component is selected in a group. If not provided, a unique ID will be used."
      },
      "descriptionSource": {
        "en": "VSelectionControl"
      }
    },
    "valueComparator": {
      "text": "typeof deepEqual | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "typeof deepEqual",
          "source": "vuetify/src/util/helpers.ts#L46-L71",
          "type": "function",
          "parameters": [
            {
              "name": "a",
              "optional": false,
              "text": "any",
              "type": "any",
              "formatted": "any"
            },
            {
              "name": "b",
              "optional": false,
              "text": "any",
              "type": "any",
              "formatted": "any"
            }
          ],
          "returnType": {
            "text": "boolean",
            "type": "boolean",
            "formatted": "boolean"
          },
          "formatted": "(a: any, b: any) => boolean"
        }
      ],
      "formatted": "(a: any, b: any) => boolean\n",
      "optional": false,
      "description": {
        "en": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "id": {
      "text": "string | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Sets the DOM id on the component."
      },
      "descriptionSource": {
        "en": "SelectionControlGroup"
      }
    },
    "error": {
      "text": "boolean | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Puts the input in a manual error state."
      },
      "descriptionSource": {
        "en": "SelectionControlGroup"
      }
    },
    "readonly": {
      "text": "boolean | null | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "null",
          "type": "UNSUPPORTED",
          "formatted": "null"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": "null",
      "description": {
        "en": "Puts input in readonly state."
      },
      "descriptionSource": {
        "en": "SelectionControlGroup"
      }
    },
    "trueValue": {
      "text": "any",
      "source": "VSelectionControl",
      "type": "any",
      "formatted": "any\n",
      "optional": false,
      "description": {
        "en": "Sets value for truthy state."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "falseValue": {
      "text": "any",
      "source": "VSelectionControl",
      "type": "any",
      "formatted": "any\n",
      "optional": false,
      "description": {
        "en": "Sets value for falsy state."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "defaultsTarget": {
      "text": "string | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "The target component to provide defaults values for."
      },
      "descriptionSource": {
        "en": "SelectionControlGroup"
      }
    },
    "inline": {
      "text": "boolean | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Puts children inputs into a row."
      },
      "descriptionSource": {
        "en": "SelectionControlGroup"
      }
    },
    "falseIcon": {
      "text": "IconValue | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "IconValue",
          "source": "vuetify/src/composables/icons.tsx#L12-L15",
          "type": "anyOf",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "JSXComponent",
              "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
              "type": "anyOf",
              "items": [
                {
                  "text": "new () => any",
                  "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
                  "type": "constructor",
                  "formatted": "new () => any"
                },
                {
                  "text": "FunctionalComponent<any, {}, any, {}>",
                  "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
                  "type": "ref",
                  "ref": "FunctionalComponent",
                  "formatted": "FunctionalComponent"
                }
              ],
              "formatted": "(new () => any) | FunctionalComponent"
            },
            {
              "text": "(string | [path: string, opacity: number])[]",
              "source": "typescript/lib/lib.es5.d.ts#L4-L4",
              "type": "array",
              "items": [
                {
                  "text": "string",
                  "type": "string",
                  "formatted": "string"
                },
                {
                  "text": "[path: string, opacity: number]",
                  "type": "array",
                  "items": [
                    {
                      "text": "string",
                      "type": "string",
                      "formatted": "string"
                    },
                    {
                      "text": "number",
                      "type": "number",
                      "formatted": "number"
                    }
                  ],
                  "length": 2,
                  "formatted": "[string, number]"
                }
              ],
              "formatted": "(string | [string, number])[]"
            }
          ],
          "formatted": "string | (new () => any) | FunctionalComponent | (string | [string, number])[]"
        }
      ],
      "formatted": "  | string\n  | (new () => any)\n  | FunctionalComponent\n  | (string | [string, number])[]\n",
      "optional": false,
      "default": "'$radioOff'",
      "description": {
        "en": "The icon used when inactive."
      },
      "descriptionSource": {
        "en": "VRadio"
      }
    },
    "trueIcon": {
      "text": "IconValue | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "IconValue",
          "source": "vuetify/src/composables/icons.tsx#L12-L15",
          "type": "anyOf",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "JSXComponent",
              "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
              "type": "anyOf",
              "items": [
                {
                  "text": "new () => any",
                  "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
                  "type": "constructor",
                  "formatted": "new () => any"
                },
                {
                  "text": "FunctionalComponent<any, {}, any, {}>",
                  "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
                  "type": "ref",
                  "ref": "FunctionalComponent",
                  "formatted": "FunctionalComponent"
                }
              ],
              "formatted": "(new () => any) | FunctionalComponent"
            },
            {
              "text": "(string | [path: string, opacity: number])[]",
              "source": "typescript/lib/lib.es5.d.ts#L4-L4",
              "type": "array",
              "items": [
                {
                  "text": "string",
                  "type": "string",
                  "formatted": "string"
                },
                {
                  "text": "[path: string, opacity: number]",
                  "type": "array",
                  "items": [
                    {
                      "text": "string",
                      "type": "string",
                      "formatted": "string"
                    },
                    {
                      "text": "number",
                      "type": "number",
                      "formatted": "number"
                    }
                  ],
                  "length": 2,
                  "formatted": "[string, number]"
                }
              ],
              "formatted": "(string | [string, number])[]"
            }
          ],
          "formatted": "string | (new () => any) | FunctionalComponent | (string | [string, number])[]"
        }
      ],
      "formatted": "  | string\n  | (new () => any)\n  | FunctionalComponent\n  | (string | [string, number])[]\n",
      "optional": false,
      "default": "'$radioOn'",
      "description": {
        "en": "The icon used when active."
      },
      "descriptionSource": {
        "en": "VRadio"
      }
    },
    "ripple": {
      "text": "boolean | { class: string; } | undefined",
      "source": "SelectionControlGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        },
        {
          "text": "{ class: string; }",
          "source": "vuetify/src/directives/ripple/index.ts#L28-L28",
          "type": "object",
          "properties": {
            "class": {
              "text": "string",
              "type": "string",
              "formatted": "string",
              "optional": false
            }
          },
          "formatted": "{ class: string }"
        }
      ],
      "formatted": "boolean | { class: string }\n",
      "optional": false,
      "default": true,
      "description": {
        "en": "Applies the [v-ripple](/directives/ripple) directive."
      },
      "descriptionSource": {
        "en": "generic"
      }
    }
  },
  "events": {},
  "slots": {
    "default": {
      "text": "{ backgroundColorClasses: Ref<string[], string[]>; backgroundColorStyles: Ref<CSSProperties, CSSProperties>; }",
      "source": "vuetify/src/components/VSelectionControl/VSelectionControl.tsx#L50-L53",
      "type": "object",
      "properties": {
        "backgroundColorClasses": {
          "text": "Ref<string[], string[]>",
          "source": "@vue/reactivity/dist/reactivity.d.ts#L419-L428",
          "type": "ref",
          "ref": "Ref",
          "formatted": "Ref<string[], string[]>",
          "optional": false
        },
        "backgroundColorStyles": {
          "text": "Ref<CSSProperties, CSSProperties>",
          "source": "@vue/reactivity/dist/reactivity.d.ts#L419-L428",
          "type": "ref",
          "ref": "Ref",
          "formatted": "Ref<CSSProperties, CSSProperties>",
          "optional": false
        }
      },
      "formatted": "{\n  backgroundColorClasses: Ref<string[], string[]>\n  backgroundColorStyles: Ref<CSSProperties, CSSProperties>\n}\n",
      "optional": false,
      "description": {
        "en": "The default Vue slot."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "label": {
      "text": "{ label: string | undefined; props: Record<string, unknown>; }",
      "source": "vuetify/src/components/VSelectionControl/VSelectionControl.tsx#L54-L54",
      "type": "object",
      "properties": {
        "label": {
          "text": "string | undefined",
          "type": "anyOf",
          "items": [
            {
              "text": "undefined",
              "type": "UNSUPPORTED",
              "formatted": "undefined"
            },
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            }
          ],
          "formatted": "string",
          "optional": false
        },
        "props": {
          "text": "Record<string, unknown>",
          "source": "typescript/lib/lib.es5.d.ts#L6-L6",
          "type": "record",
          "key": {
            "text": "string",
            "type": "string",
            "formatted": "string"
          },
          "value": {
            "text": "unknown",
            "type": "unknown",
            "formatted": "unknown"
          },
          "formatted": "Record<string, unknown>",
          "optional": false
        }
      },
      "formatted": "{ label: string; props: Record<string, unknown> }\n",
      "optional": false,
      "description": {
        "en": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "input": {
      "text": "SelectionControlSlot",
      "source": "vuetify/src/components/VSelectionControl/VSelectionControl.tsx#L34-L47",
      "type": "object",
      "properties": {
        "model": {
          "text": "WritableComputedRef<boolean, boolean>",
          "source": "@vue/reactivity/dist/reactivity.d.ts#L358-L360",
          "type": "ref",
          "ref": "WritableComputedRef",
          "formatted": "WritableComputedRef<boolean, boolean>",
          "optional": false
        },
        "textColorClasses": {
          "text": "Ref<string[], string[]>",
          "source": "@vue/reactivity/dist/reactivity.d.ts#L419-L428",
          "type": "ref",
          "ref": "Ref",
          "formatted": "Ref<string[], string[]>",
          "optional": false
        },
        "textColorStyles": {
          "text": "Ref<CSSProperties, CSSProperties>",
          "source": "@vue/reactivity/dist/reactivity.d.ts#L419-L428",
          "type": "ref",
          "ref": "Ref",
          "formatted": "Ref<CSSProperties, CSSProperties>",
          "optional": false
        },
        "backgroundColorClasses": {
          "text": "Ref<string[], string[]>",
          "source": "@vue/reactivity/dist/reactivity.d.ts#L419-L428",
          "type": "ref",
          "ref": "Ref",
          "formatted": "Ref<string[], string[]>",
          "optional": false
        },
        "backgroundColorStyles": {
          "text": "Ref<CSSProperties, CSSProperties>",
          "source": "@vue/reactivity/dist/reactivity.d.ts#L419-L428",
          "type": "ref",
          "ref": "Ref",
          "formatted": "Ref<CSSProperties, CSSProperties>",
          "optional": false
        },
        "inputNode": {
          "text": "VNode<RendererNode, RendererElement, { [key: string]: any; }>",
          "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1204-L1229",
          "type": "ref",
          "ref": "VNode",
          "formatted": "VNode<RendererNode, RendererElement, { [key: string]: any; }>",
          "optional": false
        },
        "icon": {
          "text": "IconValue | undefined",
          "type": "anyOf",
          "items": [
            {
              "text": "undefined",
              "type": "UNSUPPORTED",
              "formatted": "undefined"
            },
            {
              "text": "IconValue",
              "source": "vuetify/src/composables/icons.tsx#L12-L15",
              "type": "anyOf",
              "items": [
                {
                  "text": "string",
                  "type": "string",
                  "formatted": "string"
                },
                {
                  "text": "JSXComponent",
                  "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
                  "type": "anyOf",
                  "items": [
                    {
                      "text": "new () => any",
                      "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
                      "type": "constructor",
                      "formatted": "new () => any"
                    },
                    {
                      "text": "FunctionalComponent<any, {}, any, {}>",
                      "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
                      "type": "ref",
                      "ref": "FunctionalComponent",
                      "formatted": "FunctionalComponent"
                    }
                  ],
                  "formatted": "(new () => any) | FunctionalComponent"
                },
                {
                  "text": "(string | [path: string, opacity: number])[]",
                  "source": "typescript/lib/lib.es5.d.ts#L4-L4",
                  "type": "array",
                  "items": [
                    {
                      "text": "string",
                      "type": "string",
                      "formatted": "string"
                    },
                    {
                      "text": "[path: string, opacity: number]",
                      "type": "array",
                      "items": [
                        {
                          "text": "string",
                          "type": "string",
                          "formatted": "string"
                        },
                        {
                          "text": "number",
                          "type": "number",
                          "formatted": "number"
                        }
                      ],
                      "length": 2,
                      "formatted": "[string, number]"
                    }
                  ],
                  "formatted": "(string | [string, number])[]"
                }
              ],
              "formatted": "string | (new () => any) | FunctionalComponent | (string | [string, number])[]"
            }
          ],
          "formatted": "string | (new () => any) | FunctionalComponent | (string | [string, number])[]",
          "optional": false
        },
        "props": {
          "text": "{ onBlur: (e: Event) => void; onFocus: (e: FocusEvent) => void; id: string; }",
          "source": "vuetify/src/components/VSelectionControl/VSelectionControl.tsx#L42-L46",
          "type": "object",
          "properties": {
            "onBlur": {
              "text": "(e: Event) => void",
              "source": "vuetify/src/components/VSelectionControl/VSelectionControl.tsx#L43-L43",
              "type": "function",
              "parameters": [
                {
                  "name": "e",
                  "optional": false,
                  "text": "Event",
                  "source": "typescript/lib/lib.dom.d.ts#L2163-L2276",
                  "type": "ref",
                  "ref": "Event",
                  "formatted": "Event"
                }
              ],
              "returnType": {
                "text": "void",
                "type": "void",
                "formatted": "void"
              },
              "formatted": "(e: Event) => void",
              "optional": false
            },
            "onFocus": {
              "text": "(e: FocusEvent) => void",
              "source": "vuetify/src/components/VSelectionControl/VSelectionControl.tsx#L44-L44",
              "type": "function",
              "parameters": [
                {
                  "name": "e",
                  "optional": false,
                  "text": "FocusEvent",
                  "source": "typescript/lib/lib.dom.d.ts#L2674-L2677",
                  "type": "ref",
                  "ref": "FocusEvent",
                  "formatted": "FocusEvent"
                }
              ],
              "returnType": {
                "text": "void",
                "type": "void",
                "formatted": "void"
              },
              "formatted": "(e: FocusEvent) => void",
              "optional": false
            },
            "id": {
              "text": "string",
              "type": "string",
              "formatted": "string",
              "optional": false
            }
          },
          "formatted": "{ onBlur: (e: Event) => void; onFocus: (e: FocusEvent) => void; id: string }",
          "optional": false
        }
      },
      "formatted": "{\n  model: WritableComputedRef<boolean, boolean>\n  textColorClasses: Ref<string[], string[]>\n  textColorStyles: Ref<CSSProperties, CSSProperties>\n  backgroundColorClasses: Ref<string[], string[]>\n  backgroundColorStyles: Ref<CSSProperties, CSSProperties>\n  inputNode: VNode<RendererNode, RendererElement, { [key: string]: any }>\n  icon:\n    | string\n    | (new () => any)\n    | FunctionalComponent\n    | (string | [string, number])[]\n  props: {\n    onBlur: (e: Event) => void\n    onFocus: (e: FocusEvent) => void\n    id: string\n  }\n}\n",
      "optional": false,
      "description": {
        "en": "The slot used for the default input element."
      },
      "descriptionSource": {
        "en": "VSelectionControl"
      }
    }
  },
  "exposed": {},
  "sass": {}
}