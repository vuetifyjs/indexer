{
  "displayName": "VChipGroup",
  "fileName": "VChipGroup",
  "pathName": "v-chip-group",
  "props": {
    "symbol": {
      "text": "any",
      "source": "VSlideGroup",
      "type": "any",
      "formatted": "any\n",
      "optional": false,
      "description": {
        "en": "The [Symbol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol) used to hook into group functionality for components like [v-btn-toggle](/components/btn-toggle) and [v-bottom-navigation](/components/bottom-navigations/)."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "filter": {
      "text": "boolean | undefined",
      "source": "VChipGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Applies an checkmark icon in front of every chip for using it like a filter."
      },
      "descriptionSource": {
        "en": "VChipGroup"
      }
    },
    "baseColor": {
      "text": "string | undefined",
      "source": "VChipGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Sets the color of component when not focused. Recommended with `color` or `filter` to properly highlight selected items."
      },
      "descriptionSource": {
        "en": "VChipGroup"
      }
    },
    "disabled": {
      "text": "boolean | undefined",
      "source": "group",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Puts all children components into a disabled state."
      },
      "descriptionSource": {
        "en": "group"
      }
    },
    "selectedClass": {
      "text": "string | undefined",
      "source": "group",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "default": "'v-chip--selected'",
      "description": {
        "en": "Configure the active CSS class applied when an item is selected."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "tag": {
      "text": "string | JSXComponent | undefined",
      "source": "tag",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "JSXComponent",
          "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
          "type": "anyOf",
          "items": [
            {
              "text": "new () => any",
              "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
              "type": "constructor",
              "formatted": "new () => any"
            },
            {
              "text": "FunctionalComponent<any, {}, any, {}>",
              "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
              "type": "ref",
              "ref": "FunctionalComponent",
              "formatted": "FunctionalComponent"
            }
          ],
          "formatted": "(new () => any) | FunctionalComponent"
        }
      ],
      "formatted": "string | (new () => any) | FunctionalComponent\n",
      "optional": false,
      "default": "'div'",
      "description": {
        "en": "Specify a custom tag used on the root element."
      },
      "descriptionSource": {
        "en": "tag"
      }
    },
    "theme": {
      "text": "string | undefined",
      "source": "theme",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Specify a theme for this component and all of its children."
      },
      "descriptionSource": {
        "en": "theme"
      }
    },
    "color": {
      "text": "string | undefined",
      "source": "variant",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "variant": {
      "text": "\"flat\" | \"text\" | \"elevated\" | \"tonal\" | \"outlined\" | \"plain\" | undefined",
      "source": "variant",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "\"flat\"",
          "type": "string",
          "literal": "\"flat\"",
          "formatted": "\"flat\""
        },
        {
          "text": "\"text\"",
          "type": "string",
          "literal": "\"text\"",
          "formatted": "\"text\""
        },
        {
          "text": "\"elevated\"",
          "type": "string",
          "literal": "\"elevated\"",
          "formatted": "\"elevated\""
        },
        {
          "text": "\"tonal\"",
          "type": "string",
          "literal": "\"tonal\"",
          "formatted": "\"tonal\""
        },
        {
          "text": "\"outlined\"",
          "type": "string",
          "literal": "\"outlined\"",
          "formatted": "\"outlined\""
        },
        {
          "text": "\"plain\"",
          "type": "string",
          "literal": "\"plain\"",
          "formatted": "\"plain\""
        }
      ],
      "formatted": "'flat' | 'text' | 'elevated' | 'tonal' | 'outlined' | 'plain'\n",
      "optional": false,
      "default": "'tonal'",
      "description": {
        "en": "Applies a distinct style to the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "nextIcon": {
      "text": "IconValue | undefined",
      "source": "VSlideGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "IconValue",
          "source": "vuetify/src/composables/icons.tsx#L12-L15",
          "type": "anyOf",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "(string | [path: string, opacity: number])[]",
              "source": "typescript/lib/lib.es5.d.ts#L4-L4",
              "type": "array",
              "items": [
                {
                  "text": "string",
                  "type": "string",
                  "formatted": "string"
                },
                {
                  "text": "[path: string, opacity: number]",
                  "type": "array",
                  "items": [
                    {
                      "text": "string",
                      "type": "string",
                      "formatted": "string"
                    },
                    {
                      "text": "number",
                      "type": "number",
                      "formatted": "number"
                    }
                  ],
                  "length": 2,
                  "formatted": "[string, number]"
                }
              ],
              "formatted": "(string | [string, number])[]"
            },
            {
              "text": "JSXComponent",
              "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
              "type": "anyOf",
              "items": [
                {
                  "text": "new () => any",
                  "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
                  "type": "constructor",
                  "formatted": "new () => any"
                },
                {
                  "text": "FunctionalComponent<any, {}, any, {}>",
                  "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
                  "type": "ref",
                  "ref": "FunctionalComponent",
                  "formatted": "FunctionalComponent"
                }
              ],
              "formatted": "(new () => any) | FunctionalComponent"
            }
          ],
          "formatted": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
        }
      ],
      "formatted": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n",
      "optional": false,
      "default": "'$next'",
      "description": {
        "en": "Specify the icon to use for the next icon."
      },
      "descriptionSource": {
        "en": "VChipGroup"
      }
    },
    "prevIcon": {
      "text": "IconValue | undefined",
      "source": "VSlideGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "IconValue",
          "source": "vuetify/src/composables/icons.tsx#L12-L15",
          "type": "anyOf",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "(string | [path: string, opacity: number])[]",
              "source": "typescript/lib/lib.es5.d.ts#L4-L4",
              "type": "array",
              "items": [
                {
                  "text": "string",
                  "type": "string",
                  "formatted": "string"
                },
                {
                  "text": "[path: string, opacity: number]",
                  "type": "array",
                  "items": [
                    {
                      "text": "string",
                      "type": "string",
                      "formatted": "string"
                    },
                    {
                      "text": "number",
                      "type": "number",
                      "formatted": "number"
                    }
                  ],
                  "length": 2,
                  "formatted": "[string, number]"
                }
              ],
              "formatted": "(string | [string, number])[]"
            },
            {
              "text": "JSXComponent",
              "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
              "type": "anyOf",
              "items": [
                {
                  "text": "new () => any",
                  "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
                  "type": "constructor",
                  "formatted": "new () => any"
                },
                {
                  "text": "FunctionalComponent<any, {}, any, {}>",
                  "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
                  "type": "ref",
                  "ref": "FunctionalComponent",
                  "formatted": "FunctionalComponent"
                }
              ],
              "formatted": "(new () => any) | FunctionalComponent"
            }
          ],
          "formatted": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
        }
      ],
      "formatted": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n",
      "optional": false,
      "default": "'$prev'",
      "description": {
        "en": "Specify the icon to use for the prev icon."
      },
      "descriptionSource": {
        "en": "VChipGroup"
      }
    },
    "showArrows": {
      "text": "string | boolean | undefined",
      "source": "VSlideGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Force the display of the pagination arrows."
      },
      "descriptionSource": {
        "en": "VChipGroup"
      }
    },
    "direction": {
      "text": "\"horizontal\" | \"vertical\" | undefined",
      "source": "VSlideGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "\"horizontal\"",
          "type": "string",
          "literal": "\"horizontal\"",
          "formatted": "\"horizontal\""
        },
        {
          "text": "\"vertical\"",
          "type": "string",
          "literal": "\"vertical\"",
          "formatted": "\"vertical\""
        }
      ],
      "formatted": "'horizontal' | 'vertical'\n",
      "optional": false,
      "default": "'horizontal'",
      "description": {
        "en": "Switch between horizontal and vertical modes."
      },
      "descriptionSource": {
        "en": "VSlideGroup"
      }
    },
    "modelValue": {
      "text": "unknown",
      "source": "group",
      "type": "unknown",
      "formatted": "unknown\n",
      "optional": false,
      "description": {
        "en": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "mandatory": {
      "text": "boolean | \"force\" | undefined",
      "source": "group",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        },
        {
          "text": "\"force\"",
          "type": "string",
          "literal": "\"force\"",
          "formatted": "\"force\""
        }
      ],
      "formatted": "boolean | 'force'\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Forces at least one item to always be selected (if available)."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "column": {
      "text": "boolean | undefined",
      "source": "VChipGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Remove horizontal pagination and wrap items as needed."
      },
      "descriptionSource": {
        "en": "VChipGroup"
      }
    },
    "valueComparator": {
      "text": "typeof deepEqual | undefined",
      "source": "VChipGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "typeof deepEqual",
          "source": "vuetify/src/util/helpers.ts#L46-L71",
          "type": "function",
          "parameters": [
            {
              "name": "a",
              "optional": false,
              "text": "any",
              "type": "any",
              "formatted": "any"
            },
            {
              "name": "b",
              "optional": false,
              "text": "any",
              "type": "any",
              "formatted": "any"
            }
          ],
          "returnType": {
            "text": "boolean",
            "type": "boolean",
            "formatted": "boolean"
          },
          "formatted": "(a: any, b: any) => boolean"
        }
      ],
      "formatted": "(a: any, b: any) => boolean\n",
      "optional": false,
      "description": {
        "en": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "centerActive": {
      "text": "boolean | undefined",
      "source": "VSlideGroup",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Forces the selected chip to be centered."
      },
      "descriptionSource": {
        "en": "VChipGroup"
      }
    },
    "mobile": {
      "text": "boolean | null | undefined",
      "source": "display",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "null",
          "type": "UNSUPPORTED",
          "formatted": "null"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": "null",
      "description": {
        "en": "Determines the display mode of the component. If true, the component will be displayed in mobile mode. If false, the component will be displayed in desktop mode. If null, will be based on the current mobile-breakpoint"
      },
      "descriptionSource": {
        "en": "display"
      }
    },
    "mobileBreakpoint": {
      "text": "number | DisplayBreakpoint | undefined",
      "source": "display",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "DisplayBreakpoint",
          "source": "vuetify/src/composables/display.ts#L13-L13",
          "type": "anyOf",
          "items": [
            {
              "text": "\"xs\"",
              "type": "string",
              "literal": "\"xs\"",
              "formatted": "\"xs\""
            },
            {
              "text": "\"sm\"",
              "type": "string",
              "literal": "\"sm\"",
              "formatted": "\"sm\""
            },
            {
              "text": "\"md\"",
              "type": "string",
              "literal": "\"md\"",
              "formatted": "\"md\""
            },
            {
              "text": "\"lg\"",
              "type": "string",
              "literal": "\"lg\"",
              "formatted": "\"lg\""
            },
            {
              "text": "\"xl\"",
              "type": "string",
              "literal": "\"xl\"",
              "formatted": "\"xl\""
            },
            {
              "text": "\"xxl\"",
              "type": "string",
              "literal": "\"xxl\"",
              "formatted": "\"xxl\""
            }
          ],
          "formatted": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\""
        }
      ],
      "formatted": "number | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n",
      "optional": false,
      "description": {
        "en": "Sets the designated mobile breakpoint for the component."
      },
      "descriptionSource": {
        "en": "VSlideGroup"
      }
    },
    "multiple": {
      "text": "boolean | undefined",
      "source": "group",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Allows one to select multiple items."
      },
      "descriptionSource": {
        "en": "group"
      }
    },
    "max": {
      "text": "number | undefined",
      "source": "group",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "number\n",
      "optional": false,
      "description": {
        "en": "Sets a maximum number of selections that can be made."
      },
      "descriptionSource": {
        "en": "group"
      }
    }
  },
  "events": {
    "update:modelValue": {
      "text": "[value: unknown]",
      "type": "array",
      "items": [
        {
          "text": "unknown",
          "type": "unknown",
          "formatted": "unknown"
        }
      ],
      "length": 1,
      "formatted": "[unknown]\n",
      "optional": false,
      "description": {
        "en": "Event that is emitted when the component's model changes."
      },
      "descriptionSource": {
        "en": "generic"
      }
    }
  },
  "slots": {
    "default": {
      "text": "{ isSelected: (id: string) => boolean; select: (id: string, value: boolean) => void; next: () => void; prev: () => void; selected: readonly string[]; }",
      "source": "vuetify/src/components/VChipGroup/VChipGroup.tsx#L43-L49",
      "type": "object",
      "properties": {
        "isSelected": {
          "text": "(id: string) => boolean",
          "source": "vuetify/src/components/VChipGroup/VChipGroup.tsx#L44-L44",
          "type": "function",
          "parameters": [
            {
              "name": "id",
              "optional": false,
              "text": "string",
              "type": "string",
              "formatted": "string"
            }
          ],
          "returnType": {
            "text": "boolean",
            "type": "boolean",
            "formatted": "boolean"
          },
          "formatted": "(id: string) => boolean",
          "optional": false
        },
        "select": {
          "text": "(id: string, value: boolean) => void",
          "source": "vuetify/src/components/VChipGroup/VChipGroup.tsx#L45-L45",
          "type": "function",
          "parameters": [
            {
              "name": "id",
              "optional": false,
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "name": "value",
              "optional": false,
              "text": "boolean",
              "type": "boolean",
              "formatted": "boolean"
            }
          ],
          "returnType": {
            "text": "void",
            "type": "void",
            "formatted": "void"
          },
          "formatted": "(id: string, value: boolean) => void",
          "optional": false
        },
        "next": {
          "text": "() => void",
          "source": "vuetify/src/components/VChipGroup/VChipGroup.tsx#L46-L46",
          "type": "function",
          "parameters": [],
          "returnType": {
            "text": "void",
            "type": "void",
            "formatted": "void"
          },
          "formatted": "() => void",
          "optional": false
        },
        "prev": {
          "text": "() => void",
          "source": "vuetify/src/components/VChipGroup/VChipGroup.tsx#L47-L47",
          "type": "function",
          "parameters": [],
          "returnType": {
            "text": "void",
            "type": "void",
            "formatted": "void"
          },
          "formatted": "() => void",
          "optional": false
        },
        "selected": {
          "text": "readonly string[]",
          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
          "type": "array",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            }
          ],
          "formatted": "string[]",
          "optional": false
        }
      },
      "formatted": "{\n  isSelected: (id: string) => boolean\n  select: (id: string, value: boolean) => void\n  next: () => void\n  prev: () => void\n  selected: string[]\n}\n",
      "optional": false,
      "description": {
        "en": "The default Vue slot."
      },
      "descriptionSource": {
        "en": "generic"
      }
    }
  },
  "exposed": {},
  "sass": {
    "$chip-group-selected-opacity": {
      "default": "var(--v-activated-opacity)"
    },
    "$chip-group-padding": {
      "default": "4px 0"
    },
    "$chip-group-margin": {
      "default": "4px 8px 4px 0"
    }
  }
}