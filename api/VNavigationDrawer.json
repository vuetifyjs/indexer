{
  "displayName": "VNavigationDrawer",
  "fileName": "VNavigationDrawer",
  "pathName": "v-navigation-drawer",
  "props": {
    "theme": {
      "text": "string | undefined",
      "source": "theme",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Specify a theme for this component and all of its children."
      },
      "descriptionSource": {
        "en": "theme"
      }
    },
    "name": {
      "text": "string | undefined",
      "source": "layout-item",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Assign a specific name for layout registration."
      },
      "descriptionSource": {
        "en": "layout-item"
      }
    },
    "width": {
      "text": "string | number | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "default": 256,
      "description": {
        "en": "Sets the width for the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "border": {
      "text": "string | number | boolean | undefined",
      "source": "border",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Applies utility border classes to the component. To use it, you need to omit the `border-` prefix, (for example use `border-sm` as `border=\"sm\"`).  Find a list of the built-in border classes on the [borders page](/styles/borders)."
      },
      "descriptionSource": {
        "en": "border"
      }
    },
    "elevation": {
      "text": "string | number | undefined",
      "source": "elevation",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
      },
      "descriptionSource": {
        "en": "elevation"
      }
    },
    "rounded": {
      "text": "string | number | boolean | undefined",
      "source": "rounded",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "description": {
        "en": "Designates the **border-radius** applied to the component. This can be **0**, **xs**, **sm**, true, **lg**, **xl**, **pill**, **circle**, and **shaped**. Find more information on available border radius classes on the [Border Radius page](/styles/border-radius)."
      },
      "descriptionSource": {
        "en": "rounded"
      }
    },
    "tile": {
      "text": "boolean | undefined",
      "source": "rounded",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Removes any applied **border-radius** from the component."
      },
      "descriptionSource": {
        "en": "rounded"
      }
    },
    "tag": {
      "text": "string | JSXComponent | undefined",
      "source": "tag",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "JSXComponent",
          "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
          "type": "anyOf",
          "items": [
            {
              "text": "new () => any",
              "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
              "type": "constructor",
              "formatted": "new () => any"
            },
            {
              "text": "FunctionalComponent<any, {}, any, {}>",
              "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
              "type": "ref",
              "ref": "FunctionalComponent",
              "formatted": "FunctionalComponent"
            }
          ],
          "formatted": "(new () => any) | FunctionalComponent"
        }
      ],
      "formatted": "string | (new () => any) | FunctionalComponent\n",
      "optional": false,
      "default": "'nav'",
      "description": {
        "en": "Specify a custom tag used on the root element."
      },
      "descriptionSource": {
        "en": "tag"
      }
    },
    "color": {
      "text": "string | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "absolute": {
      "text": "boolean | undefined",
      "source": "layout-item",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Applies **position: absolute** to the component."
      },
      "descriptionSource": {
        "en": "layout-item"
      }
    },
    "modelValue": {
      "text": "boolean | null | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "null",
          "type": "UNSUPPORTED",
          "formatted": "null"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": "null",
      "description": {
        "en": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "persistent": {
      "text": "boolean | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Clicking outside or pressing **esc** key will not dismiss the dialog."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "scrim": {
      "text": "string | boolean | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | boolean\n",
      "optional": false,
      "default": true,
      "description": {
        "en": "Determines whether an overlay is used when a **temporary** drawer is open. Accepts true/false to enable background, and string to define color."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "closeDelay": {
      "text": "string | number | undefined",
      "source": "delay",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Milliseconds to wait before closing component. Only applies to hover and focus events."
      },
      "descriptionSource": {
        "en": "delay"
      }
    },
    "openDelay": {
      "text": "string | number | undefined",
      "source": "delay",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Milliseconds to wait before opening component. Only applies to hover and focus events."
      },
      "descriptionSource": {
        "en": "delay"
      }
    },
    "location": {
      "text": "\"top\" | \"left\" | \"right\" | \"bottom\" | \"start\" | \"end\" | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "\"top\"",
          "type": "string",
          "literal": "\"top\"",
          "formatted": "\"top\""
        },
        {
          "text": "\"left\"",
          "type": "string",
          "literal": "\"left\"",
          "formatted": "\"left\""
        },
        {
          "text": "\"right\"",
          "type": "string",
          "literal": "\"right\"",
          "formatted": "\"right\""
        },
        {
          "text": "\"bottom\"",
          "type": "string",
          "literal": "\"bottom\"",
          "formatted": "\"bottom\""
        },
        {
          "text": "\"start\"",
          "type": "string",
          "literal": "\"start\"",
          "formatted": "\"start\""
        },
        {
          "text": "\"end\"",
          "type": "string",
          "literal": "\"end\"",
          "formatted": "\"end\""
        }
      ],
      "formatted": "'top' | 'left' | 'right' | 'bottom' | 'start' | 'end'\n",
      "optional": false,
      "default": "'start'",
      "description": {
        "en": "Controls the edge of the screen the drawer is attached to."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "mobile": {
      "text": "boolean | null | undefined",
      "source": "display",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "null",
          "type": "UNSUPPORTED",
          "formatted": "null"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": "null",
      "description": {
        "en": "Determines the display mode of the component. If true, the component will be displayed in mobile mode. If false, the component will be displayed in desktop mode. If null, will be based on the current mobile-breakpoint"
      },
      "descriptionSource": {
        "en": "display"
      }
    },
    "image": {
      "text": "string | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Apply a specific background image to the component."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "floating": {
      "text": "boolean | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "A floating drawer has no visible container (no border-right)."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "sticky": {
      "text": "boolean | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "When true, the drawer will remain visible when scrolling past the top of the page."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "order": {
      "text": "string | number | undefined",
      "source": "layout-item",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "default": 0,
      "description": {
        "en": "Adjust the order of the component in relation to its registration order."
      },
      "descriptionSource": {
        "en": "layout-item"
      }
    },
    "disableResizeWatcher": {
      "text": "boolean | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Prevents the automatic opening or closing of the drawer when resized, based on whether the device is mobile or desktop."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "disableRouteWatcher": {
      "text": "boolean | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Disables opening of navigation drawer when route changes."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "expandOnHover": {
      "text": "boolean | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Collapses the drawer to a **rail-variant** until hovering with the mouse."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "permanent": {
      "text": "boolean | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "The drawer remains visible regardless of screen size."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "rail": {
      "text": "boolean | null | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "null",
          "type": "UNSUPPORTED",
          "formatted": "null"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": "null",
      "description": {
        "en": "Sets the component width to the **rail-width** value."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "railWidth": {
      "text": "string | number | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "default": 56,
      "description": {
        "en": "Sets the width for the component when `rail` is enabled."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "temporary": {
      "text": "boolean | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "A temporary drawer sits above its application and uses a scrim (overlay) to darken the background."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "touchless": {
      "text": "boolean | undefined",
      "source": "VNavigationDrawer",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Disable mobile touch functionality."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "mobileBreakpoint": {
      "text": "number | DisplayBreakpoint | undefined",
      "source": "display",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "DisplayBreakpoint",
          "source": "vuetify/src/composables/display.ts#L13-L13",
          "type": "anyOf",
          "items": [
            {
              "text": "\"xs\"",
              "type": "string",
              "literal": "\"xs\"",
              "formatted": "\"xs\""
            },
            {
              "text": "\"sm\"",
              "type": "string",
              "literal": "\"sm\"",
              "formatted": "\"sm\""
            },
            {
              "text": "\"md\"",
              "type": "string",
              "literal": "\"md\"",
              "formatted": "\"md\""
            },
            {
              "text": "\"lg\"",
              "type": "string",
              "literal": "\"lg\"",
              "formatted": "\"lg\""
            },
            {
              "text": "\"xl\"",
              "type": "string",
              "literal": "\"xl\"",
              "formatted": "\"xl\""
            },
            {
              "text": "\"xxl\"",
              "type": "string",
              "literal": "\"xxl\"",
              "formatted": "\"xxl\""
            }
          ],
          "formatted": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\""
        }
      ],
      "formatted": "number | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'\n",
      "optional": false,
      "description": {
        "en": "Sets the designated mobile breakpoint for the component. This will apply alternate styles for mobile devices such as the `temporary` prop, or activate the `bottom` prop when the breakpoint value is met. Setting the value to `0` will disable this functionality."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    }
  },
  "events": {
    "update:modelValue": {
      "text": "[val: boolean]",
      "type": "array",
      "items": [
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "length": 1,
      "formatted": "[boolean]\n",
      "optional": false,
      "description": {
        "en": "Event that is emitted when the component's model changes."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "update:rail": {
      "text": "[val: boolean]",
      "type": "array",
      "items": [
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "length": 1,
      "formatted": "[boolean]\n",
      "optional": false,
      "description": {
        "en": "Event that is emitted when the rail model changes."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    }
  },
  "slots": {
    "default": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "The default Vue slot."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "prepend": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "A slot at the top of the drawer"
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "append": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "A slot at the bottom of the drawer."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    },
    "image": {
      "text": "VNavigationDrawerImageSlot",
      "source": "vuetify/src/components/VNavigationDrawer/VNavigationDrawer.tsx#L36-L38",
      "type": "object",
      "properties": {
        "image": {
          "text": "string | undefined",
          "type": "anyOf",
          "items": [
            {
              "text": "undefined",
              "type": "UNSUPPORTED",
              "formatted": "undefined"
            },
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            }
          ],
          "formatted": "string",
          "optional": false
        }
      },
      "formatted": "{ image: string }\n",
      "optional": false,
      "description": {
        "en": "Used to modify `v-img` properties when using the **src** prop."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    }
  },
  "exposed": {
    "isStuck": {
      "text": "boolean | \"top\" | \"bottom\"",
      "type": "anyOf",
      "items": [
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        },
        {
          "text": "\"top\"",
          "type": "string",
          "literal": "\"top\"",
          "formatted": "\"top\""
        },
        {
          "text": "\"bottom\"",
          "type": "string",
          "literal": "\"bottom\"",
          "formatted": "\"bottom\""
        }
      ],
      "formatted": "boolean | 'top' | 'bottom'\n",
      "optional": false,
      "description": {
        "en": "Used to determine if the drawer is stuck to the top of the page."
      },
      "descriptionSource": {
        "en": "VNavigationDrawer"
      }
    }
  },
  "sass": {
    "$navigation-drawer-background": {
      "default": "rgb(var(--v-theme-surface))"
    },
    "$navigation-drawer-border": {
      "default": "(\n  $navigation-drawer-border-color,\n  $navigation-drawer-border-style,\n  $navigation-drawer-border-width,\n  $navigation-drawer-border-thin-width\n)"
    },
    "$navigation-drawer-border-color": {
      "default": "settings.$border-color-root"
    },
    "$navigation-drawer-border-radius": {
      "default": "map.get(settings.$rounded, '0')"
    },
    "$navigation-drawer-border-style": {
      "default": "settings.$border-style-root"
    },
    "$navigation-drawer-border-thin-width": {
      "default": "thin"
    },
    "$navigation-drawer-border-width": {
      "default": "0"
    },
    "$navigation-drawer-color": {
      "default": "rgba(var(--v-theme-on-surface), var(--v-high-emphasis-opacity))"
    },
    "$navigation-drawer-content-height": {
      "default": "100%"
    },
    "$navigation-drawer-content-overflow-x": {
      "default": "hidden"
    },
    "$navigation-drawer-content-overflow-y": {
      "default": "auto"
    },
    "$navigation-drawer-elevation": {
      "default": "0"
    },
    "$navigation-drawer-height": {
      "default": "100%"
    },
    "$navigation-drawer-img-height": {
      "default": "inherit"
    },
    "$navigation-drawer-img-object-fit": {
      "default": "cover"
    },
    "$navigation-drawer-img-width": {
      "default": "inherit"
    },
    "$navigation-drawer-overflow-scrolling": {
      "default": "touch"
    },
    "$navigation-drawer-rounded-border-radius": {
      "default": "settings.$border-radius-root"
    },
    "$navigation-drawer-scrim-opacity": {
      "default": ".2"
    },
    "$navigation-drawer-temporary-elevation": {
      "default": "16"
    },
    "$navigation-drawer-theme": {
      "default": "(\n  $navigation-drawer-background,\n  $navigation-drawer-color\n)"
    },
    "$navigation-drawer-transition-duration": {
      "default": "0.2s"
    },
    "$navigation-drawer-transition-property": {
      "default": "box-shadow, transform, visibility, width, height, left, right, top, bottom"
    },
    "$navigation-drawer-transition-timing-function": {
      "default": "settings.$standard-easing"
    }
  }
}