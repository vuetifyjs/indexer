{
  "displayName": "VCard",
  "fileName": "VCard",
  "pathName": "v-card",
  "props": {
    "flat": {
      "text": "boolean | undefined",
      "source": "VCard",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Removes the card's elevation."
      },
      "descriptionSource": {
        "en": "VCard"
      }
    },
    "replace": {
      "text": "boolean | undefined",
      "source": "router",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [replace](https://router.vuejs.org/api/#replace) prop on the vue-router documentation."
      },
      "descriptionSource": {
        "en": "router"
      }
    },
    "link": {
      "text": "boolean | undefined",
      "source": "VCard",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "description": {
        "en": "Designates that the component is a link. This is automatic when using the href or to prop."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "tag": {
      "text": "string | JSXComponent | undefined",
      "source": "tag",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "JSXComponent",
          "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
          "type": "anyOf",
          "items": [
            {
              "text": "new () => any",
              "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
              "type": "constructor",
              "formatted": "new () => any"
            },
            {
              "text": "FunctionalComponent<any, {}, any, {}>",
              "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
              "type": "ref",
              "ref": "FunctionalComponent",
              "formatted": "FunctionalComponent"
            }
          ],
          "formatted": "(new () => any) | FunctionalComponent"
        }
      ],
      "formatted": "string | (new () => any) | FunctionalComponent\n",
      "optional": false,
      "default": "'div'",
      "description": {
        "en": "Specify a custom tag used on the root element."
      },
      "descriptionSource": {
        "en": "tag"
      }
    },
    "title": {
      "text": "string | number | boolean | undefined",
      "source": "VCard",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "description": {
        "en": "Specify a title text for the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "color": {
      "text": "string | undefined",
      "source": "variant",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "location": {
      "text": "Anchor | null | undefined",
      "source": "location",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "null",
          "type": "UNSUPPORTED",
          "formatted": "null"
        },
        {
          "text": "Anchor",
          "source": "vuetify/src/util/anchor.ts#L8-L14",
          "type": "ref",
          "ref": "Anchor",
          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
        }
      ],
      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n",
      "optional": false,
      "description": {
        "en": "Specifies the component's location. Can combine by using a space separated string."
      },
      "descriptionSource": {
        "en": "location"
      }
    },
    "rounded": {
      "text": "string | number | boolean | undefined",
      "source": "rounded",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "description": {
        "en": "Designates the **border-radius** applied to the component. This can be **0**, **xs**, **sm**, true, **lg**, **xl**, **pill**, **circle**, and **shaped**. Find more information on available border radius classes on the [Border Radius page](/styles/border-radius)."
      },
      "descriptionSource": {
        "en": "rounded"
      }
    },
    "tile": {
      "text": "boolean | undefined",
      "source": "rounded",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Removes any applied **border-radius** from the component."
      },
      "descriptionSource": {
        "en": "rounded"
      }
    },
    "theme": {
      "text": "string | undefined",
      "source": "theme",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Specify a theme for this component and all of its children."
      },
      "descriptionSource": {
        "en": "theme"
      }
    },
    "disabled": {
      "text": "boolean | undefined",
      "source": "VCard",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Removes the ability to click or target the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "height": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "maxHeight": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the maximum height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "maxWidth": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the maximum width for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "minHeight": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the minimum height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "minWidth": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the minimum width for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "width": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the width for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "border": {
      "text": "string | number | boolean | undefined",
      "source": "border",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Applies utility border classes to the component. To use it, you need to omit the `border-` prefix, (for example use `border-sm` as `border=\"sm\"`).  Find a list of the built-in border classes on the [borders page](/styles/borders)."
      },
      "descriptionSource": {
        "en": "border"
      }
    },
    "density": {
      "text": "Density | undefined",
      "source": "density",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "Density",
          "source": "vuetify/src/composables/density.ts#L12-L12",
          "type": "anyOf",
          "items": [
            {
              "text": "null",
              "type": "UNSUPPORTED",
              "formatted": "null"
            },
            {
              "text": "\"default\"",
              "type": "string",
              "literal": "\"default\"",
              "formatted": "\"default\""
            },
            {
              "text": "\"comfortable\"",
              "type": "string",
              "literal": "\"comfortable\"",
              "formatted": "\"comfortable\""
            },
            {
              "text": "\"compact\"",
              "type": "string",
              "literal": "\"compact\"",
              "formatted": "\"compact\""
            }
          ],
          "formatted": "\"default\" | \"comfortable\" | \"compact\""
        }
      ],
      "formatted": "'default' | 'comfortable' | 'compact'\n",
      "optional": false,
      "default": "'default'",
      "description": {
        "en": "Adjusts the vertical height used by the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "elevation": {
      "text": "string | number | undefined",
      "source": "elevation",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
      },
      "descriptionSource": {
        "en": "elevation"
      }
    },
    "variant": {
      "text": "\"flat\" | \"elevated\" | \"tonal\" | \"outlined\" | \"text\" | \"plain\" | undefined",
      "source": "variant",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "\"flat\"",
          "type": "string",
          "literal": "\"flat\"",
          "formatted": "\"flat\""
        },
        {
          "text": "\"elevated\"",
          "type": "string",
          "literal": "\"elevated\"",
          "formatted": "\"elevated\""
        },
        {
          "text": "\"tonal\"",
          "type": "string",
          "literal": "\"tonal\"",
          "formatted": "\"tonal\""
        },
        {
          "text": "\"outlined\"",
          "type": "string",
          "literal": "\"outlined\"",
          "formatted": "\"outlined\""
        },
        {
          "text": "\"text\"",
          "type": "string",
          "literal": "\"text\"",
          "formatted": "\"text\""
        },
        {
          "text": "\"plain\"",
          "type": "string",
          "literal": "\"plain\"",
          "formatted": "\"plain\""
        }
      ],
      "formatted": "'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'\n",
      "optional": false,
      "default": "'elevated'",
      "description": {
        "en": "Applies a distinct style to the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "text": {
      "text": "string | number | boolean | undefined",
      "source": "VCard",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "description": {
        "en": "Specify content text for the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "subtitle": {
      "text": "string | number | boolean | undefined",
      "source": "VCard",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "description": {
        "en": "Specify a subtitle text for the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "image": {
      "text": "string | undefined",
      "source": "VCard",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Apply a specific background image to the component."
      },
      "descriptionSource": {
        "en": "VCard"
      }
    },
    "appendAvatar": {
      "text": "string | undefined",
      "source": "VCard",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "appendIcon": {
      "text": "IconValue | undefined",
      "source": "VCard",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "IconValue",
          "source": "vuetify/src/composables/icons.tsx#L12-L15",
          "type": "anyOf",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "(string | [path: string, opacity: number])[]",
              "source": "typescript/lib/lib.es5.d.ts#L4-L4",
              "type": "array",
              "items": [
                {
                  "text": "string",
                  "type": "string",
                  "formatted": "string"
                },
                {
                  "text": "[path: string, opacity: number]",
                  "type": "array",
                  "items": [
                    {
                      "text": "string",
                      "type": "string",
                      "formatted": "string"
                    },
                    {
                      "text": "number",
                      "type": "number",
                      "formatted": "number"
                    }
                  ],
                  "length": 2,
                  "formatted": "[string, number]"
                }
              ],
              "formatted": "(string | [string, number])[]"
            },
            {
              "text": "JSXComponent",
              "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
              "type": "anyOf",
              "items": [
                {
                  "text": "new () => any",
                  "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
                  "type": "constructor",
                  "formatted": "new () => any"
                },
                {
                  "text": "FunctionalComponent<any, {}, any, {}>",
                  "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
                  "type": "ref",
                  "ref": "FunctionalComponent",
                  "formatted": "FunctionalComponent"
                }
              ],
              "formatted": "(new () => any) | FunctionalComponent"
            }
          ],
          "formatted": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
        }
      ],
      "formatted": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n",
      "optional": false,
      "description": {
        "en": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "hover": {
      "text": "boolean | undefined",
      "source": "VCard",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Applies **4dp** of elevation when hovered (default 2dp). You can find more information on the [elevation page](/styles/elevation)."
      },
      "descriptionSource": {
        "en": "VCard"
      }
    },
    "prependAvatar": {
      "text": "string | undefined",
      "source": "VCard",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "prependIcon": {
      "text": "IconValue | undefined",
      "source": "VCard",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "IconValue",
          "source": "vuetify/src/composables/icons.tsx#L12-L15",
          "type": "anyOf",
          "items": [
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            },
            {
              "text": "(string | [path: string, opacity: number])[]",
              "source": "typescript/lib/lib.es5.d.ts#L4-L4",
              "type": "array",
              "items": [
                {
                  "text": "string",
                  "type": "string",
                  "formatted": "string"
                },
                {
                  "text": "[path: string, opacity: number]",
                  "type": "array",
                  "items": [
                    {
                      "text": "string",
                      "type": "string",
                      "formatted": "string"
                    },
                    {
                      "text": "number",
                      "type": "number",
                      "formatted": "number"
                    }
                  ],
                  "length": 2,
                  "formatted": "[string, number]"
                }
              ],
              "formatted": "(string | [string, number])[]"
            },
            {
              "text": "JSXComponent",
              "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
              "type": "anyOf",
              "items": [
                {
                  "text": "new () => any",
                  "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
                  "type": "constructor",
                  "formatted": "new () => any"
                },
                {
                  "text": "FunctionalComponent<any, {}, any, {}>",
                  "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
                  "type": "ref",
                  "ref": "FunctionalComponent",
                  "formatted": "FunctionalComponent"
                }
              ],
              "formatted": "(new () => any) | FunctionalComponent"
            }
          ],
          "formatted": "string | (string | [string, number])[] | (new () => any) | FunctionalComponent"
        }
      ],
      "formatted": "  | string\n  | (string | [string, number])[]\n  | (new () => any)\n  | FunctionalComponent\n",
      "optional": false,
      "description": {
        "en": "Prepends a [v-icon](/components/icons/) component to the header."
      },
      "descriptionSource": {
        "en": "VCard"
      }
    },
    "ripple": {
      "text": "boolean | { class: string; } | undefined",
      "source": "VCard",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        },
        {
          "text": "{ class: string; }",
          "source": "vuetify/src/directives/ripple/index.ts#L28-L28",
          "type": "object",
          "properties": {
            "class": {
              "text": "string",
              "type": "string",
              "formatted": "string",
              "optional": false
            }
          },
          "formatted": "{ class: string }"
        }
      ],
      "formatted": "boolean | { class: string }\n",
      "optional": false,
      "default": true,
      "description": {
        "en": "Applies the [v-ripple](/directives/ripple) directive."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "loading": {
      "text": "string | boolean | undefined",
      "source": "loader",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color."
      },
      "descriptionSource": {
        "en": "loader"
      }
    },
    "position": {
      "text": "\"fixed\" | \"absolute\" | \"static\" | \"relative\" | \"sticky\" | undefined",
      "source": "position",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "\"fixed\"",
          "type": "string",
          "literal": "\"fixed\"",
          "formatted": "\"fixed\""
        },
        {
          "text": "\"absolute\"",
          "type": "string",
          "literal": "\"absolute\"",
          "formatted": "\"absolute\""
        },
        {
          "text": "\"static\"",
          "type": "string",
          "literal": "\"static\"",
          "formatted": "\"static\""
        },
        {
          "text": "\"relative\"",
          "type": "string",
          "literal": "\"relative\"",
          "formatted": "\"relative\""
        },
        {
          "text": "\"sticky\"",
          "type": "string",
          "literal": "\"sticky\"",
          "formatted": "\"sticky\""
        }
      ],
      "formatted": "'fixed' | 'absolute' | 'static' | 'relative' | 'sticky'\n",
      "optional": false,
      "description": {
        "en": "Sets the position for the component."
      },
      "descriptionSource": {
        "en": "position"
      }
    },
    "href": {
      "text": "string | undefined",
      "source": "router",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Designates the component as anchor and applies the **href** attribute."
      },
      "descriptionSource": {
        "en": "router"
      }
    },
    "exact": {
      "text": "boolean | undefined",
      "source": "router",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation."
      },
      "descriptionSource": {
        "en": "router"
      }
    },
    "to": {
      "text": "string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric | undefined",
      "source": "router",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "RouteLocationAsRelativeGeneric",
          "source": "vue-router/dist/vue-router.d.ts#L606-L613",
          "type": "ref",
          "ref": "RouteLocationAsRelativeGeneric",
          "formatted": "RouteLocationAsRelativeGeneric"
        },
        {
          "text": "RouteLocationAsPathGeneric",
          "source": "vue-router/dist/vue-router.d.ts#L575-L580",
          "type": "ref",
          "ref": "RouteLocationAsPathGeneric",
          "formatted": "RouteLocationAsPathGeneric"
        }
      ],
      "formatted": "string | RouteLocationAsRelativeGeneric | RouteLocationAsPathGeneric\n",
      "optional": false,
      "description": {
        "en": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation."
      },
      "descriptionSource": {
        "en": "router"
      }
    }
  },
  "events": {},
  "slots": {
    "default": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "The default Vue slot."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "prepend": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "Adds an item outside the input and before input content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "append": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "Adds an item inside the input and after input content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "title": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "Slot for the component's title content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "subtitle": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "Slot for the component's subtitle content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "actions": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "The slot used for the card actions; located at the bottom of the card."
      },
      "descriptionSource": {
        "en": "VCard"
      }
    },
    "text": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "Slot for the component's text content."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "loader": {
      "text": "LoaderSlotProps",
      "source": "vuetify/src/composables/loader.tsx#L12-L15",
      "type": "object",
      "properties": {
        "color": {
          "text": "string | undefined",
          "type": "anyOf",
          "items": [
            {
              "text": "undefined",
              "type": "UNSUPPORTED",
              "formatted": "undefined"
            },
            {
              "text": "string",
              "type": "string",
              "formatted": "string"
            }
          ],
          "formatted": "string",
          "optional": false
        },
        "isActive": {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean",
          "optional": false
        }
      },
      "formatted": "{ color: string; isActive: boolean }\n",
      "optional": false,
      "description": {
        "en": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true)."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "image": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "The slot used for the card image. This is used with the [image](#props-image) prop."
      },
      "descriptionSource": {
        "en": "VCard"
      }
    },
    "item": {
      "text": "never",
      "type": "never",
      "formatted": "never\n",
      "optional": false,
      "description": {
        "en": "Define a custom item appearance."
      },
      "descriptionSource": {
        "en": "generic"
      }
    }
  },
  "exposed": {},
  "sass": {
    "$card-append-padding-inline-start": {
      "default": ".5rem"
    },
    "$card-background": {
      "default": "rgb(var(--v-theme-surface))"
    },
    "$card-border-color": {
      "default": "settings.$border-color-root"
    },
    "$card-border-radius": {
      "default": "settings.$border-radius-root"
    },
    "$card-border-style": {
      "default": "settings.$border-style-root"
    },
    "$card-border-thin-width": {
      "default": "thin"
    },
    "$card-border-width": {
      "default": "0"
    },
    "$card-color": {
      "default": "rgba(var(--v-theme-on-surface), var(--v-high-emphasis-opacity))"
    },
    "$card-disabled-opacity": {
      "default": "0.6"
    },
    "$card-elevation": {
      "default": "1"
    },
    "$card-loader-top": {
      "default": "0"
    },
    "$card-loader-bottom": {
      "default": "auto"
    },
    "$card-hover-elevation": {
      "default": "8"
    },
    "$card-img-flex": {
      "default": "1 1 auto"
    },
    "$card-item-align-items": {
      "default": "center"
    },
    "$card-item-padding": {
      "default": ".625rem 1rem"
    },
    "$card-overflow-wrap": {
      "default": "break-word"
    },
    "$card-padding": {
      "default": "0"
    },
    "$card-plain-opacity": {
      "default": ".62"
    },
    "$card-positions": {
      "default": "absolute fixed"
    },
    "$card-prepend-padding-inline-end": {
      "default": ".5rem"
    },
    "$card-transition-duration": {
      "default": "0.28s"
    },
    "$card-transition-property": {
      "default": "box-shadow, opacity, background"
    },
    "$card-transition-timing-function": {
      "default": "settings.$standard-easing"
    },
    "$card-actions-flex": {
      "default": "none"
    },
    "$card-actions-min-height": {
      "default": "52px"
    },
    "$card-actions-padding": {
      "default": ".5rem"
    },
    "$button-card-actions-margin": {
      "default": ".5rem"
    },
    "$card-header-flex": {
      "default": "none"
    },
    "$card-title-comfortable-line-height": {
      "default": "1.75rem"
    },
    "$card-title-compact-line-height": {
      "default": "1.55rem"
    },
    "$card-title-flex": {
      "default": "none"
    },
    "$card-title-font-size": {
      "default": "tools.map-deep-get(settings.$typography, 'h6', 'size')"
    },
    "$card-title-font-weight": {
      "default": "tools.map-deep-get(settings.$typography, 'h6', 'weight')"
    },
    "$card-title-header-padding": {
      "default": "0"
    },
    "$card-title-hyphens": {
      "default": "auto"
    },
    "$card-title-letter-spacing": {
      "default": "tools.map-deep-get(settings.$typography, 'h6', 'letter-spacing')"
    },
    "$card-title-line-height": {
      "default": "tools.map-deep-get(settings.$typography, 'h6', 'line-height')"
    },
    "$card-title-overflow-wrap": {
      "default": "normal"
    },
    "$card-title-overflow": {
      "default": "hidden"
    },
    "$card-title-padding": {
      "default": ".5rem 1rem"
    },
    "$card-title-text-overflow": {
      "default": "ellipsis"
    },
    "$card-title-text-transform": {
      "default": "none"
    },
    "$card-title-white-space": {
      "default": "nowrap"
    },
    "$card-title-word-break": {
      "default": "normal"
    },
    "$card-title-word-wrap": {
      "default": "break-word"
    },
    "$card-subtitle-color": {
      "default": "rgba(var(--v-theme-on-surface), var(--v-medium-emphasis-opacity))"
    },
    "$card-subtitle-comfortable-line-height": {
      "default": "1.125rem"
    },
    "$card-subtitle-compact-line-height": {
      "default": "1rem"
    },
    "$card-subtitle-flex": {
      "default": "none"
    },
    "$card-subtitle-font-size": {
      "default": "tools.map-deep-get(settings.$typography, 'body-2', 'size')"
    },
    "$card-subtitle-font-weight": {
      "default": "tools.map-deep-get(settings.$typography, 'body-2', 'weight')"
    },
    "$card-subtitle-header-padding": {
      "default": "0 0 .25rem"
    },
    "$card-subtitle-letter-spacing": {
      "default": "tools.map-deep-get(settings.$typography, 'body-2', 'letter-spacing')"
    },
    "$card-subtitle-line-height": {
      "default": "tools.map-deep-get(settings.$typography, 'body-2', 'line-height')"
    },
    "$card-subtitle-opacity": {
      "default": "var(--v-card-subtitle-opacity, var(--v-medium-emphasis-opacity))"
    },
    "$card-subtitle-overflow": {
      "default": "hidden"
    },
    "$card-subtitle-padding": {
      "default": "0 1rem"
    },
    "$card-subtitle-text-overflow": {
      "default": "ellipsis"
    },
    "$card-subtitle-text-transform": {
      "default": "none"
    },
    "$card-subtitle-white-space": {
      "default": "nowrap"
    },
    "$card-text-comfortable-line-height": {
      "default": "1.2rem"
    },
    "$card-text-compact-line-height": {
      "default": "1.15rem"
    },
    "$card-text-flex": {
      "default": "1 1 auto"
    },
    "$card-text-font-size": {
      "default": "tools.map-deep-get(settings.$typography, 'body-2', 'size')"
    },
    "$card-text-font-weight": {
      "default": "tools.map-deep-get(settings.$typography, 'body-2', 'weight')"
    },
    "$card-text-opacity": {
      "default": "var(--v-card-text-opacity, 1)"
    },
    "$card-text-letter-spacing": {
      "default": "tools.map-deep-get(settings.$typography, 'body-2', 'letter-spacing')"
    },
    "$card-text-line-height": {
      "default": "tools.map-deep-get(settings.$typography, 'body-2', 'line-height')"
    },
    "$card-text-padding": {
      "default": "1rem"
    },
    "$card-text-text-transform": {
      "default": "tools.map-deep-get(settings.$typography, 'body-2', 'text-transform')"
    },
    "$card-border": {
      "default": "(\n  $card-border-color,\n  $card-border-style,\n  $card-border-width,\n  $card-border-thin-width\n)"
    },
    "$card-title-densities": {
      "default": "map.merge((\n  null: $card-title-line-height,\n  'comfortable': $card-title-comfortable-line-height,\n  'compact': $card-title-compact-line-height\n), $card-title-densities)"
    },
    "$card-subtitle-density-line-height": {
      "default": "map.merge((\n  null: $card-subtitle-line-height,\n  'comfortable': $card-subtitle-comfortable-line-height,\n  'compact': $card-subtitle-compact-line-height\n), $card-subtitle-density-line-height)"
    },
    "$card-text-density-line-height": {
      "default": "map.merge((\n  null: $card-text-line-height,\n  'comfortable': $card-text-comfortable-line-height,\n  'compact': $card-text-compact-line-height\n), $card-text-density-line-height)"
    },
    "$card-variants": {
      "default": "(\n  $card-background,\n  $card-color,\n  $card-elevation,\n  $card-plain-opacity,\n  'v-card'\n)"
    },
    "$card-avatar-align-self": {
      "default": "flex-start"
    },
    "$card-avatar-header-padding": {
      "default": "0"
    },
    "$card-avatar-padding": {
      "default": ".5rem 1rem"
    },
    "$card-title-padding-top": {
      "default": "1rem"
    },
    "$card-text-padding-bottom": {
      "default": "1rem"
    }
  }
}