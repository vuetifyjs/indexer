{
  "displayName": "VColorPicker",
  "fileName": "VColorPicker",
  "pathName": "v-color-picker",
  "props": {
    "title": {
      "text": "string | undefined",
      "source": "VPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Specify a title text for the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "border": {
      "text": "string | number | boolean | undefined",
      "source": "border",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Applies utility border classes to the component. To use it, you need to omit the `border-` prefix, (for example use `border-sm` as `border=\"sm\"`).  Find a list of the built-in border classes on the [borders page](/styles/borders)."
      },
      "descriptionSource": {
        "en": "border"
      }
    },
    "modelValue": {
      "text": "string | Record<string, unknown> | null | undefined",
      "source": "VColorPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "null",
          "type": "UNSUPPORTED",
          "formatted": "null"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "Record<string, unknown>",
          "source": "typescript/lib/lib.es5.d.ts#L6-L6",
          "type": "record",
          "key": {
            "text": "string",
            "type": "string",
            "formatted": "string"
          },
          "value": {
            "text": "unknown",
            "type": "unknown",
            "formatted": "unknown"
          },
          "formatted": "Record<string, unknown>"
        }
      ],
      "formatted": "string | Record<string, unknown>\n",
      "optional": false,
      "description": {
        "en": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "height": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "maxHeight": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the maximum height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "maxWidth": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the maximum width for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "minHeight": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the minimum height for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "minWidth": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the minimum width for the component."
      },
      "descriptionSource": {
        "en": "dimension"
      }
    },
    "width": {
      "text": "string | number | undefined",
      "source": "dimension",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Sets the width of the color picker."
      },
      "descriptionSource": {
        "en": "VColorPicker"
      }
    },
    "elevation": {
      "text": "string | number | undefined",
      "source": "elevation",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "description": {
        "en": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation)."
      },
      "descriptionSource": {
        "en": "elevation"
      }
    },
    "location": {
      "text": "Anchor | null | undefined",
      "source": "location",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "null",
          "type": "UNSUPPORTED",
          "formatted": "null"
        },
        {
          "text": "Anchor",
          "source": "vuetify/src/util/anchor.ts#L8-L14",
          "type": "ref",
          "ref": "Anchor",
          "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
        }
      ],
      "formatted": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>\n",
      "optional": false,
      "description": {
        "en": "Specifies the component's location. Can combine by using a space separated string."
      },
      "descriptionSource": {
        "en": "location"
      }
    },
    "position": {
      "text": "\"fixed\" | \"static\" | \"relative\" | \"absolute\" | \"sticky\" | undefined",
      "source": "position",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "\"fixed\"",
          "type": "string",
          "literal": "\"fixed\"",
          "formatted": "\"fixed\""
        },
        {
          "text": "\"static\"",
          "type": "string",
          "literal": "\"static\"",
          "formatted": "\"static\""
        },
        {
          "text": "\"relative\"",
          "type": "string",
          "literal": "\"relative\"",
          "formatted": "\"relative\""
        },
        {
          "text": "\"absolute\"",
          "type": "string",
          "literal": "\"absolute\"",
          "formatted": "\"absolute\""
        },
        {
          "text": "\"sticky\"",
          "type": "string",
          "literal": "\"sticky\"",
          "formatted": "\"sticky\""
        }
      ],
      "formatted": "'fixed' | 'static' | 'relative' | 'absolute' | 'sticky'\n",
      "optional": false,
      "description": {
        "en": "Sets the position for the component."
      },
      "descriptionSource": {
        "en": "position"
      }
    },
    "rounded": {
      "text": "string | number | boolean | undefined",
      "source": "rounded",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "string | number | boolean\n",
      "optional": false,
      "description": {
        "en": "Designates the **border-radius** applied to the component. This can be **0**, **xs**, **sm**, true, **lg**, **xl**, **pill**, **circle**, and **shaped**. Find more information on available border radius classes on the [Border Radius page](/styles/border-radius)."
      },
      "descriptionSource": {
        "en": "rounded"
      }
    },
    "tile": {
      "text": "boolean | undefined",
      "source": "rounded",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Removes any applied **border-radius** from the component."
      },
      "descriptionSource": {
        "en": "rounded"
      }
    },
    "tag": {
      "text": "string | JSXComponent | undefined",
      "source": "tag",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "JSXComponent",
          "source": "vuetify/src/util/defineComponent.tsx#L331-L333",
          "type": "anyOf",
          "items": [
            {
              "text": "new () => any",
              "source": "vuetify/src/util/defineComponent.tsx#L332-L332",
              "type": "constructor",
              "formatted": "new () => any"
            },
            {
              "text": "FunctionalComponent<any, {}, any, {}>",
              "source": "@vue/runtime-core/dist/runtime-core.d.ts#L1385-L1393",
              "type": "ref",
              "ref": "FunctionalComponent",
              "formatted": "FunctionalComponent"
            }
          ],
          "formatted": "(new () => any) | FunctionalComponent"
        }
      ],
      "formatted": "string | (new () => any) | FunctionalComponent\n",
      "optional": false,
      "default": "'div'",
      "description": {
        "en": "Specify a custom tag used on the root element."
      },
      "descriptionSource": {
        "en": "tag"
      }
    },
    "theme": {
      "text": "string | undefined",
      "source": "theme",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Specify a theme for this component and all of its children."
      },
      "descriptionSource": {
        "en": "theme"
      }
    },
    "color": {
      "text": "string | undefined",
      "source": "VSheet",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "disabled": {
      "text": "boolean | undefined",
      "source": "VColorPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Removes the ability to click or target the component."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "hideHeader": {
      "text": "boolean | undefined",
      "source": "VPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": true,
      "description": {
        "en": "Hide the picker header."
      },
      "descriptionSource": {
        "en": "VPicker"
      }
    },
    "canvasHeight": {
      "text": "string | number | undefined",
      "source": "VColorPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "default": 150,
      "description": {
        "en": "Height of canvas."
      },
      "descriptionSource": {
        "en": "VColorPicker"
      }
    },
    "dotSize": {
      "text": "string | number | undefined",
      "source": "VColorPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "default": 10,
      "description": {
        "en": "Changes the size of the selection dot on the canvas."
      },
      "descriptionSource": {
        "en": "VColorPicker"
      }
    },
    "hideCanvas": {
      "text": "boolean | undefined",
      "source": "VColorPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Hides canvas."
      },
      "descriptionSource": {
        "en": "VColorPicker"
      }
    },
    "hideSliders": {
      "text": "boolean | undefined",
      "source": "VColorPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Hides sliders."
      },
      "descriptionSource": {
        "en": "VColorPicker"
      }
    },
    "hideInputs": {
      "text": "boolean | undefined",
      "source": "VColorPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Hides inputs."
      },
      "descriptionSource": {
        "en": "VColorPicker"
      }
    },
    "mode": {
      "text": "\"rgb\" | \"rgba\" | \"hsl\" | \"hsla\" | \"hex\" | \"hexa\" | undefined",
      "source": "VColorPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "\"rgb\"",
          "type": "string",
          "literal": "\"rgb\"",
          "formatted": "\"rgb\""
        },
        {
          "text": "\"rgba\"",
          "type": "string",
          "literal": "\"rgba\"",
          "formatted": "\"rgba\""
        },
        {
          "text": "\"hsl\"",
          "type": "string",
          "literal": "\"hsl\"",
          "formatted": "\"hsl\""
        },
        {
          "text": "\"hsla\"",
          "type": "string",
          "literal": "\"hsla\"",
          "formatted": "\"hsla\""
        },
        {
          "text": "\"hex\"",
          "type": "string",
          "literal": "\"hex\"",
          "formatted": "\"hex\""
        },
        {
          "text": "\"hexa\"",
          "type": "string",
          "literal": "\"hexa\"",
          "formatted": "\"hexa\""
        }
      ],
      "formatted": "'rgb' | 'rgba' | 'hsl' | 'hsla' | 'hex' | 'hexa'\n",
      "optional": false,
      "default": "'rgba'",
      "description": {
        "en": "The current selected input type. Syncable with `v-model:mode`."
      },
      "descriptionSource": {
        "en": "VColorPicker"
      }
    },
    "modes": {
      "text": "readonly (\"rgb\" | \"rgba\" | \"hsl\" | \"hsla\" | \"hex\" | \"hexa\")[] | undefined",
      "source": "VColorPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "readonly (\"rgb\" | \"rgba\" | \"hsl\" | \"hsla\" | \"hex\" | \"hexa\")[]",
          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
          "type": "array",
          "items": [
            {
              "text": "\"rgb\"",
              "type": "string",
              "literal": "\"rgb\"",
              "formatted": "\"rgb\""
            },
            {
              "text": "\"rgba\"",
              "type": "string",
              "literal": "\"rgba\"",
              "formatted": "\"rgba\""
            },
            {
              "text": "\"hsl\"",
              "type": "string",
              "literal": "\"hsl\"",
              "formatted": "\"hsl\""
            },
            {
              "text": "\"hsla\"",
              "type": "string",
              "literal": "\"hsla\"",
              "formatted": "\"hsla\""
            },
            {
              "text": "\"hex\"",
              "type": "string",
              "literal": "\"hex\"",
              "formatted": "\"hex\""
            },
            {
              "text": "\"hexa\"",
              "type": "string",
              "literal": "\"hexa\"",
              "formatted": "\"hexa\""
            }
          ],
          "formatted": "(\"rgb\" | \"rgba\" | \"hsl\" | \"hsla\" | \"hex\" | \"hexa\")[]"
        }
      ],
      "formatted": "('rgb' | 'rgba' | 'hsl' | 'hsla' | 'hex' | 'hexa')[]\n",
      "optional": false,
      "default": "['rgb', 'rgba', 'hsl', 'hsla', 'hex', 'hexa']",
      "description": {
        "en": "Sets available input types."
      },
      "descriptionSource": {
        "en": "VColorPicker"
      }
    },
    "showSwatches": {
      "text": "boolean | undefined",
      "source": "VColorPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Displays color swatches."
      },
      "descriptionSource": {
        "en": "VColorPicker"
      }
    },
    "swatchesMaxHeight": {
      "text": "string | number | undefined",
      "source": "VColorPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        },
        {
          "text": "number",
          "type": "number",
          "formatted": "number"
        }
      ],
      "formatted": "string | number\n",
      "optional": false,
      "default": 150,
      "description": {
        "en": "Sets the maximum height of the swatches section."
      },
      "descriptionSource": {
        "en": "VColorPicker"
      }
    },
    "bgColor": {
      "text": "string | undefined",
      "source": "VPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "string",
          "type": "string",
          "formatted": "string"
        }
      ],
      "formatted": "string\n",
      "optional": false,
      "description": {
        "en": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors)."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "divided": {
      "text": "boolean | undefined",
      "source": "VPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Adds a divider between the header and controls."
      },
      "descriptionSource": {
        "en": "VPicker"
      }
    },
    "landscape": {
      "text": "boolean | undefined",
      "source": "VPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "boolean",
          "type": "boolean",
          "formatted": "boolean"
        }
      ],
      "formatted": "boolean\n",
      "optional": false,
      "default": false,
      "description": {
        "en": "Puts the picker into landscape mode."
      },
      "descriptionSource": {
        "en": "VPicker"
      }
    },
    "swatches": {
      "text": "readonly (readonly (string | number | { readonly h: number; readonly s: number; readonly v: number; readonly a?: number | undefined; } | { readonly r: number; readonly g: number; readonly b: number; readonly a?: number | undefined; } | { readonly h: number; readonly s: number; readonly l: number; readonly a?: number | undefined; })[])[] | undefined",
      "source": "VColorPicker",
      "type": "anyOf",
      "items": [
        {
          "text": "undefined",
          "type": "UNSUPPORTED",
          "formatted": "undefined"
        },
        {
          "text": "readonly (readonly (string | number | { readonly h: number; readonly s: number; readonly v: number; readonly a?: number | undefined; } | { readonly r: number; readonly g: number; readonly b: number; readonly a?: number | undefined; } | { readonly h: number; readonly s: number; readonly l: number; readonly a?: number | undefined; })[])[]",
          "source": "typescript/lib/lib.es5.d.ts#L4-L4",
          "type": "array",
          "items": [
            {
              "text": "readonly (string | number | { readonly h: number; readonly s: number; readonly v: number; readonly a?: number | undefined; } | { readonly r: number; readonly g: number; readonly b: number; readonly a?: number | undefined; } | { readonly h: number; readonly s: number; readonly l: number; readonly a?: number | undefined; })[]",
              "source": "typescript/lib/lib.es5.d.ts#L4-L4",
              "type": "array",
              "items": [
                {
                  "text": "string",
                  "type": "ref",
                  "ref": "",
                  "formatted": "string"
                },
                {
                  "text": "number",
                  "type": "ref",
                  "ref": "",
                  "formatted": "number"
                },
                {
                  "text": "{ readonly h: number; readonly s: number; readonly v: number; readonly a?: number | undefined; }",
                  "source": "@vue/reactivity/dist/reactivity.d.ts#L82-L84",
                  "type": "ref",
                  "ref": "__type",
                  "formatted": "{ readonly h: number; readonly s: number; readonly v: number; readonly a?: number | undefined; }"
                },
                {
                  "text": "{ readonly r: number; readonly g: number; readonly b: number; readonly a?: number | undefined; }",
                  "source": "@vue/reactivity/dist/reactivity.d.ts#L82-L84",
                  "type": "ref",
                  "ref": "__type",
                  "formatted": "{ readonly r: number; readonly g: number; readonly b: number; readonly a?: number | undefined; }"
                },
                {
                  "text": "{ readonly h: number; readonly s: number; readonly l: number; readonly a?: number | undefined; }",
                  "source": "@vue/reactivity/dist/reactivity.d.ts#L82-L84",
                  "type": "ref",
                  "ref": "__type",
                  "formatted": "{ readonly h: number; readonly s: number; readonly l: number; readonly a?: number | undefined; }"
                }
              ],
              "formatted": "(string | number | { readonly h: number; readonly s: number; readonly v: number; readonly a?: number | undefined; } | { readonly r: number; readonly g: number; readonly b: number; readonly a?: number | undefined; } | { readonly h: number; readonly s: number; readonly l: number; readonly a?: number | undefined; })[]"
            }
          ],
          "formatted": "(string | number | { readonly h: number; readonly s: number; readonly v: number; readonly a?: number | undefined; } | { readonly r: number; readonly g: number; readonly b: number; readonly a?: number | undefined; } | { readonly h: number; readonly s: number; readonly l: number; readonly a?: number | undefined; })[][]"
        }
      ],
      "formatted": "(\n  | string\n  | number\n  | {\n      readonly h: number\n      readonly s: number\n      readonly v: number\n      readonly a?: number | undefined\n    }\n  | {\n      readonly r: number\n      readonly g: number\n      readonly b: number\n      readonly a?: number | undefined\n    }\n  | {\n      readonly h: number\n      readonly s: number\n      readonly l: number\n      readonly a?: number | undefined\n    }\n)[][]\n",
      "optional": false,
      "description": {
        "en": "Sets the available color swatches to select from. 2D array of rows and columns, accepts any color format the picker does."
      },
      "descriptionSource": {
        "en": "VColorPicker"
      }
    }
  },
  "events": {
    "update:modelValue": {
      "text": "[color: any]",
      "type": "array",
      "items": [
        {
          "text": "any",
          "type": "any",
          "formatted": "any"
        }
      ],
      "length": 1,
      "formatted": "[any]\n",
      "optional": false,
      "description": {
        "en": "Event that is emitted when the component's model changes."
      },
      "descriptionSource": {
        "en": "generic"
      }
    },
    "update:mode": {
      "text": "[mode: \"rgb\" | \"rgba\" | \"hsl\" | \"hsla\" | \"hex\" | \"hexa\"]",
      "type": "array",
      "items": [
        {
          "text": "\"rgb\" | \"rgba\" | \"hsl\" | \"hsla\" | \"hex\" | \"hexa\"",
          "type": "anyOf",
          "items": [
            {
              "text": "\"rgb\"",
              "type": "string",
              "literal": "\"rgb\"",
              "formatted": "\"rgb\""
            },
            {
              "text": "\"rgba\"",
              "type": "string",
              "literal": "\"rgba\"",
              "formatted": "\"rgba\""
            },
            {
              "text": "\"hsl\"",
              "type": "string",
              "literal": "\"hsl\"",
              "formatted": "\"hsl\""
            },
            {
              "text": "\"hsla\"",
              "type": "string",
              "literal": "\"hsla\"",
              "formatted": "\"hsla\""
            },
            {
              "text": "\"hex\"",
              "type": "string",
              "literal": "\"hex\"",
              "formatted": "\"hex\""
            },
            {
              "text": "\"hexa\"",
              "type": "string",
              "literal": "\"hexa\"",
              "formatted": "\"hexa\""
            }
          ],
          "formatted": "\"rgb\" | \"rgba\" | \"hsl\" | \"hsla\" | \"hex\" | \"hexa\""
        }
      ],
      "length": 1,
      "formatted": "['rgb' | 'rgba' | 'hsl' | 'hsla' | 'hex' | 'hexa']\n",
      "optional": false,
      "description": {
        "en": "Selected mode."
      },
      "descriptionSource": {
        "en": "VColorPicker"
      }
    }
  },
  "exposed": {},
  "sass": {
    "$color-picker-border-radius": {
      "default": "4px"
    },
    "$color-picker-checkerboard": {
      "default": "url(data:image/png"
    },
    "$color-picker-controls-padding": {
      "default": "16px"
    },
    "$color-picker-elevation": {
      "default": "2"
    },
    "$color-picker-input-font-size": {
      "default": "0.75rem"
    },
    "$color-picker-input-height": {
      "default": "32px"
    },
    "$color-picker-input-margin": {
      "default": "8px"
    },
    "$color-picker-preview-margin-bottom": {
      "default": "0"
    },
    "$color-picker-input-margin-bottom": {
      "default": "8px"
    },
    "$color-picker-input-margin-top": {
      "default": "24px"
    },
    "$color-picker-width": {
      "default": "300px"
    },
    "$color-picker-swatch-color-border-radius": {
      "default": "2px"
    },
    "$color-picker-swatch-color-height": {
      "default": "18px"
    },
    "$color-picker-swatch-color-margin": {
      "default": "2px 4px"
    },
    "$color-picker-swatch-color-width": {
      "default": "45px"
    },
    "$color-picker-swatch-margin-bottom": {
      "default": "10px"
    },
    "$color-picker-swatches-border-radius": {
      "default": "8px"
    },
    "$color-picker-canvas-dot-box-shadow": {
      "default": "0px 0px 0px 1.5px rgba(255, 255, 255, 1), inset 0px 0px 1px 1.5px rgba(0, 0, 0, 0.3)"
    },
    "$color-picker-canvas-dot-disabled-box-shadow": {
      "default": "0px 0px 0px 1.5px rgba(255, 255, 255, 0.7), inset 0px 0px 1px 1.5px rgba(0, 0, 0, 0.3)"
    },
    "$color-picker-canvas-dot-size": {
      "default": "15px"
    },
    "$color-picker-preview-dot-size": {
      "default": "30px"
    },
    "$color-picker-preview-dot-margin": {
      "default": "24px"
    },
    "$color-picker-preview-dropper-margin": {
      "default": "12px"
    },
    "$color-picker-preview-sliders-padding": {
      "default": "16px"
    }
  }
}